!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Go	package	/the real package specified by the package name/
!_TAG_FIELD_DESCRIPTION!Go	packageName	/the name for referring the package/
!_TAG_FIELD_DESCRIPTION!XML	uri	/uri associated with name prefix/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!CSS	c,class	/classes/
!_TAG_KIND_DESCRIPTION!CSS	i,id	/identities/
!_TAG_KIND_DESCRIPTION!CSS	s,selector	/selectors/
!_TAG_KIND_DESCRIPTION!Go	M,anonMember	/struct anonymous members/
!_TAG_KIND_DESCRIPTION!Go	P,packageName	/name for specifying imported package/
!_TAG_KIND_DESCRIPTION!Go	Y,unknown	/unknown/
!_TAG_KIND_DESCRIPTION!Go	a,talias	/type aliases/
!_TAG_KIND_DESCRIPTION!Go	c,const	/constants/
!_TAG_KIND_DESCRIPTION!Go	f,func	/functions/
!_TAG_KIND_DESCRIPTION!Go	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!Go	m,member	/struct members/
!_TAG_KIND_DESCRIPTION!Go	n,methodSpec	/interface method specification/
!_TAG_KIND_DESCRIPTION!Go	p,package	/packages/
!_TAG_KIND_DESCRIPTION!Go	s,struct	/structs/
!_TAG_KIND_DESCRIPTION!Go	t,type	/types/
!_TAG_KIND_DESCRIPTION!Go	v,var	/variables/
!_TAG_KIND_DESCRIPTION!HTML	C,stylesheet	/stylesheets/
!_TAG_KIND_DESCRIPTION!HTML	I,id	/identifiers/
!_TAG_KIND_DESCRIPTION!HTML	J,script	/scripts/
!_TAG_KIND_DESCRIPTION!HTML	a,anchor	/named anchors/
!_TAG_KIND_DESCRIPTION!HTML	c,class	/classes/
!_TAG_KIND_DESCRIPTION!HTML	h,heading1	/H1 headings/
!_TAG_KIND_DESCRIPTION!HTML	i,heading2	/H2 headings/
!_TAG_KIND_DESCRIPTION!HTML	j,heading3	/H3 headings/
!_TAG_KIND_DESCRIPTION!HTML	t,title	/titles/
!_TAG_KIND_DESCRIPTION!JSON	a,array	/arrays/
!_TAG_KIND_DESCRIPTION!JSON	b,boolean	/booleans/
!_TAG_KIND_DESCRIPTION!JSON	n,number	/numbers/
!_TAG_KIND_DESCRIPTION!JSON	o,object	/objects/
!_TAG_KIND_DESCRIPTION!JSON	s,string	/strings/
!_TAG_KIND_DESCRIPTION!JSON	z,null	/nulls/
!_TAG_KIND_DESCRIPTION!Java	a,annotation	/annotation declarations/
!_TAG_KIND_DESCRIPTION!Java	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Java	e,enumConstant	/enum constants/
!_TAG_KIND_DESCRIPTION!Java	f,field	/fields/
!_TAG_KIND_DESCRIPTION!Java	g,enum	/enum types/
!_TAG_KIND_DESCRIPTION!Java	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!Java	m,method	/methods/
!_TAG_KIND_DESCRIPTION!Java	p,package	/packages/
!_TAG_KIND_DESCRIPTION!JavaScript	C,constant	/constants/
!_TAG_KIND_DESCRIPTION!JavaScript	G,getter	/getters/
!_TAG_KIND_DESCRIPTION!JavaScript	M,field	/fields/
!_TAG_KIND_DESCRIPTION!JavaScript	S,setter	/setters/
!_TAG_KIND_DESCRIPTION!JavaScript	c,class	/classes/
!_TAG_KIND_DESCRIPTION!JavaScript	f,function	/functions/
!_TAG_KIND_DESCRIPTION!JavaScript	g,generator	/generators/
!_TAG_KIND_DESCRIPTION!JavaScript	m,method	/methods/
!_TAG_KIND_DESCRIPTION!JavaScript	p,property	/properties/
!_TAG_KIND_DESCRIPTION!JavaScript	v,variable	/global variables/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!SVG	d,def	/ids in defs tags/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_KIND_DESCRIPTION!TypeScript	C,constant	/constants/
!_TAG_KIND_DESCRIPTION!TypeScript	G,generator	/generators/
!_TAG_KIND_DESCRIPTION!TypeScript	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!TypeScript	c,class	/classes/
!_TAG_KIND_DESCRIPTION!TypeScript	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!TypeScript	f,function	/functions/
!_TAG_KIND_DESCRIPTION!TypeScript	g,enum	/enums/
!_TAG_KIND_DESCRIPTION!TypeScript	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!TypeScript	m,method	/methods/
!_TAG_KIND_DESCRIPTION!TypeScript	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!TypeScript	p,property	/properties/
!_TAG_KIND_DESCRIPTION!TypeScript	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!XML	i,id	/id attributes/
!_TAG_KIND_DESCRIPTION!XML	n,nsprefix	/namespace prefixes/
!_TAG_KIND_DESCRIPTION!XML	r,root	/root elements/
!_TAG_KIND_DESCRIPTION!Yaml	a,anchor	/anchors/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!CSS	0.0	/current.age/
!_TAG_PARSER_VERSION!Go	0.0	/current.age/
!_TAG_PARSER_VERSION!HTML	0.0	/current.age/
!_TAG_PARSER_VERSION!JSON	0.0	/current.age/
!_TAG_PARSER_VERSION!Java	0.0	/current.age/
!_TAG_PARSER_VERSION!JavaScript	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	0.0	/current.age/
!_TAG_PARSER_VERSION!SVG	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PARSER_VERSION!TypeScript	0.0	/current.age/
!_TAG_PARSER_VERSION!XML	0.0	/current.age/
!_TAG_PARSER_VERSION!Yaml	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/jlanzone01/Documents/Code/cody/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20230611.0/
!_TAG_ROLE_DESCRIPTION!Go!package	imported	/imported package/
!_TAG_ROLE_DESCRIPTION!Go!unknown	receiverType	/receiver type/
!_TAG_ROLE_DESCRIPTION!HTML!class	attribute	/assigned as attributes/
!_TAG_ROLE_DESCRIPTION!HTML!script	extFile	/referenced as external files/
!_TAG_ROLE_DESCRIPTION!HTML!stylesheet	extFile	/referenced as external files/
!_TAG_ROLE_DESCRIPTION!Java!package	imported	/imported package/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
!_TAG_ROLE_DESCRIPTION!Yaml!anchor	alias	/alias/
#root	vscode/webviews/index.css	/^#root {$/;"	i
#root	web/src/index.css	/^#root {$/;"	i
$schema	.stylelintrc.json	/^  "$schema": "http:\/\/json.schemastore.org\/stylelintrc.json",$/;"	s
$schema	renovate.json	/^  "$schema": "https:\/\/docs.renovatebot.com\/renovate-schema.json",$/;"	s
**/.eslintcache	.vscode/settings.json	/^    "**\/.eslintcache": true,$/;"	b	object:files.exclude
**/.vscode-test	.vscode/settings.json	/^    "**\/.vscode-test": true$/;"	b	object:files.exclude
**/dist	.vscode/settings.json	/^    "**\/dist": true$/;"	b	object:search.exclude
**/dist	.vscode/settings.json	/^    "**\/dist": true,$/;"	b	object:files.exclude
**/node_modules	.vscode/settings.json	/^    "**\/node_modules": true,$/;"	b	object:files.exclude
**/node_modules	.vscode/settings.json	/^    "**\/node_modules": true,$/;"	b	object:search.exclude
.abort-button-container	lib/ui/src/Chat.module.css	/^.abort-button-container {$/;"	c
.actions	lib/ui/src/chat/TranscriptItem.module.css	/^.actions {$/;"	c
.alert	web/src/App.module.css	/^.alert {$/;"	c
.align-center	node_modules/autopreview/css/index.css	/^[data-autopreview].align-center {$/;"	c
.align-center >[data-autopreview-wrapper]	node_modules/autopreview/css/index.css	/^[data-autopreview].align-center > [data-autopreview-wrapper] {$/;"	s
.align-left-top	node_modules/autopreview/css/index.css	/^[data-autopreview].align-left-top {$/;"	c
.align-left-top	node_modules/autopreview/css/index.css	/^[data-autopreview].align-left-top,$/;"	c
.align-left-top >[data-autopreview-wrapper]	node_modules/autopreview/css/index.css	/^[data-autopreview].align-left-top > [data-autopreview-wrapper] {$/;"	s
.assistant-row:before	lib/ui/src/chat/TranscriptItem.module.css	/^.assistant-row:before {$/;"	c
.button	vscode/webviews/Login.module.css	/^.button {$/;"	c
.button	web/src/settings/Settings.module.css	/^.button {$/;"	c
.button-container	vscode/webviews/ConnectApp.module.css	/^.button-container {$/;"	c
.button:disabled	web/src/settings/Settings.module.css	/^.button:disabled {$/;"	c
.buttons	lib/ui/src/chat/CodeBlocks.module.css	/^.buttons {$/;"	c
.chat-button	vscode/webviews/Chat.module.css	/^.chat-button {$/;"	c
.chat-input	lib/ui/src/Chat.module.css	/^.chat-input {$/;"	c
.chat-input	lib/ui/src/chat/TranscriptItem.module.css	/^.chat-input {$/;"	c
.chat-input	vscode/webviews/Chat.module.css	/^.chat-input {$/;"	c
.chat-input	web/src/Chat.module.css	/^.chat-input {$/;"	c
.chat-input-context	vscode/webviews/Chat.module.css	/^.chat-input-context {$/;"	c
.clear-button-container	vscode/webviews/UserHistory.module.css	/^.clear-button-container {$/;"	c
.close-btn	vscode/webviews/App.css	/^.close-btn {$/;"	c
.code-blocks-copy-button	vscode/webviews/Chat.module.css	/^.code-blocks-copy-button,$/;"	c
.code-blocks-copy-button:hover	vscode/webviews/Chat.module.css	/^.code-blocks-copy-button:hover,$/;"	c
.code-blocks-insert-button	vscode/webviews/Chat.module.css	/^.code-blocks-insert-button {$/;"	c
.code-blocks-insert-button:hover	vscode/webviews/Chat.module.css	/^.code-blocks-insert-button:hover {$/;"	c
.codebase	lib/ui/src/chat/inputContext/ChatInputContext.module.css	/^.codebase {$/;"	c
.codebase	lib/ui/src/chat/inputContext/ChatInputContext.module.css	/^.codebase,$/;"	c
.codebase-icon	lib/ui/src/chat/inputContext/ChatInputContext.module.css	/^.codebase-icon {$/;"	c
.codebase-label	lib/ui/src/chat/inputContext/ChatInputContext.module.css	/^.codebase-label {$/;"	c
.cody-chat-error	vscode/webviews/index.css	/^.cody-chat-error {$/;"	c
.cody-chat-error > span	vscode/webviews/index.css	/^.cody-chat-error > span {$/;"	s
.cody-gradient	vscode/webviews/Login.module.css	/^.cody-gradient {$/;"	c
.container	lib/ui/src/chat/CodeBlocks.module.css	/^.container {$/;"	c
.container	lib/ui/src/chat/Transcript.module.css	/^.container {$/;"	c
.container	lib/ui/src/chat/actions/TranscriptAction.module.css	/^.container {$/;"	c
.container	lib/ui/src/chat/inputContext/ChatInputContext.module.css	/^.container {$/;"	c
.container	vscode/webviews/Header.module.css	/^.container {$/;"	c
.container	vscode/webviews/LoadingPage.module.css	/^.container {$/;"	c
.container	vscode/webviews/Login.module.css	/^.container {$/;"	c
.container	vscode/webviews/Plugins.module.css	/^.container {$/;"	c
.container	vscode/webviews/storybook/VSCodeStoryDecorator.module.css	/^.container {$/;"	c
.container	web/src/App.module.css	/^.container {$/;"	c
.container	web/src/settings/Settings.module.css	/^.container {}$/;"	c
.container > pre	lib/ui/src/chat/CodeBlocks.module.css	/^.container > pre {$/;"	s
.container a	vscode/webviews/storybook/VSCodeStoryDecorator.module.css	/^.container a {$/;"	s
.container-open	lib/ui/src/chat/actions/TranscriptAction.module.css	/^.container-open {$/;"	c
.container:hover .buttons	lib/ui/src/chat/CodeBlocks.module.css	/^.container:hover .buttons {$/;"	c
.content	lib/ui/src/chat/TranscriptItem.module.css	/^.content {$/;"	c
.content > div:first-child > *:first-child	lib/ui/src/chat/TranscriptItem.module.css	/^.content > div:first-child > *:first-child {$/;"	s
.content > div:first-child > *:last-child	lib/ui/src/chat/TranscriptItem.module.css	/^.content > div:first-child > *:last-child {$/;"	s
.content p	lib/ui/src/chat/TranscriptItem.module.css	/^.content p {$/;"	s
.content pre	lib/ui/src/chat/TranscriptItem.module.css	/^.content pre {$/;"	s
.copy-button	lib/ui/src/chat/CodeBlocks.module.css	/^.copy-button, .insert-button {$/;"	c
.cursor::before	lib/ui/src/chat/BlinkingCursor.module.css	/^.cursor::before {$/;"	c
.debug-container	vscode/webviews/Debug.module.css	/^.debug-container {$/;"	c
.debug-message	vscode/webviews/Debug.module.css	/^.debug-message {$/;"	c
.divider	vscode/webviews/Login.module.css	/^.divider {$/;"	c
.dot	vscode/webviews/LoadingPage.module.css	/^.dot {$/;"	c
.dot:nth-child(2)	vscode/webviews/LoadingPage.module.css	/^.dot:nth-child(2) {$/;"	c
.dot:nth-child(3)	vscode/webviews/LoadingPage.module.css	/^.dot:nth-child(3) {$/;"	c
.dots-holder	vscode/webviews/LoadingPage.module.css	/^.dots-holder {$/;"	c
.edit-button	vscode/webviews/Chat.module.css	/^.edit-button {$/;"	c
.editing-container	lib/ui/src/chat/TranscriptItem.module.css	/^.editing-container {$/;"	c
.editing-label	lib/ui/src/chat/TranscriptItem.module.css	/^.editing-label {$/;"	c
.error	vscode/webviews/App.css	/^.error {$/;"	c
.error	vscode/webviews/Login.module.css	/^.error {$/;"	c
.error-container	vscode/webviews/App.css	/^.error-container {$/;"	c
.errorColor	lib/ui/src/chat/inputContext/ChatInputContext.module.css	/^.errorColor {$/;"	c
.feedback-buttons	vscode/webviews/Chat.module.css	/^.feedback-buttons {$/;"	c
.feedback-edit-buttons	lib/ui/src/chat/TranscriptItem.module.css	/^.feedback-edit-buttons {$/;"	c
.feedback-edit-buttons-container	lib/ui/src/chat/TranscriptItem.module.css	/^.feedback-edit-buttons-container {$/;"	c
.file	lib/ui/src/chat/inputContext/ChatInputContext.module.css	/^.file {$/;"	c
.file	lib/ui/src/chat/inputContext/ChatInputContext.module.css	/^.file,$/;"	c
.footer	vscode/webviews/Login.module.css	/^.footer {$/;"	c
.footer-container	lib/ui/src/chat/TranscriptItem.module.css	/^.footer-container {$/;"	c
.form	web/src/settings/Settings.module.css	/^.form {$/;"	c
.grey-gradient	vscode/webviews/Login.module.css	/^.grey-gradient {$/;"	c
.header	web/src/App.module.css	/^.header {$/;"	c
.header h1	web/src/App.module.css	/^.header h1 {$/;"	s
.header-container	lib/ui/src/chat/TranscriptItem.module.css	/^.header-container {$/;"	c
.heading-container	vscode/webviews/UserHistory.module.css	/^.heading-container {$/;"	c
.heading-container h3	vscode/webviews/UserHistory.module.css	/^.heading-container h3 {$/;"	s
.hl-comment	lib/ui/src/utils/highlight.css	/^.hl-comment,$/;"	c
.hl-constant	lib/ui/src/utils/highlight.css	/^.hl-constant {$/;"	c
.hl-constant.hl-character.hl-escape	lib/ui/src/utils/highlight.css	/^.hl-constant.hl-character.hl-escape {$/;"	c
.hl-constant.hl-numeric	lib/ui/src/utils/highlight.css	/^.hl-constant.hl-numeric {$/;"	c
.hl-constant.hl-other.hl-color	lib/ui/src/utils/highlight.css	/^.hl-constant.hl-other.hl-color {$/;"	c
.hl-constant.hl-other.hl-symbol	lib/ui/src/utils/highlight.css	/^.hl-constant.hl-other.hl-symbol {$/;"	c
.hl-entity.hl-name.hl-class	lib/ui/src/utils/highlight.css	/^.hl-entity.hl-name.hl-class,$/;"	c
.hl-entity.hl-name.hl-function	lib/ui/src/utils/highlight.css	/^.hl-entity.hl-name.hl-function,$/;"	c
.hl-entity.hl-name.hl-section	lib/ui/src/utils/highlight.css	/^.hl-entity.hl-name.hl-section {$/;"	c
.hl-entity.hl-name.hl-tag	lib/ui/src/utils/highlight.css	/^.hl-entity.hl-name.hl-tag {$/;"	c
.hl-entity.hl-other.hl-attribute-name	lib/ui/src/utils/highlight.css	/^.hl-entity.hl-other.hl-attribute-name {$/;"	c
.hl-entity.hl-other.hl-attribute-name.hl-id	lib/ui/src/utils/highlight.css	/^.hl-entity.hl-other.hl-attribute-name.hl-id,$/;"	c
.hl-entity.hl-other.hl-inherited-class	lib/ui/src/utils/highlight.css	/^.hl-entity.hl-other.hl-inherited-class {$/;"	c
.hl-json .hl-key .hl-string	lib/ui/src/utils/highlight.css	/^.hl-json .hl-key .hl-string {$/;"	c
.hl-keyword	lib/ui/src/utils/highlight.css	/^.hl-keyword {$/;"	c
.hl-keyword.hl-operator	lib/ui/src/utils/highlight.css	/^.hl-keyword.hl-operator {$/;"	c
.hl-keyword.hl-other.hl-special-method	lib/ui/src/utils/highlight.css	/^.hl-keyword.hl-other.hl-special-method {$/;"	c
.hl-keyword.hl-other.hl-unit	lib/ui/src/utils/highlight.css	/^.hl-keyword.hl-other.hl-unit {$/;"	c
.hl-markup.hl-heading	lib/ui/src/utils/highlight.css	/^.hl-markup.hl-heading,$/;"	c
.hl-markup.hl-list	lib/ui/src/utils/highlight.css	/^.hl-markup.hl-list {$/;"	c
.hl-markup.hl-raw.hl-inline	lib/ui/src/utils/highlight.css	/^.hl-markup.hl-raw.hl-inline {$/;"	c
.hl-meta.hl-class	lib/ui/src/utils/highlight.css	/^.hl-meta.hl-class {$/;"	c
.hl-meta.hl-image	lib/ui/src/utils/highlight.css	/^.hl-meta.hl-image {$/;"	c
.hl-meta.hl-link	lib/ui/src/utils/highlight.css	/^.hl-meta.hl-link {$/;"	c
.hl-meta.hl-require	lib/ui/src/utils/highlight.css	/^.hl-meta.hl-require,$/;"	c
.hl-meta.hl-selector	lib/ui/src/utils/highlight.css	/^.hl-meta.hl-selector {$/;"	c
.hl-punctuation.hl-definition	lib/ui/src/utils/highlight.css	/^.hl-punctuation.hl-definition {$/;"	c
.hl-punctuation.hl-definition.hl-comment	lib/ui/src/utils/highlight.css	/^.hl-punctuation.hl-definition.hl-comment {$/;"	c
.hl-punctuation.hl-definition.hl-entity	lib/ui/src/utils/highlight.css	/^.hl-punctuation.hl-definition.hl-entity {$/;"	c
.hl-punctuation.hl-definition.hl-heading	lib/ui/src/utils/highlight.css	/^.hl-punctuation.hl-definition.hl-heading,$/;"	c
.hl-punctuation.hl-section.hl-embedded	lib/ui/src/utils/highlight.css	/^.hl-punctuation.hl-section.hl-embedded,$/;"	c
.hl-source	lib/ui/src/utils/highlight.css	/^.hl-source,$/;"	c
.hl-source.hl-diff	lib/ui/src/utils/highlight.css	/^.hl-source.hl-diff {$/;"	c
.hl-source.hl-diff .hl-markup.hl-deleted	lib/ui/src/utils/highlight.css	/^.hl-source.hl-diff .hl-markup.hl-deleted {$/;"	c
.hl-source.hl-diff .hl-markup.hl-inserted	lib/ui/src/utils/highlight.css	/^.hl-source.hl-diff .hl-markup.hl-inserted {$/;"	c
.hl-source.hl-diff .hl-meta.hl-range	lib/ui/src/utils/highlight.css	/^.hl-source.hl-diff .hl-meta.hl-range {$/;"	c
.hl-storage	lib/ui/src/utils/highlight.css	/^.hl-storage {$/;"	c
.hl-string	lib/ui/src/utils/highlight.css	/^.hl-string,$/;"	c
.hl-string.hl-other.hl-link	lib/ui/src/utils/highlight.css	/^.hl-string.hl-other.hl-link {$/;"	c
.hl-string.hl-regexp	lib/ui/src/utils/highlight.css	/^.hl-string.hl-regexp {$/;"	c
.hl-support.hl-class	lib/ui/src/utils/highlight.css	/^.hl-support.hl-class,$/;"	c
.hl-support.hl-function	lib/ui/src/utils/highlight.css	/^.hl-support.hl-function {$/;"	c
.hl-support.hl-function.hl-any-method	lib/ui/src/utils/highlight.css	/^.hl-support.hl-function.hl-any-method,$/;"	c
.hl-text	lib/ui/src/utils/highlight.css	/^.hl-text {$/;"	c
.hl-typed-BooleanLiteral	lib/ui/src/utils/highlight.css	/^.hl-typed-BooleanLiteral {$/;"	c
.hl-typed-CharacterLiteral	lib/ui/src/utils/highlight.css	/^.hl-typed-CharacterLiteral {$/;"	c
.hl-typed-Comment	lib/ui/src/utils/highlight.css	/^.hl-typed-Comment {$/;"	c
.hl-typed-Identifier	lib/ui/src/utils/highlight.css	/^.hl-typed-Identifier {$/;"	c
.hl-typed-IdentifierAttribute	lib/ui/src/utils/highlight.css	/^.hl-typed-IdentifierAttribute {$/;"	c
.hl-typed-IdentifierBuiltin	lib/ui/src/utils/highlight.css	/^.hl-typed-IdentifierBuiltin {$/;"	c
.hl-typed-IdentifierBuiltinType	lib/ui/src/utils/highlight.css	/^.hl-typed-IdentifierBuiltinType {$/;"	c
.hl-typed-IdentifierConstant	lib/ui/src/utils/highlight.css	/^.hl-typed-IdentifierConstant {$/;"	c
.hl-typed-IdentifierFunction	lib/ui/src/utils/highlight.css	/^.hl-typed-IdentifierFunction {$/;"	c
.hl-typed-IdentifierFunctionDefinition	lib/ui/src/utils/highlight.css	/^.hl-typed-IdentifierFunctionDefinition {$/;"	c
.hl-typed-IdentifierKeyword	lib/ui/src/utils/highlight.css	/^.hl-typed-IdentifierKeyword {$/;"	c
.hl-typed-IdentifierLocal	lib/ui/src/utils/highlight.css	/^.hl-typed-IdentifierLocal {$/;"	c
.hl-typed-IdentifierMacro	lib/ui/src/utils/highlight.css	/^.hl-typed-IdentifierMacro {$/;"	c
.hl-typed-IdentifierMacroDefinition	lib/ui/src/utils/highlight.css	/^.hl-typed-IdentifierMacroDefinition {$/;"	c
.hl-typed-IdentifierModule	lib/ui/src/utils/highlight.css	/^.hl-typed-IdentifierModule {$/;"	c
.hl-typed-IdentifierMutableGlobal	lib/ui/src/utils/highlight.css	/^.hl-typed-IdentifierMutableGlobal {$/;"	c
.hl-typed-IdentifierNull	lib/ui/src/utils/highlight.css	/^.hl-typed-IdentifierNull {$/;"	c
.hl-typed-IdentifierOperator	lib/ui/src/utils/highlight.css	/^.hl-typed-IdentifierOperator {$/;"	c
.hl-typed-IdentifierParameter	lib/ui/src/utils/highlight.css	/^.hl-typed-IdentifierParameter {$/;"	c
.hl-typed-IdentifierShadowed	lib/ui/src/utils/highlight.css	/^.hl-typed-IdentifierShadowed {$/;"	c
.hl-typed-IdentifierType	lib/ui/src/utils/highlight.css	/^.hl-typed-IdentifierType {$/;"	c
.hl-typed-NumericLiteral	lib/ui/src/utils/highlight.css	/^.hl-typed-NumericLiteral {$/;"	c
.hl-typed-PunctuationBracket	lib/ui/src/utils/highlight.css	/^.hl-typed-PunctuationBracket {$/;"	c
.hl-typed-PunctuationDelimiter	lib/ui/src/utils/highlight.css	/^.hl-typed-PunctuationDelimiter {$/;"	c
.hl-typed-StringLiteral	lib/ui/src/utils/highlight.css	/^.hl-typed-StringLiteral {$/;"	c
.hl-typed-StringLiteralEscape	lib/ui/src/utils/highlight.css	/^.hl-typed-StringLiteralEscape {$/;"	c
.hl-typed-StringLiteralKey	lib/ui/src/utils/highlight.css	/^.hl-typed-StringLiteralKey {$/;"	c
.hl-typed-StringLiteralSpecial	lib/ui/src/utils/highlight.css	/^.hl-typed-StringLiteralSpecial {$/;"	c
.hl-typed-TagAttribute	lib/ui/src/utils/highlight.css	/^.hl-typed-TagAttribute {$/;"	c
.hl-variable	lib/ui/src/utils/highlight.css	/^.hl-variable {$/;"	c
.hl-variable.hl-function	lib/ui/src/utils/highlight.css	/^.hl-variable.hl-function {$/;"	c
.hl-variable.hl-interpolation	lib/ui/src/utils/highlight.css	/^.hl-variable.hl-interpolation {$/;"	c
.hl-variable.hl-parameter.hl-function	lib/ui/src/utils/highlight.css	/^.hl-variable.hl-parameter.hl-function {$/;"	c
.hljs-addition	lib/ui/src/utils/highlight.css	/^.hljs-addition {$/;"	c
.hljs-attr	lib/ui/src/utils/highlight.css	/^.hljs-attr,$/;"	c
.hljs-attribute	lib/ui/src/utils/highlight.css	/^.hljs-attribute,$/;"	c
.hljs-built_in	lib/ui/src/utils/highlight.css	/^.hljs-built_in,$/;"	c
.hljs-builtin-name	lib/ui/src/utils/highlight.css	/^.hljs-builtin-name {$/;"	c
.hljs-bullet	lib/ui/src/utils/highlight.css	/^.hljs-bullet,$/;"	c
.hljs-class	lib/ui/src/utils/highlight.css	/^.hljs-class {$/;"	c
.hljs-comment	lib/ui/src/utils/highlight.css	/^.hljs-comment,$/;"	c
.hljs-deletion	lib/ui/src/utils/highlight.css	/^.hljs-deletion {$/;"	c
.hljs-doctag	lib/ui/src/utils/highlight.css	/^.hljs-doctag {$/;"	c
.hljs-emphasis	lib/ui/src/utils/highlight.css	/^.hljs-emphasis {$/;"	c
.hljs-formula	lib/ui/src/utils/highlight.css	/^.hljs-formula {$/;"	c
.hljs-function	lib/ui/src/utils/highlight.css	/^.hljs-function,$/;"	c
.hljs-keyword	lib/ui/src/utils/highlight.css	/^.hljs-keyword,$/;"	c
.hljs-link	lib/ui/src/utils/highlight.css	/^.hljs-link {$/;"	c
.hljs-literal	lib/ui/src/utils/highlight.css	/^.hljs-literal,$/;"	c
.hljs-meta	lib/ui/src/utils/highlight.css	/^.hljs-meta,$/;"	c
.hljs-meta-keyword	lib/ui/src/utils/highlight.css	/^.hljs-meta-keyword,$/;"	c
.hljs-meta-string	lib/ui/src/utils/highlight.css	/^.hljs-meta-string {$/;"	c
.hljs-name	lib/ui/src/utils/highlight.css	/^.hljs-name {$/;"	c
.hljs-number	lib/ui/src/utils/highlight.css	/^.hljs-number,$/;"	c
.hljs-params	lib/ui/src/utils/highlight.css	/^.hljs-params,$/;"	c
.hljs-quote	lib/ui/src/utils/highlight.css	/^.hljs-quote {$/;"	c
.hljs-regexp	lib/ui/src/utils/highlight.css	/^.hljs-regexp,$/;"	c
.hljs-section	lib/ui/src/utils/highlight.css	/^.hljs-section {$/;"	c
.hljs-selector-attr	lib/ui/src/utils/highlight.css	/^.hljs-selector-attr,$/;"	c
.hljs-selector-class	lib/ui/src/utils/highlight.css	/^.hljs-selector-class,$/;"	c
.hljs-selector-id	lib/ui/src/utils/highlight.css	/^.hljs-selector-id,$/;"	c
.hljs-selector-pseudo	lib/ui/src/utils/highlight.css	/^.hljs-selector-pseudo {$/;"	c
.hljs-selector-tag	lib/ui/src/utils/highlight.css	/^.hljs-selector-tag,$/;"	c
.hljs-string	lib/ui/src/utils/highlight.css	/^.hljs-string,$/;"	c
.hljs-strong	lib/ui/src/utils/highlight.css	/^.hljs-strong {$/;"	c
.hljs-subst	lib/ui/src/utils/highlight.css	/^.hljs-subst,$/;"	c
.hljs-symbol	lib/ui/src/utils/highlight.css	/^.hljs-symbol,$/;"	c
.hljs-tag	lib/ui/src/utils/highlight.css	/^.hljs-tag {$/;"	c
.hljs-template-tag	lib/ui/src/utils/highlight.css	/^.hljs-template-tag {$/;"	c
.hljs-template-variable	lib/ui/src/utils/highlight.css	/^.hljs-template-variable {$/;"	c
.hljs-title	lib/ui/src/utils/highlight.css	/^.hljs-title,$/;"	c
.hljs-type	lib/ui/src/utils/highlight.css	/^.hljs-type {$/;"	c
.hljs-variable	lib/ui/src/utils/highlight.css	/^.hljs-variable,$/;"	c
.human-transcript-item	lib/ui/src/chat/Transcript.story.module.css	/^.human-transcript-item {$/;"	c
.human-transcript-item	web/src/Chat.module.css	/^.human-transcript-item {$/;"	c
.human-transcript-item:before	vscode/webviews/Chat.module.css	/^.human-transcript-item:before {$/;"	c
.inner-container	lib/ui/src/Chat.module.css	/^.inner-container {$/;"	c
.inner-container	vscode/webviews/App.css	/^.inner-container {$/;"	c
.inner-container	vscode/webviews/Chat.module.css	/^.inner-container {$/;"	c
.input	vscode/webviews/Login.module.css	/^.input {$/;"	c
.input-row	lib/ui/src/Chat.module.css	/^.input-row {$/;"	c
.input-row	vscode/webviews/Chat.module.css	/^.input-row {$/;"	c
.input-row	web/src/Chat.module.css	/^.input-row {$/;"	c
.insert-button	lib/ui/src/chat/CodeBlocks.module.css	/^.copy-button, .insert-button {$/;"	c
.item	lib/ui/src/chat/PluginExecutionInfos.module.css	/^.item {$/;"	c
.item-button	vscode/webviews/UserHistory.module.css	/^.item-button {$/;"	c
.item-button-inner-container	vscode/webviews/UserHistory.module.css	/^.item-button-inner-container {$/;"	c
.item-button:hover .item-delete	vscode/webviews/UserHistory.module.css	/^.item-button:hover .item-delete {$/;"	c
.item-date	vscode/webviews/UserHistory.module.css	/^.item-date {$/;"	c
.item-delete	vscode/webviews/UserHistory.module.css	/^.item-delete {$/;"	c
.item-last-message	vscode/webviews/UserHistory.module.css	/^.item-last-message {$/;"	c
.items-container	vscode/webviews/UserHistory.module.css	/^.items-container {$/;"	c
.label	web/src/settings/Settings.module.css	/^.label {$/;"	c
.label input	web/src/settings/Settings.module.css	/^.label input {$/;"	s
.label:focus-within	web/src/settings/Settings.module.css	/^.label:focus-within {$/;"	c
.link-button	vscode/webviews/FileLink.module.css	/^.link-button {$/;"	c
.list	vscode/webviews/Plugins.module.css	/^.list {$/;"	c
.list-item	vscode/webviews/Plugins.module.css	/^.list-item {$/;"	c
.logo	vscode/webviews/Header.module.css	/^.logo {$/;"	c
.logo svg	vscode/webviews/Header.module.css	/^.logo svg {$/;"	s
.logout-button	vscode/webviews/Settings.css	/^.logout-button {$/;"	c
.main	web/src/App.module.css	/^.main {$/;"	c
.non-transcript-container	vscode/webviews/App.css	/^.non-transcript-container {$/;"	c
.open-close-button	lib/ui/src/chat/actions/TranscriptAction.module.css	/^.open-close-button {$/;"	c
.open-close-icon	lib/ui/src/chat/actions/TranscriptAction.module.css	/^.open-close-icon {$/;"	c
.open-message	vscode/webviews/Login.module.css	/^.open-message {$/;"	c
.other-sign-in-options	vscode/webviews/Login.module.css	/^.other-sign-in-options {$/;"	c
.outer-container	vscode/webviews/App.css	/^.outer-container {$/;"	c
.plugin	vscode/webviews/Plugins.module.css	/^.plugin {$/;"	c
.plugin-checkbox	vscode/webviews/Plugins.module.css	/^.plugin-checkbox {$/;"	c
.plugin-description	vscode/webviews/Plugins.module.css	/^.plugin-description {$/;"	c
.plugin-header	vscode/webviews/Plugins.module.css	/^.plugin-header {$/;"	c
.recipe-button	vscode/webviews/Recipes.module.css	/^.recipe-button {$/;"	c
.recipes	vscode/webviews/Recipes.module.css	/^.recipes {$/;"	c
.recipes-header	vscode/webviews/Recipes.module.css	/^.recipes-header {$/;"	c
.recipes-notes	vscode/webviews/Recipes.module.css	/^.recipes-notes {$/;"	c
.row	lib/ui/src/chat/TranscriptItem.module.css	/^.row {$/;"	c
.row-in-progress	lib/ui/src/chat/TranscriptItem.module.css	/^.row-in-progress {$/;"	c
.row:before	lib/ui/src/chat/TranscriptItem.module.css	/^.row:before {$/;"	c
.row:hover > .footer-container	lib/ui/src/chat/TranscriptItem.module.css	/^.row:hover > .footer-container {$/;"	c
.row:hover > .header-container	lib/ui/src/chat/TranscriptItem.module.css	/^.row:hover > .header-container,$/;"	c
.section	vscode/webviews/Login.module.css	/^.section {$/;"	c
.section-header	vscode/webviews/Login.module.css	/^.section-header {$/;"	c
.sections-container	vscode/webviews/Login.module.css	/^.sections-container {$/;"	c
.settings	vscode/webviews/Settings.css	/^.settings {$/;"	c
.step	lib/ui/src/chat/actions/TranscriptAction.module.css	/^.step {$/;"	c
.step-icon	lib/ui/src/chat/actions/TranscriptAction.module.css	/^.step-icon {$/;"	c
.step-object	lib/ui/src/chat/actions/TranscriptAction.module.css	/^.step-object {$/;"	c
.steps	lib/ui/src/chat/actions/TranscriptAction.module.css	/^.steps {$/;"	c
.stop-generating-button	vscode/webviews/Chat.module.css	/^.stop-generating-button {$/;"	c
.stop-generating-button > i	vscode/webviews/Chat.module.css	/^.stop-generating-button > i {$/;"	s
.stop-generating-button:active	vscode/webviews/Chat.module.css	/^.stop-generating-button:active {$/;"	c
.submit-button	lib/ui/src/Chat.module.css	/^.submit-button {$/;"	c
.submit-button	lib/ui/src/chat/TranscriptItem.module.css	/^.submit-button {$/;"	c
.submit-button-disabled	vscode/webviews/Chat.module.css	/^.submit-button-disabled {$/;"	c
.submit-button:hover	lib/ui/src/Chat.module.css	/^.submit-button:hover {$/;"	c
.submit-button:hover	lib/ui/src/chat/TranscriptItem.module.css	/^.submit-button:hover {$/;"	c
.suggestion-button	vscode/webviews/Chat.module.css	/^.suggestion-button {$/;"	c
.suggestion-button .codicon	vscode/webviews/Chat.module.css	/^.suggestion-button .codicon {$/;"	c
.suggestion-button:hover	vscode/webviews/Chat.module.css	/^.suggestion-button:hover {$/;"	c
.suggestions	lib/ui/src/Chat.module.css	/^.suggestions {$/;"	c
.tab-btn	vscode/webviews/NavBar.module.css	/^.tab-btn {$/;"	c
.tab-btn .tab-btn-selected	vscode/webviews/NavBar.module.css	/^.tab-btn .tab-btn-selected {$/;"	c
.tab-btn span	vscode/webviews/NavBar.module.css	/^.tab-btn span {$/;"	s
.tab-btn:hover	vscode/webviews/NavBar.module.css	/^.tab-btn:hover {$/;"	c
.tab-menu-container	vscode/webviews/NavBar.module.css	/^.tab-menu-container {$/;"	c
.tab-menu-group	vscode/webviews/NavBar.module.css	/^.tab-menu-group {$/;"	c
.table	completions-review-tool/src/components/CompletionsTable.module.css	/^.table {$/;"	c
.table tbody tr > :first-child	completions-review-tool/src/components/CompletionsTable.module.css	/^.table tbody tr > :first-child {$/;"	s
.table thead tr > :first-child	completions-review-tool/src/components/CompletionsTable.module.css	/^.table thead tr > :first-child {$/;"	s
.table thead tr > th	completions-review-tool/src/components/CompletionsTable.module.css	/^.table thead tr > th {$/;"	s
.table-wrapper	completions-review-tool/src/components/CompletionsTable.module.css	/^.table-wrapper {$/;"	c
.tag	vscode/webviews/Header.module.css	/^    .tag {$/;"	c
.terms	vscode/webviews/Login.module.css	/^.terms {$/;"	c
.terms	web/src/Chat.module.css	/^.terms {$/;"	c
.terms summary	web/src/Chat.module.css	/^.terms summary {$/;"	s
.text-area-container	lib/ui/src/Chat.module.css	/^.text-area-container {$/;"	c
.text-area-container	lib/ui/src/chat/TranscriptItem.module.css	/^.text-area-container {$/;"	c
.theme-contrast-compliant-syntax-highlighting	lib/ui/src/utils/highlight.css	/^.theme-contrast-compliant-syntax-highlighting {$/;"	c
.theme-contrast-compliant-syntax-highlighting .hl-keyword.hl-other.hl-unit	lib/ui/src/utils/highlight.css	/^.theme-contrast-compliant-syntax-highlighting .hl-keyword.hl-other.hl-unit {$/;"	c
.theme-contrast-compliant-syntax-highlighting .hl-punctuation.hl-section.hl-embedded	lib/ui/src/utils/highlight.css	/^.theme-contrast-compliant-syntax-highlighting .hl-punctuation.hl-section.hl-embedded,$/;"	c
.theme-contrast-compliant-syntax-highlighting .hl-variable.hl-interpolation	lib/ui/src/utils/highlight.css	/^.theme-contrast-compliant-syntax-highlighting .hl-variable.hl-interpolation {$/;"	c
.theme-light .theme-contrast-compliant-syntax-highlighting	lib/ui/src/utils/highlight.css	/^.theme-light .theme-contrast-compliant-syntax-highlighting {$/;"	c
.theme-light .theme-contrast-compliant-syntax-highlighting .hl-punctuation.hl-definition.hl-string	lib/ui/src/utils/highlight.css	/^.theme-light .theme-contrast-compliant-syntax-highlighting .hl-punctuation.hl-definition.hl-stri/;"	c
.theme-light .theme-contrast-compliant-syntax-highlighting .hl-storage.hl-modifier	lib/ui/src/utils/highlight.css	/^.theme-light .theme-contrast-compliant-syntax-highlighting .hl-storage.hl-modifier {$/;"	c
.transcript-action	lib/ui/src/chat/Transcript.story.module.css	/^.transcript-action {$/;"	c
.transcript-action	vscode/webviews/Chat.module.css	/^.transcript-action {$/;"	c
.transcript-action	web/src/Chat.module.css	/^.transcript-action {$/;"	c
.transcript-action > button	vscode/webviews/Chat.module.css	/^.transcript-action > button {$/;"	s
.transcript-container	lib/ui/src/Chat.module.css	/^.transcript-container {$/;"	c
.transcript-item	lib/ui/src/chat/Transcript.story.module.css	/^.transcript-item {$/;"	c
.transcript-item	vscode/webviews/Chat.module.css	/^.transcript-item {$/;"	c
.transcript-item	web/src/Chat.module.css	/^.transcript-item {$/;"	c
.transcript-item code	web/src/Chat.module.css	/^.transcript-item code {$/;"	s
.transcript-item ol:not(.transcript-action *)	vscode/webviews/Chat.module.css	/^.transcript-item ol:not(.transcript-action *) {$/;"	s
.transcript-item p > code	vscode/webviews/Chat.module.css	/^.transcript-item p > code,$/;"	s
.transcript-item p > code	web/src/Chat.module.css	/^.transcript-item p > code {$/;"	s
.transcript-item pre	vscode/webviews/Chat.module.css	/^.transcript-item pre,$/;"	s
.transcript-item pre	web/src/Chat.module.css	/^.transcript-item pre,$/;"	s
.transcript-item pre > code	vscode/webviews/Chat.module.css	/^.transcript-item pre > code {$/;"	s
.transcript-item span > code	vscode/webviews/Chat.module.css	/^.transcript-item span > code,$/;"	s
.transcript-item span > code	web/src/Chat.module.css	/^.transcript-item span > code,$/;"	s
.transcript-item ul:not(.transcript-action *)	vscode/webviews/Chat.module.css	/^.transcript-item ul:not(.transcript-action *),$/;"	s
.transcript-item-participant	lib/ui/src/chat/Transcript.story.module.css	/^.transcript-item-participant {$/;"	c
.transcript-item-participant	web/src/Chat.module.css	/^.transcript-item-participant {$/;"	c
.transcript-item:first-child	lib/ui/src/chat/Transcript.story.module.css	/^.transcript-item:first-child {$/;"	c
.transcript-item:last-child	lib/ui/src/chat/Transcript.story.module.css	/^.transcript-item:last-child {$/;"	c
.w-100	vscode/webviews/index.css	/^.w-100 {$/;"	c
.warningColor	lib/ui/src/chat/inputContext/ChatInputContext.module.css	/^.warningColor {$/;"	c
0	.stylelintrc.json	/^        "ignore": ["consecutive-duplicates-with-different-values"]$/;"	s	array:rules.declaration-block-no-duplicate-properties.1.ignore
0	.stylelintrc.json	/^        "ignorePseudoClasses": ["global"]$/;"	s	array:rules.selector-pseudo-class-no-unknown.1.ignorePseudoClasses
0	.stylelintrc.json	/^      true,$/;"	b	array:rules.declaration-block-no-duplicate-properties
0	.stylelintrc.json	/^      true,$/;"	b	array:rules.selector-pseudo-class-no-unknown
0	.stylelintrc.json	/^    "function-disallowed-list": ["rgb", "hsl"],$/;"	s	array:rules.function-disallowed-list
0	.stylelintrc.json	/^  "extends": ["stylelint-config-standard", "stylelint-config-prettier"],$/;"	s	array:extends
0	.vscode/extensions.json	/^    "sourcegraph.cody-ai",$/;"	s	array:recommendations
0	.vscode/launch.json	/^        "--extensionDevelopmentPath=${workspaceRoot}\/vscode",$/;"	s	array:configurations.0.args
0	.vscode/launch.json	/^      "outFiles": ["${workspaceRoot}\/vscode\/dist\/**\/*.js"],$/;"	s	array:configurations.0.outFiles
0	.vscode/launch.json	/^    {$/;"	o	array:configurations
0	.vscode/settings.json	/^  "eslint.validate": ["javascript", "javascriptreact", "typescript", "typescriptreact"],$/;"	s	array:eslint.validate
0	.vscode/tasks.json	/^      "problemMatcher": ["$tsc-watch"],$/;"	s	array:tasks.0.problemMatcher
0	.vscode/tasks.json	/^    {$/;"	o	array:tasks
0	agent/tsconfig.json	/^  "exclude": ["dist"],$/;"	s	array:exclude
0	agent/tsconfig.json	/^  "include": ["**\/*", ".*", "package.json"],$/;"	s	array:include
0	agent/tsconfig.json	/^  "references": [{ "path": "..\/lib\/shared" }],$/;"	o	array:references
0	cli/package.json	/^    "dist",$/;"	s	array:files
0	cli/tsconfig.json	/^    {$/;"	o	array:references
0	cli/tsconfig.json	/^  "exclude": ["dist"],$/;"	s	array:exclude
0	cli/tsconfig.json	/^  "include": ["src"],$/;"	s	array:include
0	completions-review-tool/data/completions-1686127320776.json	/^      "const date = new Date()",$/;"	s	array:2.completions
0	completions-review-tool/data/completions-1686127320776.json	/^      "s"$/;"	s	array:0.completions
0	completions-review-tool/data/completions-1686127320776.json	/^      "throw new Error('Not yet implemented');}",$/;"	s	array:1.completions
0	completions-review-tool/data/completions-1686127320776.json	/^  {$/;"	o
0	completions-review-tool/data/completions-1686127445971.json	/^      "const date = new Date()",$/;"	s	array:1.completions
0	completions-review-tool/data/completions-1686127445971.json	/^      "signale.info(message)",$/;"	s	array:0.completions
0	completions-review-tool/data/completions-1686127445971.json	/^      "throw new Error('Not implemented.');"$/;"	s	array:2.completions
0	completions-review-tool/data/completions-1686127445971.json	/^  {$/;"	o
0	completions-review-tool/data/completions-1686127449821.json	/^      "const now =  n",$/;"	s	array:1.completions
0	completions-review-tool/data/completions-1686127449821.json	/^      "signale.info(message)",$/;"	s	array:0.completions
0	completions-review-tool/data/completions-1686127449821.json	/^      "throw new Error('Not implemented')",$/;"	s	array:2.completions
0	completions-review-tool/data/completions-1686127449821.json	/^  {$/;"	o
0	completions-review-tool/data/completions-1686127552793.json	/^      "const d = new Date()",$/;"	s	array:0.completions
0	completions-review-tool/data/completions-1686127552793.json	/^      "signale.success(message);"$/;"	s	array:1.completions
0	completions-review-tool/data/completions-1686127552793.json	/^      "throw new Error('Not implemented')",$/;"	s	array:2.completions
0	completions-review-tool/data/completions-1686127552793.json	/^  {$/;"	o
0	completions-review-tool/tsconfig.json	/^  "include": ["globals.d.ts", "remix.env.d.ts", "**\/*.ts", "**\/*.tsx", "*.js"],$/;"	s	array:include
0	lib/shared/package.json	/^    "dist",$/;"	s	array:files
0	lib/shared/tsconfig.json	/^    "lib": ["ESNext", "DOM.Iterable"],$/;"	s	array:compilerOptions.lib
0	lib/shared/tsconfig.json	/^  "exclude": ["dist"],$/;"	s	array:exclude
0	lib/shared/tsconfig.json	/^  "include": ["src", "src\/telemetry\/EventLogger.ts"],$/;"	s	array:include
0	lib/ui/.eslintrc.json	/^            "group": ["@sourcegraph\/cody-shared\/*"],$/;"	s	array:rules.no-restricted-imports.1.patterns.0.group
0	lib/ui/.eslintrc.json	/^          {$/;"	o	array:rules.no-restricted-imports.1.patterns
0	lib/ui/.eslintrc.json	/^      "error",$/;"	s	array:rules.no-restricted-imports
0	lib/ui/package.json	/^    "dist",$/;"	s	array:files
0	lib/ui/tsconfig.json	/^    "lib": ["ESNext", "DOM", "DOM.Iterable"],$/;"	s	array:compilerOptions.lib
0	lib/ui/tsconfig.json	/^    {$/;"	o	array:references
0	lib/ui/tsconfig.json	/^  "exclude": ["dist"],$/;"	s	array:exclude
0	lib/ui/tsconfig.json	/^  "include": ["src"],$/;"	s	array:include
0	node_modules/autopreview/package.json	/^    "index.js",$/;"	s	array:files
0	renovate.json	/^  "extends": ["local>sourcegraph\/renovate-config"]$/;"	s	array:extends
0	slack/tsconfig.json	/^    {$/;"	o	array:references
0	slack/tsconfig.json	/^  "exclude": ["dist"],$/;"	s	array:exclude
0	slack/tsconfig.json	/^  "include": ["src", "package.json"],$/;"	s	array:include
0	tsconfig.base.json	/^    "lib": ["ESNext"],$/;"	s	array:compilerOptions.lib
0	tsconfig.json	/^    ".eslintrc.js",$/;"	s	array:include
0	tsconfig.json	/^    { "path": "agent" },$/;"	o	array:references
0	tsconfig.json	/^  "exclude": ["dist", "node_modules"],$/;"	s	array:exclude
0	vscode/.eslintrc.json	/^    "@typescript-eslint\/no-floating-promises": ["error", { "ignoreVoid": true }],$/;"	s	array:rules.@typescript-eslint/no-floating-promises
0	vscode/.eslintrc.json	/^    "no-void": ["error", { "allowAsStatement": true }],$/;"	s	array:rules.no-void
0	vscode/.eslintrc.json	/^    "react\/jsx-filename-extension": [1, { "extensions": [".ts", ".tsx"] }],$/;"	n	array:rules.react/jsx-filename-extension
0	vscode/.eslintrc.json	/^    "react\/jsx-filename-extension": [1, { "extensions": [".ts", ".tsx"] }],$/;"	s	array:rules.react/jsx-filename-extension.1.extensions
0	vscode/package.json	/^            "embeddings",$/;"	s	array:contributes.configuration.properties.cody.useContext.enum
0	vscode/package.json	/^            "https:\/\/github.com\/sourcegraph\/cody",$/;"	s	array:contributes.configuration.properties.cody.codebase.examples
0	vscode/package.json	/^            {$/;"	o	array:contributes.configuration.properties.cody.customHeaders.examples
0	vscode/package.json	/^          {$/;"	o	array:contributes.walkthroughs.0.steps
0	vscode/package.json	/^        {$/;"	o	array:contributes.menus.cody.submenu
0	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
0	vscode/package.json	/^        {$/;"	o	array:contributes.menus.comments/commentThread/context
0	vscode/package.json	/^        {$/;"	o	array:contributes.menus.comments/commentThread/title
0	vscode/package.json	/^        {$/;"	o	array:contributes.menus.editor/context
0	vscode/package.json	/^        {$/;"	o	array:contributes.menus.editor/title
0	vscode/package.json	/^        {$/;"	o	array:contributes.menus.view/item/context
0	vscode/package.json	/^        {$/;"	o	array:contributes.menus.view/title
0	vscode/package.json	/^        {$/;"	o	array:contributes.views.cody
0	vscode/package.json	/^        {$/;"	o	array:contributes.viewsContainers.activitybar
0	vscode/package.json	/^      {$/;"	o	array:contributes.colors
0	vscode/package.json	/^      {$/;"	o	array:contributes.commands
0	vscode/package.json	/^      {$/;"	o	array:contributes.keybindings
0	vscode/package.json	/^      {$/;"	o	array:contributes.submenus
0	vscode/package.json	/^      {$/;"	o	array:contributes.viewsWelcome
0	vscode/package.json	/^      {$/;"	o	array:contributes.walkthroughs
0	vscode/package.json	/^    "Programming Languages",$/;"	s	array:categories
0	vscode/package.json	/^    "ai",$/;"	s	array:keywords
0	vscode/package.json	/^    "onStartupFinished"$/;"	s	array:activationEvents
0	vscode/package.json	/^    {$/;"	o	array:badges
0	vscode/scripts/tsconfig.json	/^  "exclude": ["dist"],$/;"	s	array:exclude
0	vscode/scripts/tsconfig.json	/^  "include": [".*", "*"],$/;"	s	array:include
0	vscode/test/completions/tsconfig.json	/^  "include": ["*.ts"],$/;"	s	array:include
0	vscode/test/completions/tsconfig.json	/^  "references": [{ "path": "..\/..\/" }],$/;"	o	array:references
0	vscode/test/integration/tsconfig.json	/^    "types": ["mocha", "node"],$/;"	s	array:compilerOptions.types
0	vscode/test/integration/tsconfig.json	/^  "exclude": ["testdata"],$/;"	s	array:exclude
0	vscode/test/integration/tsconfig.json	/^  "include": ["*.ts"],$/;"	s	array:include
0	vscode/test/integration/tsconfig.json	/^  "references": [{ "path": "..\/..\/" }],$/;"	o	array:references
0	vscode/tsconfig.json	/^    "lib": ["ESNext", "DOM"],$/;"	s	array:compilerOptions.lib
0	vscode/tsconfig.json	/^    "src",$/;"	s	array:include
0	vscode/tsconfig.json	/^    {$/;"	o	array:references
0	vscode/tsconfig.json	/^  "exclude": ["scripts", "dist", "test\/integration"],$/;"	s	array:exclude
0	web/.eslintrc.json	/^    "react\/jsx-filename-extension": [1, { "extensions": [".ts", ".tsx"] }],$/;"	n	array:rules.react/jsx-filename-extension
0	web/.eslintrc.json	/^    "react\/jsx-filename-extension": [1, { "extensions": [".ts", ".tsx"] }],$/;"	s	array:rules.react/jsx-filename-extension.1.extensions
0	web/tsconfig.json	/^    "lib": ["ESNext", "DOM"],$/;"	s	array:compilerOptions.lib
0	web/tsconfig.json	/^  "exclude": ["dist"],$/;"	s	array:exclude
0	web/tsconfig.json	/^  "include": ["src", "vite.config.ts"],$/;"	s	array:include
0	web/tsconfig.json	/^  "references": [{ "path": "..\/lib\/shared" }, { "path": "..\/lib\/ui" }],$/;"	o	array:references
1	.stylelintrc.json	/^      {$/;"	o	array:rules.declaration-block-no-duplicate-properties
1	.stylelintrc.json	/^      {$/;"	o	array:rules.selector-pseudo-class-no-unknown
1	.stylelintrc.json	/^    "function-disallowed-list": ["rgb", "hsl"],$/;"	s	array:rules.function-disallowed-list
1	.stylelintrc.json	/^  "extends": ["stylelint-config-standard", "stylelint-config-prettier"],$/;"	s	array:extends
1	.vscode/extensions.json	/^    "editorconfig.editorconfig",$/;"	s	array:recommendations
1	.vscode/launch.json	/^        "--disable-extension=sourcegraph.cody-ai",$/;"	s	array:configurations.0.args
1	.vscode/settings.json	/^  "eslint.validate": ["javascript", "javascriptreact", "typescript", "typescriptreact"],$/;"	s	array:eslint.validate
1	.vscode/tasks.json	/^    {$/;"	o	array:tasks
1	agent/tsconfig.json	/^  "include": ["**\/*", ".*", "package.json"],$/;"	s	array:include
1	cli/package.json	/^    "src",$/;"	s	array:files
1	completions-review-tool/data/completions-1686127320776.json	/^      "const fileName = path.join(__dirname, 'date.txt')"$/;"	s	array:2.completions
1	completions-review-tool/data/completions-1686127320776.json	/^      "throw new Error(\\"Not implemented.\\");"$/;"	s	array:1.completions
1	completions-review-tool/data/completions-1686127320776.json	/^  {$/;"	o
1	completions-review-tool/data/completions-1686127445971.json	/^      "const dateString = new Date().toISOString()",$/;"	s	array:1.completions
1	completions-review-tool/data/completions-1686127445971.json	/^      "signale.info(message)"$/;"	s	array:0.completions
1	completions-review-tool/data/completions-1686127445971.json	/^  {$/;"	o
1	completions-review-tool/data/completions-1686127449821.json	/^      "const dateStr = new Date().toISOString()",$/;"	s	array:1.completions
1	completions-review-tool/data/completions-1686127449821.json	/^      "signale.log(message);"$/;"	s	array:0.completions
1	completions-review-tool/data/completions-1686127449821.json	/^      "throw new Error('unimplemented')"$/;"	s	array:2.completions
1	completions-review-tool/data/completions-1686127449821.json	/^  {$/;"	o
1	completions-review-tool/data/completions-1686127552793.json	/^      "\/\/ TODO"$/;"	s	array:2.completions
1	completions-review-tool/data/completions-1686127552793.json	/^      "const date =",$/;"	s	array:0.completions
1	completions-review-tool/data/completions-1686127552793.json	/^  {$/;"	o
1	completions-review-tool/tsconfig.json	/^  "include": ["globals.d.ts", "remix.env.d.ts", "**\/*.ts", "**\/*.tsx", "*.js"],$/;"	s	array:include
1	lib/shared/package.json	/^    "src",$/;"	s	array:files
1	lib/shared/tsconfig.json	/^    "lib": ["ESNext", "DOM.Iterable"],$/;"	s	array:compilerOptions.lib
1	lib/shared/tsconfig.json	/^  "include": ["src", "src\/telemetry\/EventLogger.ts"],$/;"	s	array:include
1	lib/ui/.eslintrc.json	/^      {$/;"	o	array:rules.no-restricted-imports
1	lib/ui/package.json	/^    "src",$/;"	s	array:files
1	lib/ui/tsconfig.json	/^    "lib": ["ESNext", "DOM", "DOM.Iterable"],$/;"	s	array:compilerOptions.lib
1	node_modules/autopreview/package.json	/^    "index.d.ts",$/;"	s	array:files
1	slack/tsconfig.json	/^  "include": ["src", "package.json"],$/;"	s	array:include
1	tsconfig.json	/^    ".prettierrc.js",$/;"	s	array:include
1	tsconfig.json	/^    { "path": "cli" },$/;"	o	array:references
1	tsconfig.json	/^  "exclude": ["dist", "node_modules"],$/;"	s	array:exclude
1	vscode/.eslintrc.json	/^    "@typescript-eslint\/no-floating-promises": ["error", { "ignoreVoid": true }],$/;"	o	array:rules.@typescript-eslint/no-floating-promises
1	vscode/.eslintrc.json	/^    "no-void": ["error", { "allowAsStatement": true }],$/;"	o	array:rules.no-void
1	vscode/.eslintrc.json	/^    "react\/jsx-filename-extension": [1, { "extensions": [".ts", ".tsx"] }],$/;"	o	array:rules.react/jsx-filename-extension
1	vscode/.eslintrc.json	/^    "react\/jsx-filename-extension": [1, { "extensions": [".ts", ".tsx"] }],$/;"	s	array:rules.react/jsx-filename-extension.1.extensions
1	vscode/package.json	/^            "keyword",$/;"	s	array:contributes.configuration.properties.cody.useContext.enum
1	vscode/package.json	/^            "ssh:\/\/git@github.com\/sourcegraph\/cody"$/;"	s	array:contributes.configuration.properties.cody.codebase.examples
1	vscode/package.json	/^          {$/;"	o	array:contributes.walkthroughs.0.steps
1	vscode/package.json	/^        {$/;"	o	array:contributes.menus.cody.submenu
1	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
1	vscode/package.json	/^        {$/;"	o	array:contributes.menus.comments/commentThread/context
1	vscode/package.json	/^        {$/;"	o	array:contributes.menus.comments/commentThread/title
1	vscode/package.json	/^        {$/;"	o	array:contributes.menus.view/item/context
1	vscode/package.json	/^        {$/;"	o	array:contributes.menus.view/title
1	vscode/package.json	/^        {$/;"	o	array:contributes.views.cody
1	vscode/package.json	/^      {$/;"	o	array:contributes.colors
1	vscode/package.json	/^      {$/;"	o	array:contributes.commands
1	vscode/package.json	/^      {$/;"	o	array:contributes.keybindings
1	vscode/package.json	/^    "Machine Learning",$/;"	s	array:categories
1	vscode/package.json	/^    "openai",$/;"	s	array:keywords
1	vscode/scripts/tsconfig.json	/^  "include": [".*", "*"],$/;"	s	array:include
1	vscode/test/integration/tsconfig.json	/^    "types": ["mocha", "node"],$/;"	s	array:compilerOptions.types
1	vscode/tsconfig.json	/^    "lib": ["ESNext", "DOM"],$/;"	s	array:compilerOptions.lib
1	vscode/tsconfig.json	/^    "test\/fixtures",$/;"	s	array:include
1	vscode/tsconfig.json	/^    {$/;"	o	array:references
1	vscode/tsconfig.json	/^  "exclude": ["scripts", "dist", "test\/integration"],$/;"	s	array:exclude
1	web/.eslintrc.json	/^    "react\/jsx-filename-extension": [1, { "extensions": [".ts", ".tsx"] }],$/;"	o	array:rules.react/jsx-filename-extension
1	web/.eslintrc.json	/^    "react\/jsx-filename-extension": [1, { "extensions": [".ts", ".tsx"] }],$/;"	s	array:rules.react/jsx-filename-extension.1.extensions
1	web/tsconfig.json	/^    "lib": ["ESNext", "DOM"],$/;"	s	array:compilerOptions.lib
1	web/tsconfig.json	/^  "include": ["src", "vite.config.ts"],$/;"	s	array:include
1	web/tsconfig.json	/^  "references": [{ "path": "..\/lib\/shared" }, { "path": "..\/lib\/ui" }],$/;"	o	array:references
10	vscode/package.json	/^        {$/;"	o	array:contributes.menus.cody.submenu
10	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
10	vscode/package.json	/^      {$/;"	o	array:contributes.commands
10	vscode/package.json	/^    "codey",$/;"	s	array:keywords
10	vscode/tsconfig.json	/^    "test\/completions\/completions-dataset.ts",$/;"	s	array:include
11	vscode/package.json	/^        {$/;"	o	array:contributes.menus.cody.submenu
11	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
11	vscode/package.json	/^      {$/;"	o	array:contributes.commands
11	vscode/package.json	/^    "llm",$/;"	s	array:keywords
12	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
12	vscode/package.json	/^      {$/;"	o	array:contributes.commands
12	vscode/package.json	/^    "codegen",$/;"	s	array:keywords
13	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
13	vscode/package.json	/^      {$/;"	o	array:contributes.commands
13	vscode/package.json	/^    "autocomplete",$/;"	s	array:keywords
14	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
14	vscode/package.json	/^      {$/;"	o	array:contributes.commands
14	vscode/package.json	/^    "bot",$/;"	s	array:keywords
15	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
15	vscode/package.json	/^      {$/;"	o	array:contributes.commands
15	vscode/package.json	/^    "model",$/;"	s	array:keywords
16	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
16	vscode/package.json	/^      {$/;"	o	array:contributes.commands
16	vscode/package.json	/^    "typescript",$/;"	s	array:keywords
17	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
17	vscode/package.json	/^      {$/;"	o	array:contributes.commands
17	vscode/package.json	/^    "javascript",$/;"	s	array:keywords
18	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
18	vscode/package.json	/^      {$/;"	o	array:contributes.commands
18	vscode/package.json	/^    "python",$/;"	s	array:keywords
19	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
19	vscode/package.json	/^      {$/;"	o	array:contributes.commands
19	vscode/package.json	/^    "golang",$/;"	s	array:keywords
2	.vscode/extensions.json	/^    "esbenp.prettier-vscode",$/;"	s	array:recommendations
2	.vscode/launch.json	/^        "--disable-extension=github.copilot",$/;"	s	array:configurations.0.args
2	.vscode/settings.json	/^  "eslint.validate": ["javascript", "javascriptreact", "typescript", "typescriptreact"],$/;"	s	array:eslint.validate
2	agent/tsconfig.json	/^  "include": ["**\/*", ".*", "package.json"],$/;"	s	array:include
2	cli/package.json	/^    "!**\/*.test.*",$/;"	s	array:files
2	completions-review-tool/data/completions-1686127320776.json	/^  {$/;"	o
2	completions-review-tool/data/completions-1686127445971.json	/^      "const filename = 'file.txt'"$/;"	s	array:1.completions
2	completions-review-tool/data/completions-1686127445971.json	/^  {$/;"	o
2	completions-review-tool/data/completions-1686127449821.json	/^      "const now = new Date()"$/;"	s	array:1.completions
2	completions-review-tool/data/completions-1686127449821.json	/^  {$/;"	o
2	completions-review-tool/data/completions-1686127552793.json	/^      "const p = path.j"$/;"	s	array:0.completions
2	completions-review-tool/data/completions-1686127552793.json	/^  {$/;"	o
2	completions-review-tool/tsconfig.json	/^  "include": ["globals.d.ts", "remix.env.d.ts", "**\/*.ts", "**\/*.tsx", "*.js"],$/;"	s	array:include
2	lib/shared/package.json	/^    "!**\/*.test.*"$/;"	s	array:files
2	lib/ui/package.json	/^    "!**\/*.test.*",$/;"	s	array:files
2	lib/ui/tsconfig.json	/^    "lib": ["ESNext", "DOM", "DOM.Iterable"],$/;"	s	array:compilerOptions.lib
2	node_modules/autopreview/package.json	/^    "xdg-open"$/;"	s	array:files
2	tsconfig.json	/^    "vitest.workspace.js",$/;"	s	array:include
2	tsconfig.json	/^    { "path": "lib\/shared" },$/;"	o	array:references
2	vscode/package.json	/^            "none",$/;"	s	array:contributes.configuration.properties.cody.useContext.enum
2	vscode/package.json	/^          {$/;"	o	array:contributes.walkthroughs.0.steps
2	vscode/package.json	/^        {$/;"	o	array:contributes.menus.cody.submenu
2	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
2	vscode/package.json	/^        {$/;"	o	array:contributes.menus.comments/commentThread/title
2	vscode/package.json	/^        {$/;"	o	array:contributes.menus.view/item/context
2	vscode/package.json	/^        {$/;"	o	array:contributes.menus.view/title
2	vscode/package.json	/^      {$/;"	o	array:contributes.colors
2	vscode/package.json	/^      {$/;"	o	array:contributes.commands
2	vscode/package.json	/^      {$/;"	o	array:contributes.keybindings
2	vscode/package.json	/^    "Snippets",$/;"	s	array:categories
2	vscode/package.json	/^    "anthropic",$/;"	s	array:keywords
2	vscode/tsconfig.json	/^    "playwright.config.ts",$/;"	s	array:include
2	vscode/tsconfig.json	/^  "exclude": ["scripts", "dist", "test\/integration"],$/;"	s	array:exclude
20	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
20	vscode/package.json	/^      {$/;"	o	array:contributes.commands
20	vscode/package.json	/^    "go",$/;"	s	array:keywords
21	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
21	vscode/package.json	/^      {$/;"	o	array:contributes.commands
21	vscode/package.json	/^    "html",$/;"	s	array:keywords
22	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
22	vscode/package.json	/^      {$/;"	o	array:contributes.commands
22	vscode/package.json	/^    "css",$/;"	s	array:keywords
23	vscode/package.json	/^      {$/;"	o	array:contributes.commands
23	vscode/package.json	/^    "java",$/;"	s	array:keywords
24	vscode/package.json	/^      {$/;"	o	array:contributes.commands
24	vscode/package.json	/^    "php",$/;"	s	array:keywords
25	vscode/package.json	/^      {$/;"	o	array:contributes.commands
25	vscode/package.json	/^    "swift",$/;"	s	array:keywords
26	vscode/package.json	/^      {$/;"	o	array:contributes.commands
26	vscode/package.json	/^    "kotlin"$/;"	s	array:keywords
27	vscode/package.json	/^      {$/;"	o	array:contributes.commands
28	vscode/package.json	/^      {$/;"	o	array:contributes.commands
29	vscode/package.json	/^      {$/;"	o	array:contributes.commands
3	.vscode/extensions.json	/^    "ecmel.vscode-html-css",$/;"	s	array:recommendations
3	.vscode/launch.json	/^        "--disable-extension=github.copilot-nightly"$/;"	s	array:configurations.0.args
3	.vscode/settings.json	/^  "eslint.validate": ["javascript", "javascriptreact", "typescript", "typescriptreact"],$/;"	s	array:eslint.validate
3	cli/package.json	/^    "!**\/*.tsbuildinfo"$/;"	s	array:files
3	completions-review-tool/tsconfig.json	/^  "include": ["globals.d.ts", "remix.env.d.ts", "**\/*.ts", "**\/*.tsx", "*.js"],$/;"	s	array:include
3	lib/ui/package.json	/^    "!**\/*.story.*",$/;"	s	array:files
3	tsconfig.json	/^    "lib\/shared\/vitest.config.ts",$/;"	s	array:include
3	tsconfig.json	/^    { "path": "lib\/ui" },$/;"	o	array:references
3	vscode/package.json	/^            "blended"$/;"	s	array:contributes.configuration.properties.cody.useContext.enum
3	vscode/package.json	/^          {$/;"	o	array:contributes.walkthroughs.0.steps
3	vscode/package.json	/^        {$/;"	o	array:contributes.menus.cody.submenu
3	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
3	vscode/package.json	/^        {$/;"	o	array:contributes.menus.view/title
3	vscode/package.json	/^      {$/;"	o	array:contributes.colors
3	vscode/package.json	/^      {$/;"	o	array:contributes.commands
3	vscode/package.json	/^      {$/;"	o	array:contributes.keybindings
3	vscode/package.json	/^    "Education"$/;"	s	array:categories
3	vscode/package.json	/^    "assistant",$/;"	s	array:keywords
3	vscode/tsconfig.json	/^    "test\/e2e",$/;"	s	array:include
30	vscode/package.json	/^      {$/;"	o	array:contributes.commands
31	vscode/package.json	/^      {$/;"	o	array:contributes.commands
32	vscode/package.json	/^      {$/;"	o	array:contributes.commands
4	.vscode/extensions.json	/^    "dbaeumer.vscode-eslint",$/;"	s	array:recommendations
4	completions-review-tool/tsconfig.json	/^  "include": ["globals.d.ts", "remix.env.d.ts", "**\/*.ts", "**\/*.tsx", "*.js"],$/;"	s	array:include
4	lib/ui/package.json	/^    "!dist\/**\/*.ts?(x)",$/;"	s	array:files
4	tsconfig.json	/^    "cli\/vitest.config.ts"$/;"	s	array:include
4	tsconfig.json	/^    { "path": "slack" },$/;"	o	array:references
4	vscode/package.json	/^          {$/;"	o	array:contributes.walkthroughs.0.steps
4	vscode/package.json	/^        {$/;"	o	array:contributes.menus.cody.submenu
4	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
4	vscode/package.json	/^        {$/;"	o	array:contributes.menus.view/title
4	vscode/package.json	/^      {$/;"	o	array:contributes.colors
4	vscode/package.json	/^      {$/;"	o	array:contributes.commands
4	vscode/package.json	/^      {$/;"	o	array:contributes.keybindings
4	vscode/package.json	/^    "chatbot",$/;"	s	array:keywords
4	vscode/tsconfig.json	/^    "webviews",$/;"	s	array:include
5	.vscode/extensions.json	/^    "stylelint.vscode-stylelint"$/;"	s	array:recommendations
5	lib/ui/package.json	/^    "dist\/**\/*.d.ts"$/;"	s	array:files
5	tsconfig.json	/^    { "path": "vscode" },$/;"	o	array:references
5	vscode/package.json	/^          {$/;"	o	array:contributes.walkthroughs.0.steps
5	vscode/package.json	/^        {$/;"	o	array:contributes.menus.cody.submenu
5	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
5	vscode/package.json	/^        {$/;"	o	array:contributes.menus.view/title
5	vscode/package.json	/^      {$/;"	o	array:contributes.colors
5	vscode/package.json	/^      {$/;"	o	array:contributes.commands
5	vscode/package.json	/^      {$/;"	o	array:contributes.keybindings
5	vscode/package.json	/^    "chat",$/;"	s	array:keywords
5	vscode/tsconfig.json	/^    "vite.config.ts",$/;"	s	array:include
6	tsconfig.json	/^    { "path": "vscode\/test\/integration" },$/;"	o	array:references
6	vscode/package.json	/^        {$/;"	o	array:contributes.menus.cody.submenu
6	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
6	vscode/package.json	/^        {$/;"	o	array:contributes.menus.view/title
6	vscode/package.json	/^      {$/;"	o	array:contributes.commands
6	vscode/package.json	/^    "refactor",$/;"	s	array:keywords
6	vscode/tsconfig.json	/^    "webpack.config.js",$/;"	s	array:include
7	tsconfig.json	/^    { "path": "vscode\/test\/completions" },$/;"	o	array:references
7	vscode/package.json	/^        {$/;"	o	array:contributes.menus.cody.submenu
7	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
7	vscode/package.json	/^        {$/;"	o	array:contributes.menus.view/title
7	vscode/package.json	/^      {$/;"	o	array:contributes.commands
7	vscode/package.json	/^    "documentation",$/;"	s	array:keywords
7	vscode/tsconfig.json	/^    "package.json",$/;"	s	array:include
8	tsconfig.json	/^    { "path": "vscode\/scripts" },$/;"	o	array:references
8	vscode/package.json	/^        {$/;"	o	array:contributes.menus.cody.submenu
8	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
8	vscode/package.json	/^        {$/;"	o	array:contributes.menus.view/title
8	vscode/package.json	/^      {$/;"	o	array:contributes.commands
8	vscode/package.json	/^    "test",$/;"	s	array:keywords
8	vscode/tsconfig.json	/^    ".storybook\/*.ts",$/;"	s	array:include
9	tsconfig.json	/^    { "path": "web" }$/;"	o	array:references
9	vscode/package.json	/^        {$/;"	o	array:contributes.menus.cody.submenu
9	vscode/package.json	/^        {$/;"	o	array:contributes.menus.commandPalette
9	vscode/package.json	/^        {$/;"	o	array:contributes.menus.view/title
9	vscode/package.json	/^      {$/;"	o	array:contributes.commands
9	vscode/package.json	/^    "sourcegraph",$/;"	s	array:keywords
9	vscode/tsconfig.json	/^    "..\/lib\/shared\/src\/telemetry\/EventLogger.ts",$/;"	s	array:include
::-webkit-scrollbar	node_modules/autopreview/css/index.css	/^[data-autopreview-wrapper]::-webkit-scrollbar {$/;"	s
:global(.theme-dark)	lib/ui/src/chat/Transcript.story.module.css	/^:global(.theme-dark) {$/;"	c
:global(.theme-light)	lib/ui/src/chat/Transcript.story.module.css	/^:global(.theme-light) {$/;"	c
:global(.token-hallucinated)	vscode/webviews/Chat.module.css	/^:global(.token-hallucinated) {$/;"	c
:global(.token-hallucinated)	vscode/webviews/Chat.module.css	/^:global(.token-hallucinated),$/;"	c
:global(.token-hallucinated)::before	vscode/webviews/Chat.module.css	/^:global(.token-hallucinated)::before {$/;"	c
:global(.token-not-hallucinated)	vscode/webviews/Chat.module.css	/^:global(.token-not-hallucinated) {$/;"	c
:root	lib/ui/src/chat/TranscriptItem.module.css	/^:root {$/;"	s
:root	lib/ui/src/utils/highlight.css	/^:root {$/;"	s
:root	vscode/webviews/index.css	/^:root {$/;"	s
:root	vscode/webviews/storybook/VSCodeStoryDecorator.module.css	/^:root {$/;"	s
:root	web/src/index.css	/^:root {$/;"	s
<img src="https://storage.googleapis.com/sourcegraph-assets/cody/20230417/logomark-default.svg" width="26"> Cody	README.md	/^# <img src="https:\/\/storage.googleapis.com\/sourcegraph-assets\/cody\/20230417\/logomark-defau/;"	c
@anthropic-ai/sdk	vscode/package.json	/^    "@anthropic-ai\/sdk": "^0.4.2",$/;"	s	object:dependencies
@ianvs/prettier-plugin-sort-imports	package.json	/^    "@ianvs\/prettier-plugin-sort-imports": "^4.0.2",$/;"	s	object:devDependencies
@mdi/js	lib/ui/package.json	/^    "@mdi\/js": "^7.2.96",$/;"	s	object:dependencies
@microsoft/fast-web-utilities	package.json	/^          "@microsoft\/fast-web-utilities": "^6.0.0",$/;"	s	object:pnpm.packageExtensions.@vscode/webview-ui-toolkit.dependencies
@microsoft/fetch-event-source	lib/shared/package.json	/^    "@microsoft\/fetch-event-source": "^2.0.1",$/;"	s	object:dependencies
@playwright/test	vscode/package.json	/^    "@playwright\/test": "^1.33.0",$/;"	s	object:devDependencies
@remix-run/css-bundle	completions-review-tool/package.json	/^    "@remix-run\/css-bundle": "^1.17.0",$/;"	s	object:dependencies
@remix-run/dev	completions-review-tool/package.json	/^    "@remix-run\/dev": "^1.17.0",$/;"	s	object:devDependencies
@remix-run/express	completions-review-tool/package.json	/^    "@remix-run\/express": "^1.17.0",$/;"	s	object:dependencies
@remix-run/node	completions-review-tool/package.json	/^    "@remix-run\/node": "^1.17.0",$/;"	s	object:dependencies
@remix-run/react	completions-review-tool/package.json	/^    "@remix-run\/react": "^1.17.0",$/;"	s	object:dependencies
@remix-run/server-runtime	completions-review-tool/package.json	/^    "@remix-run\/server-runtime": "^1.17.0",$/;"	s	object:dependencies
@slack/bolt	slack/package.json	/^    "@slack\/bolt": "^3.12.2",$/;"	s	object:dependencies
@slack/web-api	slack/package.json	/^    "@slack\/web-api": "^6.8.1",$/;"	s	object:dependencies
@sourcegraph/cody-shared	agent/package.json	/^    "@sourcegraph\/cody-shared": "workspace:*"$/;"	s	object:dependencies
@sourcegraph/cody-shared	cli/package.json	/^    "@sourcegraph\/cody-shared": "workspace:*",$/;"	s	object:dependencies
@sourcegraph/cody-shared	lib/ui/package.json	/^    "@sourcegraph\/cody-shared": "workspace:*",$/;"	s	object:dependencies
@sourcegraph/cody-shared	slack/package.json	/^    "@sourcegraph\/cody-shared": "workspace:*",$/;"	s	object:dependencies
@sourcegraph/cody-shared	vscode/package.json	/^    "@sourcegraph\/cody-shared": "workspace:*",$/;"	s	object:dependencies
@sourcegraph/cody-shared	web/package.json	/^    "@sourcegraph\/cody-shared": "workspace:*",$/;"	s	object:dependencies
@sourcegraph/cody-ui	vscode/package.json	/^    "@sourcegraph\/cody-ui": "workspace:*",$/;"	s	object:dependencies
@sourcegraph/cody-ui	web/package.json	/^    "@sourcegraph\/cody-ui": "workspace:*",$/;"	s	object:dependencies
@sourcegraph/eslint-config	package.json	/^    "@sourcegraph\/eslint-config": "0.33.0",$/;"	s	object:devDependencies
@sourcegraph/prettierrc	package.json	/^    "@sourcegraph\/prettierrc": "^3.0.3",$/;"	s	object:devDependencies
@sourcegraph/tsconfig	package.json	/^    "@sourcegraph\/tsconfig": "^4.0.1",$/;"	s	object:devDependencies
@storybook/addon-essentials	package.json	/^    "@storybook\/addon-essentials": "^7.0.26",$/;"	s	object:devDependencies
@storybook/addon-interactions	package.json	/^    "@storybook\/addon-interactions": "^7.0.26",$/;"	s	object:devDependencies
@storybook/addon-links	package.json	/^    "@storybook\/addon-links": "^7.0.26",$/;"	s	object:devDependencies
@storybook/blocks	package.json	/^    "@storybook\/blocks": "^7.0.26",$/;"	s	object:devDependencies
@storybook/react	package.json	/^    "@storybook\/react": "^7.0.26",$/;"	s	object:devDependencies
@storybook/react-vite	package.json	/^    "@storybook\/react-vite": "^7.0.26",$/;"	s	object:devDependencies
@storybook/testing-library	package.json	/^    "@storybook\/testing-library": "^0.0.14-next.2",$/;"	s	object:devDependencies
@types/compression	completions-review-tool/package.json	/^    "@types\/compression": "^1.7.2",$/;"	s	object:devDependencies
@types/dedent	vscode/package.json	/^    "@types\/dedent": "^0.7.0",$/;"	s	object:devDependencies
@types/dompurify	lib/shared/package.json	/^    "@types\/dompurify": "^3.0.2",$/;"	s	object:devDependencies
@types/express	vscode/package.json	/^    "@types\/express": "^4.17.17",$/;"	s	object:devDependencies
@types/glob	vscode/package.json	/^    "@types\/glob": "^7.2.0",$/;"	s	object:devDependencies
@types/highlight.js	lib/shared/package.json	/^    "@types\/highlight.js": "^9.12.4",$/;"	s	object:devDependencies
@types/isomorphic-fetch	lib/shared/package.json	/^    "@types\/isomorphic-fetch": "^0.0.36",$/;"	s	object:devDependencies
@types/isomorphic-fetch	vscode/package.json	/^    "@types\/isomorphic-fetch": "^0.0.36",$/;"	s	object:devDependencies
@types/lodash	lib/shared/package.json	/^    "@types\/lodash": "^4.14.195",$/;"	s	object:devDependencies
@types/lodash	slack/package.json	/^    "@types\/lodash": "^4.14.195"$/;"	s	object:devDependencies
@types/lodash	vscode/package.json	/^    "@types\/lodash": "^4.14.195",$/;"	s	object:devDependencies
@types/lodash	web/package.json	/^    "@types\/lodash": "^4.14.195"$/;"	s	object:devDependencies
@types/marked	lib/shared/package.json	/^    "@types\/marked": "^4.0.3",$/;"	s	object:devDependencies
@types/mocha	vscode/package.json	/^    "@types\/mocha": "^10.0.1",$/;"	s	object:devDependencies
@types/mock-require	vscode/package.json	/^    "@types\/mock-require": "^2.0.1",$/;"	s	object:devDependencies
@types/morgan	completions-review-tool/package.json	/^    "@types\/morgan": "^1.9.4",$/;"	s	object:devDependencies
@types/node	package.json	/^    "@types\/node": "20.4.0",$/;"	s	object:devDependencies
@types/prettier	package.json	/^    "@types\/prettier": "^2.7.2",$/;"	s	object:devDependencies
@types/prompts	cli/package.json	/^    "@types\/prompts": "^2.4.4"$/;"	s	object:devDependencies
@types/react	package.json	/^    "@types\/react": "18.0.8",$/;"	s	object:devDependencies
@types/react-dom	package.json	/^    "@types\/react-dom": "18.0.2",$/;"	s	object:devDependencies
@types/react-table	completions-review-tool/package.json	/^    "@types\/react-table": "^7.7.14",$/;"	s	object:devDependencies
@types/semver	vscode/package.json	/^    "@types\/semver": "^7.5.0",$/;"	s	object:devDependencies
@types/stream-json	vscode/package.json	/^    "@types\/stream-json": "^1.7.3",$/;"	s	object:dependencies
@types/uuid	vscode/package.json	/^    "@types\/uuid": "^9.0.2",$/;"	s	object:devDependencies
@types/vscode	lib/shared/package.json	/^    "@types\/vscode": "^1.80.0",$/;"	s	object:devDependencies
@types/vscode	vscode/package.json	/^    "@types\/vscode": "^1.79.0",$/;"	s	object:devDependencies
@types/vscode-webview	vscode/package.json	/^    "@types\/vscode-webview": "^1.57.1",$/;"	s	object:devDependencies
@types/xml2js	lib/shared/package.json	/^    "@types\/xml2js": "^0.4.11"$/;"	s	object:devDependencies
@typescript-eslint/consistent-type-definitions	completions-review-tool/.eslintrc.json	/^    "@typescript-eslint\/consistent-type-definitions": "off",$/;"	s	object:rules
@typescript-eslint/explicit-function-return-type	cli/.eslintrc.json	/^    "@typescript-eslint\/explicit-function-return-type": "off"$/;"	s	object:rules
@typescript-eslint/explicit-function-return-type	completions-review-tool/.eslintrc.json	/^    "@typescript-eslint\/explicit-function-return-type": "off",$/;"	s	object:rules
@typescript-eslint/explicit-function-return-type	slack/.eslintrc.json	/^    "@typescript-eslint\/explicit-function-return-type": "off",$/;"	s	object:rules
@typescript-eslint/no-floating-promises	vscode/.eslintrc.json	/^    "@typescript-eslint\/no-floating-promises": ["error", { "ignoreVoid": true }],$/;"	a	object:rules
@typescript-eslint/no-require-imports	completions-review-tool/.eslintrc.json	/^    "@typescript-eslint\/no-require-imports": "off",$/;"	s	object:rules
@typescript-eslint/no-var-requires	completions-review-tool/.eslintrc.json	/^    "@typescript-eslint\/no-var-requires": "off",$/;"	s	object:rules
@typescript-eslint/unbound-method	completions-review-tool/.eslintrc.json	/^    "@typescript-eslint\/unbound-method": "off",$/;"	s	object:rules
@vitejs/plugin-react	package.json	/^    "@vitejs\/plugin-react": "^4.0.2",$/;"	s	object:devDependencies
@vscode/codicons	vscode/package.json	/^    "@vscode\/codicons": "^0.0.29",$/;"	s	object:dependencies
@vscode/test-electron	vscode/package.json	/^    "@vscode\/test-electron": "^2.3.2",$/;"	s	object:devDependencies
@vscode/vsce	vscode/package.json	/^    "@vscode\/vsce": "^2.19.0",$/;"	s	object:devDependencies
@vscode/webview-ui-toolkit	package.json	/^      "@vscode\/webview-ui-toolkit": {$/;"	o	object:pnpm.packageExtensions
@vscode/webview-ui-toolkit	vscode/package.json	/^    "@vscode\/webview-ui-toolkit": "^1.2.2",$/;"	s	object:dependencies
ALLOWED_URI_REGEXP	lib/shared/src/chat/markdown.ts	/^const ALLOWED_URI_REGEXP = \/^((https?|vscode):\\\/\\\/[^\\s#$.\/?].\\S*|command:cody.welcome)$\//;"	C
ANONYMOUS_USER_ID_KEY	vscode/src/services/LocalStorageProvider.ts	/^    private ANONYMOUS_USER_ID_KEY = 'sourcegraphAnonymousUid'$/;"	p	class:LocalStorage
ANSWER_TOKENS	lib/shared/src/prompt/constants.ts	/^export const ANSWER_TOKENS = 1000$/;"	C
ANSWER_TOKENS	lib/shared/src/prompt/constants.ts	/^export const MAX_AVAILABLE_PROMPT_LENGTH = DEFAULT_MAX_TOKENS - ANSWER_TOKENS$/;"	C
APIResponse	lib/shared/src/sourcegraph-api/graphql/client.ts	/^interface APIResponse<T> {$/;"	i
APP_CALLBACK_URL	vscode/src/chat/protocol.ts	/^export const APP_CALLBACK_URL = new URL('sourcegraph:\/\/user\/settings\/tokens\/new\/callback')$/;"	C
APP_LANDING_URL	vscode/src/chat/protocol.ts	/^export const APP_LANDING_URL = new URL('https:\/\/about.sourcegraph.com\/app')$/;"	C
Action	vscode/src/notifications/index.ts	/^interface Action {$/;"	i
ActionNotification	vscode/src/notifications/index.ts	/^export interface ActionNotification {$/;"	i
ActiveTextEditor	lib/shared/src/editor/index.ts	/^export interface ActiveTextEditor {$/;"	i
ActiveTextEditorSelection	lib/shared/src/editor/index.ts	/^export interface ActiveTextEditorSelection {$/;"	i
ActiveTextEditorSelectionRange	lib/shared/src/editor/index.ts	/^export interface ActiveTextEditorSelectionRange {$/;"	i
ActiveTextEditorViewControllers	lib/shared/src/editor/index.ts	/^export interface ActiveTextEditorViewControllers {$/;"	i
ActiveTextEditorVisibleContent	lib/shared/src/editor/index.ts	/^export interface ActiveTextEditorVisibleContent {$/;"	i
Added	vscode/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[0.0.10]
Added	vscode/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[0.0.9]
Added	vscode/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[0.1.0]
Added	vscode/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[0.1.2]
Added	vscode/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[0.1.3]
Added	vscode/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[0.1.4]
Added	vscode/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[0.1.5]
Added	vscode/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[0.2.0]
Added	vscode/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[0.2.2]
Added	vscode/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[0.2.3]
Added	vscode/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[0.2.4]
Added	vscode/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[0.2.5]
Added	vscode/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[0.4.0]
Added	vscode/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[0.4.2]
Added	vscode/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[0.4.3]
Added	vscode/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[0.4.4]
Added	vscode/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[0.6.1]
Added	vscode/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[Template]
Added	vscode/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[Unreleased]
Agent	agent/src/agent.ts	/^export class Agent extends MessageHandler {$/;"	c
AgentEditor	agent/src/editor.ts	/^export class AgentEditor implements Editor {$/;"	c
All Tests	vscode/test/e2e/README.md	/^#### All Tests$/;"	t	subsection:Cody E2E Testing""Commands
AnnotatedText	lib/shared/src/guardrails/index.ts	/^interface AnnotatedText {$/;"	i
AnthropicOptions	vscode/src/completions/providers/anthropic.ts	/^interface AnthropicOptions {$/;"	i
AnthropicProvider	vscode/src/completions/providers/anthropic.ts	/^export class AnthropicProvider extends Provider {$/;"	c
AppContext	slack/src/constants.ts	/^export interface AppContext {$/;"	i
AppJson	vscode/src/services/LocalAppFsPaths.ts	/^export interface AppJson {$/;"	C
Architecture	slack/README.md	/^## Architecture$/;"	s
Attribution	lib/shared/src/guardrails/index.ts	/^export interface Attribution {$/;"	i
AuthMenu	vscode/src/services/AuthMenus.ts	/^export const AuthMenu = async (type: AuthMenuType, historyItems: string[]): Promise<LoginMenuIte/;"	C
AuthMenuOptions	vscode/src/services/AuthMenus.ts	/^export const AuthMenuOptions = {$/;"	C
AuthMenuType	vscode/src/services/AuthMenus.ts	/^export type AuthMenuType = 'signin' | 'signout' | 'switch'$/;"	a
AuthProvider	vscode/src/services/AuthProvider.ts	/^export class AuthProvider {$/;"	c
AuthStatus	vscode/src/chat/protocol.ts	/^export interface AuthStatus {$/;"	i
AutoPreview	node_modules/autopreview/Autopreview.js	/^export default class AutoPreview {$/;"	c
AutoPreview	node_modules/autopreview/react.js	/^export const AutoPreview = AutoPreviewForReact;/;"	C
AutoPreview	node_modules/autopreview/react18.js	/^export const AutoPreview = AutoPreviewForReact;$/;"	C
AutoPreview	node_modules/autopreview/vue2.js	/^export const AutoPreview = AutoPreviewForVue;$/;"	C
AutoPreview	node_modules/autopreview/vue3.js	/^export const AutoPreview = AutoPreviewForVue;$/;"	C
AutoPreviewForReact	node_modules/autopreview/react.js	/^export default class AutoPreviewForReact extends Base {$/;"	c
AutoPreviewForReact	node_modules/autopreview/react18.js	/^export default class AutoPreviewForReact extends Base {$/;"	c
AutoPreviewForVue	node_modules/autopreview/vue2.js	/^export default class AutoPreviewForVue extends Base {$/;"	c
AutoPreviewForVue	node_modules/autopreview/vue3.js	/^export default class AutoPreviewForVue extends Base {$/;"	c
AutoPreviewList	node_modules/autopreview/components/list/index.js	/^class AutoPreviewList extends HTMLElement {$/;"	c
BAD_COMPLETION_START	vscode/src/completions/text-processing.ts	/^const BAD_COMPLETION_START = \/^(\\p{Emoji_Presentation}|\\u{200B}|\\+ |- |\\. )+(\\s)+\/u$/;"	C
BRACKET_PAIR	vscode/src/completions/multiline.ts	/^const BRACKET_PAIR = {$/;"	C
BotResponseMultiplexer	lib/shared/src/chat/bot-response-multiplexer.ts	/^export class BotResponseMultiplexer {$/;"	c
BotResponseSubscriber	lib/shared/src/chat/bot-response-multiplexer.ts	/^export interface BotResponseSubscriber {$/;"	i
BufferedBotResponseSubscriber	lib/shared/src/chat/bot-response-multiplexer.ts	/^export class BufferedBotResponseSubscriber implements BotResponseSubscriber {$/;"	c
Build and run the VS Code extension	doc/dev/index.md	/^### Build and run the VS Code extension$/;"	S	section:Development
BuildGraphQLUrlOptions	lib/shared/src/sourcegraph-api/graphql/url.ts	/^interface BuildGraphQLUrlOptions {$/;"	i
CHARS_PER_TOKEN	lib/shared/src/prompt/constants.ts	/^export const CHARS_PER_TOKEN = 4$/;"	C
CHARS_PER_TOKEN	vscode/src/completions/providers/anthropic.ts	/^const CHARS_PER_TOKEN = 4$/;"	C
CHAT_COMMAND	vscode/src/non-stop/FixupTypingUI.ts	/^        const CHAT_COMMAND = '\/chat'$/;"	C	method:FixupTypingUI.show
CHAT_RE	vscode/src/non-stop/FixupTypingUI.ts	/^        const CHAT_RE = \/^\\\/chat(|\\s.*)$\/$/;"	C	method:FixupTypingUI.show
CLOSING_CODE_TAG	vscode/src/completions/text-processing.ts	/^export const CLOSING_CODE_TAG = '<\/CODE5711>'$/;"	C
CODE_CONTEXT_TEMPLATE	lib/shared/src/prompt/templates.ts	/^const CODE_CONTEXT_TEMPLATE = `Use following code snippet from file \\`{filePath}\\`:$/;"	C
CODE_CONTEXT_TEMPLATE_WITH_REPO	lib/shared/src/prompt/templates.ts	/^const CODE_CONTEXT_TEMPLATE_WITH_REPO = `Use following code snippet from file \\`{filePath}\\` i/;"	C
CODY_ACCESS_TOKEN_SECRET	vscode/src/services/SecretStorageProvider.ts	/^export const CODY_ACCESS_TOKEN_SECRET = 'cody.access-token'$/;"	C
CODY_DOC_URL	vscode/src/chat/protocol.ts	/^export const CODY_DOC_URL = new URL('https:\/\/docs.sourcegraph.com\/cody')$/;"	C
CODY_ENDPOINT_HISTORY	vscode/src/services/LocalStorageProvider.ts	/^    private CODY_ENDPOINT_HISTORY = 'SOURCEGRAPH_CODY_ENDPOINT_HISTORY'$/;"	p	class:LocalStorage
CODY_FEEDBACK_URL	vscode/src/chat/protocol.ts	/^export const CODY_FEEDBACK_URL = new URL($/;"	C
CODY_FOCUS_ON_STARTUP	.vscode/launch.json	/^        "CODY_FOCUS_ON_STARTUP": "1"$/;"	s	object:configurations.0.env
CODY_TERMS_MARKDOWN	lib/ui/src/terms.ts	/^export const CODY_TERMS_MARKDOWN =$/;"	C
COMMAND_OUTPUT_TEMPLATE	lib/shared/src/prompt/templates.ts	/^const COMMAND_OUTPUT_TEMPLATE = 'Here is the output returned from the terminal.\\n'$/;"	C
CONFIG_KEY	vscode/src/configuration-keys.ts	/^export const CONFIG_KEY = getConfigFromPackageJson()$/;"	C
CRLF	vscode/src/testutils/mocks.ts	/^    CRLF = 2,$/;"	e	enum:EndOfLine
CURRENT_EDITOR_CODE_TEMPLATE	lib/shared/src/prompt/templates.ts	/^const CURRENT_EDITOR_CODE_TEMPLATE = 'I have the `{filePath}` file opened in my editor. '$/;"	C
CURRENT_EDITOR_CODE_TEMPLATE_WITH_REPO	lib/shared/src/prompt/templates.ts	/^const CURRENT_EDITOR_CODE_TEMPLATE_WITH_REPO =$/;"	C
CURRENT_EDITOR_SELECTED_CODE_TEMPLATE	lib/shared/src/prompt/templates.ts	/^const CURRENT_EDITOR_SELECTED_CODE_TEMPLATE = 'I am currently looking at this selected code from/;"	C
CURRENT_EDITOR_SELECTED_CODE_TEMPLATE_WITH_REPO	lib/shared/src/prompt/templates.ts	/^const CURRENT_EDITOR_SELECTED_CODE_TEMPLATE_WITH_REPO =$/;"	C
CURRENT_SITE_CODY_LLM_CONFIGURATION	lib/shared/src/sourcegraph-api/graphql/queries.ts	/^export const CURRENT_SITE_CODY_LLM_CONFIGURATION = `$/;"	C
CURRENT_SITE_GRAPHQL_FIELDS_QUERY	lib/shared/src/sourcegraph-api/graphql/queries.ts	/^export const CURRENT_SITE_GRAPHQL_FIELDS_QUERY = `$/;"	C
CURRENT_SITE_HAS_CODY_ENABLED_QUERY	lib/shared/src/sourcegraph-api/graphql/queries.ts	/^export const CURRENT_SITE_HAS_CODY_ENABLED_QUERY = `$/;"	C
CURRENT_SITE_VERSION_QUERY	lib/shared/src/sourcegraph-api/graphql/queries.ts	/^export const CURRENT_SITE_VERSION_QUERY = `$/;"	C
CURRENT_USER_ID_AND_VERIFIED_EMAIL_QUERY	lib/shared/src/sourcegraph-api/graphql/queries.ts	/^export const CURRENT_USER_ID_AND_VERIFIED_EMAIL_QUERY = `$/;"	C
CURRENT_USER_ID_QUERY	lib/shared/src/sourcegraph-api/graphql/queries.ts	/^export const CURRENT_USER_ID_QUERY = `$/;"	C
CURSOR	vscode/test/completions/completions-dataset.ts	/^export const CURSOR = '️🔥'$/;"	C
CURSOR_MARKER	vscode/src/completions/completion.test.ts	/^const CURSOR_MARKER = '<cursor>'$/;"	C
Cache-Control	vscode/package.json	/^              "Cache-Control": "no-cache",$/;"	s	object:contributes.configuration.properties.cody.customHeaders.examples.0
CachedCompletions	vscode/src/completions/cache.ts	/^export interface CachedCompletions {$/;"	i
CamelCaseDotSeparatedFragments	vscode/src/configuration-keys.ts	/^type CamelCaseDotSeparatedFragments<T extends string> = T extends `${infer A}.${infer B}`$/;"	a
CancellationTokenSource	vscode/src/testutils/mocks.ts	/^    CancellationTokenSource,$/;"	C
CancellationTokenSource	vscode/src/testutils/mocks.ts	/^class CancellationTokenSource {$/;"	c
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[0.0.10]
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[0.0.9]
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[0.1.0]
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[0.1.2]
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[0.1.3]
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[0.1.4]
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[0.1.5]
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[0.2.0]
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[0.2.1]
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[0.2.2]
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[0.2.3]
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[0.2.4]
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[0.2.5]
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[0.4.0]
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[0.4.1]
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[0.4.2]
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[0.4.3]
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[0.4.4]
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[0.6.1]
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[Template]
Changed	vscode/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[Unreleased]
Changelog	vscode/CHANGELOG.md	/^# Changelog$/;"	c
Character Table	lib/icons/README.md	/^## Character Table$/;"	s	chapter:cody-icons-font
Chat	vscode/walkthroughs/chat.md	/^## Chat$/;"	s
ChatButton	lib/shared/src/chat/transcript/messages.ts	/^export interface ChatButton {$/;"	i
ChatClient	lib/shared/src/chat/chat.ts	/^export class ChatClient {$/;"	C
ChatContextStatus	lib/shared/src/chat/context.ts	/^export interface ChatContextStatus {$/;"	i
ChatHistory	lib/shared/src/chat/transcript/messages.ts	/^export interface ChatHistory {$/;"	i
ChatMessage	lib/shared/src/chat/transcript/messages.ts	/^export interface ChatMessage extends Message {$/;"	i
ChatParameters	lib/shared/src/chat/chat.ts	/^type ChatParameters = Omit<CompletionParameters, 'messages'>$/;"	a
ChatQuestion	lib/shared/src/chat/recipes/chat-question.ts	/^export class ChatQuestion implements Recipe {$/;"	c
ChatViewProvider	vscode/src/chat/ChatViewProvider.ts	/^export class ChatViewProvider implements vscode.WebviewViewProvider, vscode.Disposable, IdleReci/;"	c
Chunk	vscode/src/non-stop/diff.ts	/^type Chunk = string[]$/;"	a
Client	cli/src/client/index.ts	/^export interface Client {$/;"	i
Client	lib/shared/src/chat/client.ts	/^export interface Client {$/;"	i
Client bindings	agent/README.md	/^## Client bindings$/;"	s	chapter:Cody agent
Client implementations	agent/README.md	/^## Client implementations$/;"	s	chapter:Cody agent
ClientCapabilities	agent/src/protocol.ts	/^export interface ClientCapabilities {$/;"	i
ClientInfo	agent/src/protocol.ts	/^export interface ClientInfo {$/;"	i
ClientInit	lib/shared/src/chat/client.ts	/^export interface ClientInit {$/;"	i
ClientInitConfig	lib/shared/src/chat/client.ts	/^export type ClientInitConfig = Pick<$/;"	a
Code Autocomplete (Beta)	vscode/walkthroughs/autocomplete.md	/^## Code Autocomplete (Beta)$/;"	s
CodeLensProvider	vscode/src/services/CodeLensProvider.ts	/^export class CodeLensProvider implements vscode.CodeLensProvider {$/;"	c
CodeToCompletions	completions-review-tool/src/models/completions.server.ts	/^type CodeToCompletions = Record<string, Omit<CompletionData, 'code'>[]>$/;"	a
CodebaseContext	lib/shared/src/codebase-context/index.ts	/^export class CodebaseContext {$/;"	c
CodebaseContexts	slack/src/constants.ts	/^export type CodebaseContexts = Record<(typeof DEFAULT_CODEBASES)[number], CodebaseContext>$/;"	a
Cody	vscode/index.html	/^        <title>Cody<\/title>$/;"	j
Cody	web/index.html	/^		<title>Cody<\/title>$/;"	j
Cody CLI (experimental)	cli/README.md	/^# Cody CLI (experimental)$/;"	c
Cody E2E Testing	vscode/test/e2e/README.md	/^# Cody E2E Testing$/;"	c
Cody Slack (experimental)	slack/README.md	/^## Cody Slack (experimental)$/;"	s
Cody UI shared library	lib/ui/README.md	/^# Cody UI shared library$/;"	c
Cody agent	agent/README.md	/^# Cody agent$/;"	c
Cody documentation	doc/index.md	/^# Cody documentation$/;"	c
Cody shared library	lib/shared/README.md	/^# Cody shared library$/;"	c
Cody standalone web app	web/README.md	/^# Cody standalone web app$/;"	c
Cody: code AI with codebase context	vscode/README.md	/^# Cody: code AI with codebase context$/;"	c
CodyClient	lib/shared/src/chat/useClient.ts	/^export interface CodyClient {$/;"	i
CodyClientConfig	lib/shared/src/chat/useClient.ts	/^export type CodyClientConfig = Pick<$/;"	a
CodyClientEvent	lib/shared/src/chat/useClient.ts	/^export type CodyClientEvent = 'submit' | 'initializedNewChat' | 'error'$/;"	a
CodyClientProps	lib/shared/src/chat/useClient.ts	/^interface CodyClientProps {$/;"	i
CodyClientScope	lib/shared/src/chat/useClient.ts	/^export interface CodyClientScope {$/;"	i
CodyClientScopePartial	lib/shared/src/chat/useClient.ts	/^export interface CodyClientScopePartial {$/;"	i
CodyCompletionItemProvider	vscode/src/completions/index.ts	/^export class CodyCompletionItemProvider implements vscode.InlineCompletionItemProvider {$/;"	c
CodyCompletionItemProviderConfig	vscode/src/completions/index.ts	/^interface CodyCompletionItemProviderConfig {$/;"	i
CodyFileChunkContext	lib/shared/src/sourcegraph-api/graphql/client.ts	/^interface CodyFileChunkContext {$/;"	i
CodyLLMSiteConfiguration	lib/shared/src/sourcegraph-api/graphql/client.ts	/^export interface CodyLLMSiteConfiguration {$/;"	i
CodyPrompt	vscode/src/my-cody/types.ts	/^export interface CodyPrompt {$/;"	i
CodyPromptContext	lib/shared/src/chat/recipes/my-prompt.ts	/^export interface CodyPromptContext {$/;"	i
CodyPromptPremade	vscode/src/my-cody/types.ts	/^export interface CodyPromptPremade {$/;"	i
CodyPromptType	vscode/src/my-cody/types.ts	/^export type CodyPromptType = 'workspace' | 'user'$/;"	a
CodyStatusBar	vscode/src/services/StatusBar.ts	/^export interface CodyStatusBar {$/;"	i
CodyTaskList	vscode/src/non-stop/utils.ts	/^export type CodyTaskList = {$/;"	a
CodyTaskState	vscode/src/non-stop/utils.ts	/^export enum CodyTaskState {$/;"	g
CodyTaskState	vscode/src/services/InlineController.ts	/^        const status = error ? CodyTaskState.error : CodyTaskState.fixed$/;"	C
Codying at work	README.md	/^### Codying at work$/;"	S	section:<img src="https://storage.googleapis.com/sourcegraph-assets/cody/20230417/logomark-default.svg" width="26"> Cody""Usage
Commands	vscode/test/e2e/README.md	/^### Commands$/;"	S	chapter:Cody E2E Testing
Comment	vscode/src/services/InlineController.ts	/^class Comment implements vscode.Comment {$/;"	c
Commit Message for Current Changes	.vscode/cody.json	/^    "Commit Message for Current Changes": {$/;"	o	object:recipes
Commit Message for Current Changes	vscode/resources/samples/workspace-cody.json	/^    "Commit Message for Current Changes": {$/;"	o	object:recipes
CommitEnvironment	cli/src/commands/commit/command.ts	/^interface CommitEnvironment {$/;"	i
CommitOptions	cli/src/commands/commit/command.ts	/^interface CommitOptions {$/;"	i
Compare Files in Opened Tabs	.vscode/cody.json	/^    "Compare Files in Opened Tabs": {$/;"	o	object:recipes
Compare Files in Opened Tabs	vscode/resources/samples/user-cody.json	/^    "Compare Files in Opened Tabs": {$/;"	o	object:recipes
Completion	vscode/src/completions/index.ts	/^export interface Completion {$/;"	i
CompletionCallbacks	lib/shared/src/sourcegraph-api/completions/types.ts	/^export interface CompletionCallbacks {$/;"	i
CompletionData	completions-review-tool/src/models/completions.server.ts	/^type CompletionData = {$/;"	a
CompletionEvent	lib/shared/src/sourcegraph-api/completions/types.ts	/^export interface CompletionEvent extends CompletionResponse {$/;"	i
CompletionEvent	vscode/src/completions/logger.ts	/^interface CompletionEvent {$/;"	i
CompletionGroup	vscode/src/completions/docprovider.ts	/^export interface CompletionGroup {$/;"	i
CompletionLogger	lib/shared/src/sourcegraph-api/completions/client.ts	/^export interface CompletionLogger {$/;"	i
CompletionParameters	lib/shared/src/sourcegraph-api/completions/types.ts	/^export interface CompletionParameters {$/;"	i
CompletionResponse	lib/shared/src/sourcegraph-api/completions/types.ts	/^export interface CompletionResponse {$/;"	i
CompletionResult	vscode/test/completions/run-code-completions-on-dataset.ts	/^interface CompletionResult {$/;"	i
CompletionsCache	vscode/src/completions/cache.ts	/^export class CompletionsCache {$/;"	c
CompletionsClientConfig	lib/shared/src/sourcegraph-api/completions/client.ts	/^export type CompletionsClientConfig = Pick<$/;"	a
CompletionsDocumentProvider	vscode/src/completions/docprovider.ts	/^export class CompletionsDocumentProvider implements vscode.TextDocumentContentProvider {$/;"	c
Config	vscode/src/chat/ChatViewProvider.ts	/^export type Config = Pick<$/;"	a
ConfigGetter	vscode/src/configuration.ts	/^interface ConfigGetter {$/;"	i
ConfigKeys	vscode/src/configuration-keys.ts	/^export type ConfigKeys = keyof typeof CONFIG_KEY$/;"	a
Configuration	lib/shared/src/configuration.ts	/^export interface Configuration {$/;"	i
ConfigurationKeysMap	vscode/src/configuration-keys.ts	/^type ConfigurationKeysMap = {$/;"	a
ConfigurationSubsetForWebview	vscode/src/chat/protocol.ts	/^export interface ConfigurationSubsetForWebview$/;"	i
ConfigurationUseContext	lib/shared/src/configuration.ts	/^export type ConfigurationUseContext = 'embeddings' | 'keyword' | 'none' | 'blended' | 'unified'$/;"	a
ConfigurationWithAccessToken	lib/shared/src/configuration.ts	/^export interface ConfigurationWithAccessToken extends Configuration {$/;"	i
ConnectionConfiguration	agent/src/protocol.ts	/^export interface ConnectionConfiguration {$/;"	i
ContentProvider	vscode/src/non-stop/FixupContentStore.ts	/^export class ContentProvider implements vscode.TextDocumentContentProvider, vscode.Disposable {$/;"	c
Context	vscode/src/completions/providers/unstable-codegen.ts	/^interface Context {$/;"	i
ContextFile	lib/shared/src/codebase-context/messages.ts	/^export interface ContextFile {$/;"	i
ContextFileSource	lib/shared/src/codebase-context/messages.ts	/^export type ContextFileSource = 'embeddings'$/;"	a
ContextMessage	lib/shared/src/codebase-context/messages.ts	/^export interface ContextMessage extends Message {$/;"	i
ContextResult	lib/shared/src/local-context/index.ts	/^export interface ContextResult {$/;"	i
ContextSearch	lib/shared/src/chat/recipes/context-search.ts	/^export class ContextSearch implements Recipe {$/;"	c
ContextSearchOptions	lib/shared/src/codebase-context/index.ts	/^export interface ContextSearchOptions {$/;"	i
Contributing	README.md	/^## Contributing$/;"	s	chapter:<img src="https://storage.googleapis.com/sourcegraph-assets/cody/20230417/logomark-default.svg" width="26"> Cody
Contributing to Cody for VS Code	vscode/CONTRIBUTING.md	/^# Contributing to Cody for VS Code$/;"	c
CreateTypewriterParams	lib/shared/src/chat/typewriter.ts	/^interface CreateTypewriterParams {$/;"	i
CurrentUserIdHasVerifiedEmailResponse	lib/shared/src/sourcegraph-api/graphql/client.ts	/^interface CurrentUserIdHasVerifiedEmailResponse {$/;"	i
CurrentUserIdResponse	lib/shared/src/sourcegraph-api/graphql/client.ts	/^interface CurrentUserIdResponse {$/;"	i
CustomRecipesBuilder	vscode/src/my-cody/CustomRecipesBuilder.ts	/^export class CustomRecipesBuilder {$/;"	c
CustomRecipesFileName	vscode/src/my-cody/types.ts	/^export const CustomRecipesFileName = '.vscode\/cody.json'$/;"	C
DATA_LINE_PREFIX	lib/shared/src/sourcegraph-api/completions/parse.ts	/^const DATA_LINE_PREFIX = 'data: '$/;"	C
DECORATION_SELECTOR	vscode/test/e2e/fixup-decorator.test.ts	/^const DECORATION_SELECTOR = 'div.view-overlays[role="presentation"] div[class*="TextEditorDecora/;"	C
DEFAULT_APP_SETTINGS	slack/src/constants.ts	/^export const DEFAULT_APP_SETTINGS = {$/;"	C
DEFAULT_CHAT_COMPLETION_PARAMETERS	cli/src/client/completions.ts	/^const DEFAULT_CHAT_COMPLETION_PARAMETERS: Omit<CompletionParameters, 'messages'> = {$/;"	C
DEFAULT_CHAT_COMPLETION_PARAMETERS	lib/shared/src/chat/chat.ts	/^const DEFAULT_CHAT_COMPLETION_PARAMETERS: ChatParameters = {$/;"	C
DEFAULT_CHAT_COMPLETION_PARAMETERS	slack/src/services/stream-completions.ts	/^const DEFAULT_CHAT_COMPLETION_PARAMETERS: Omit<CompletionParameters, 'messages'> = {$/;"	C
DEFAULT_CODEBASES	slack/src/constants.ts	/^export const DEFAULT_CODEBASES = [$/;"	C
DEFAULT_MAX_TOKENS	lib/shared/src/prompt/constants.ts	/^export const DEFAULT_MAX_TOKENS = 7000$/;"	C
DEFAULT_TEXT	vscode/src/services/StatusBar.ts	/^const DEFAULT_TEXT = '$(cody-logo-heavy)'$/;"	C
DEFAULT_TOOLTIP	vscode/src/services/StatusBar.ts	/^const DEFAULT_TOOLTIP = 'Cody Settings'$/;"	C
DEFAULT_TOPIC	lib/shared/src/chat/bot-response-multiplexer.ts	/^    public static readonly DEFAULT_TOPIC = 'Assistant'$/;"	p	class:BotResponseMultiplexer
DEFAULT_WEB_CONFIGURATION	web/src/settings/useConfig.ts	/^const DEFAULT_WEB_CONFIGURATION: WebConfiguration = {$/;"	C
DISCORD_URL	vscode/src/chat/protocol.ts	/^export const DISCORD_URL = new URL('https:\/\/discord.gg\/s2qDtYGnAE')$/;"	C
DOCUMENT_URI	vscode/src/completions/request-manager.test.ts	/^const DOCUMENT_URI = 'file:\/\/\/path\/to\/file.ts'$/;"	C
DOMPURIFY_CONFIG	lib/shared/src/chat/markdown.ts	/^const DOMPURIFY_CONFIG = {$/;"	C
DOTCOM_CALLBACK_URL	vscode/src/chat/protocol.ts	/^export const DOTCOM_CALLBACK_URL = new URL('https:\/\/sourcegraph.com\/user\/settings\/tokens\/n/;"	C
DOTCOM_URL	vscode/src/chat/protocol.ts	/^export const DOTCOM_URL = new URL('https:\/\/sourcegraph.com')$/;"	C
Debug Test	vscode/test/e2e/README.md	/^#### Debug Test$/;"	t	subsection:Cody E2E Testing""Commands
Debug last error from Cody app	.vscode/cody.json	/^    "Debug last error from Cody app": {$/;"	o	object:recipes
DecorationProvider	vscode/src/services/DecorationProvider.ts	/^export class DecorationProvider {$/;"	c
Demos	README.md	/^## Demos$/;"	s	chapter:<img src="https://storage.googleapis.com/sourcegraph-assets/cody/20230417/logomark-default.svg" width="26"> Cody
Demos	vscode/README.md	/^## Demos$/;"	s	chapter:Cody: code AI with codebase context
Deployment	completions-review-tool/README.md	/^## Deployment$/;"	s	chapter:Welcome to the Completions Review tool!
Deployment	slack/README.md	/^## Deployment$/;"	s
Developing the Cody library packages	doc/dev/library-development.md	/^# Developing the Cody library packages$/;"	c
Development	cli/README.md	/^## Development$/;"	s	chapter:Cody CLI (experimental)
Development	completions-review-tool/README.md	/^## Development$/;"	s	chapter:Welcome to the Completions Review tool!
Development	doc/dev/index.md	/^## Development$/;"	s
Development	vscode/README.md	/^## Development$/;"	s	chapter:Cody: code AI with codebase context
DocumentOffsets	agent/src/offsets.ts	/^export class DocumentOffsets {$/;"	c
DoneEvent	lib/shared/src/sourcegraph-api/completions/types.ts	/^export interface DoneEvent {$/;"	i
ENVIRONMENT_CONFIG	slack/src/constants.ts	/^export const ENVIRONMENT_CONFIG = cleanEnv(process.env, {$/;"	C
ENVIRONMENT_CONFIG	vscode/test/completions/environment-config.ts	/^export const ENVIRONMENT_CONFIG = cleanEnv(process.env, {$/;"	C
EVENTS_SEPARATOR	lib/shared/src/sourcegraph-api/completions/parse.ts	/^const EVENTS_SEPARATOR = '\\n\\n'$/;"	C
EVENT_LINE_PREFIX	lib/shared/src/sourcegraph-api/completions/parse.ts	/^const EVENT_LINE_PREFIX = 'event: '$/;"	C
EXTENSION_TO_LANGUAGE	lib/shared/src/chat/recipes/helpers.ts	/^const EXTENSION_TO_LANGUAGE: { [key: string]: string } = {$/;"	C
Editor	lib/shared/src/editor/index.ts	/^export interface Editor {$/;"	i
EmbeddingsForFile	vscode/src/completions/context-embeddings.ts	/^interface EmbeddingsForFile {$/;"	i
EmbeddingsMultiSearchResponse	lib/shared/src/sourcegraph-api/graphql/client.ts	/^interface EmbeddingsMultiSearchResponse {$/;"	i
EmbeddingsSearch	lib/shared/src/embeddings/index.ts	/^export interface EmbeddingsSearch {$/;"	i
EmbeddingsSearchResponse	lib/shared/src/sourcegraph-api/graphql/client.ts	/^interface EmbeddingsSearchResponse {$/;"	i
EmbeddingsSearchResult	lib/shared/src/sourcegraph-api/graphql/client.ts	/^export interface EmbeddingsSearchResult {$/;"	i
EmbeddingsSearchResults	lib/shared/src/sourcegraph-api/graphql/client.ts	/^export interface EmbeddingsSearchResults {$/;"	i
EndOfLine	vscode/src/testutils/mocks.ts	/^    EndOfLine,$/;"	C
EndOfLine	vscode/src/testutils/mocks.ts	/^enum EndOfLine {$/;"	g
ErrorCode	agent/src/jsonrpc.ts	/^enum ErrorCode {$/;"	g
ErrorEvent	lib/shared/src/sourcegraph-api/completions/types.ts	/^export interface ErrorEvent {$/;"	i
ErrorInfo	agent/src/jsonrpc.ts	/^interface ErrorInfo<T> {$/;"	i
ErrorLike	lib/shared/src/common/index.ts	/^export interface ErrorLike {$/;"	i
Event	lib/shared/src/sourcegraph-api/completions/types.ts	/^export type Event = DoneEvent | CompletionEvent | ErrorEvent$/;"	a
EventEmitter	vscode/src/testutils/mocks.ts	/^    EventEmitter,$/;"	C
EventLogger	lib/shared/src/telemetry/EventLogger.ts	/^export class EventLogger {$/;"	c
EventsParseResult	lib/shared/src/sourcegraph-api/completions/parse.ts	/^interface EventsParseResult {$/;"	i
ExecuteRecipeParams	agent/src/protocol.ts	/^export interface ExecuteRecipeParams {$/;"	i
Existing Sourcegraph customers	README.md	/^### Existing Sourcegraph customers$/;"	S	section:<img src="https://storage.googleapis.com/sourcegraph-assets/cody/20230417/logomark-default.svg" width="26"> Cody""Usage
Explain Selected Code	vscode/walkthroughs/explain.md	/^## Explain Selected Code$/;"	s
ExplainCodeDetailed	lib/shared/src/chat/recipes/explain-code-detailed.ts	/^export class ExplainCodeDetailed implements Recipe {$/;"	c
ExplainCodeHighLevel	lib/shared/src/chat/recipes/explain-code-high-level.ts	/^export class ExplainCodeHighLevel implements Recipe {$/;"	c
ExtensionApi	vscode/src/extension-api.ts	/^export class ExtensionApi {$/;"	c
ExtensionDetails	lib/shared/src/telemetry/EventLogger.ts	/^export interface ExtensionDetails {$/;"	i
ExtensionMessage	vscode/src/chat/protocol.ts	/^export type ExtensionMessage =$/;"	a
ExternalServices	vscode/src/external-services.ts	/^interface ExternalServices {$/;"	i
ExternalServicesConfiguration	vscode/src/external-services.ts	/^type ExternalServicesConfiguration = Pick<$/;"	a
FIXTURE_TRANSCRIPT	lib/ui/src/chat/fixtures.ts	/^export const FIXTURE_TRANSCRIPT: Record<string, ChatMessage[]> = {$/;"	C
FIXUP_PROMPT_TAG	vscode/test/fixtures/mock-server.ts	/^const FIXUP_PROMPT_TAG = '<selection>'$/;"	C
Feedback	README.md	/^### Feedback$/;"	S	section:<img src="https://storage.googleapis.com/sourcegraph-assets/cody/20230417/logomark-default.svg" width="26"> Cody""Contributing
Feedback	vscode/README.md	/^## Feedback$/;"	s	chapter:Cody: code AI with codebase context
FeedbackOptionItems	vscode/src/services/FeedbackOptions.ts	/^export const FeedbackOptionItems = [$/;"	C
FetchEmbeddingsOptions	vscode/src/completions/context-embeddings.ts	/^interface FetchEmbeddingsOptions {$/;"	i
FetchFileContentOptions	slack/src/services/github-client.ts	/^interface FetchFileContentOptions {$/;"	i
File Samples for Custom Recipes	vscode/resources/samples/README.md	/^# File Samples for Custom Recipes$/;"	c
File structure	vscode/CONTRIBUTING.md	/^## File structure$/;"	s	chapter:Contributing to Cody for VS Code
FileChunkContext	lib/shared/src/unified-context/index.ts	/^export interface FileChunkContext {$/;"	i
FileContents	vscode/src/completions/context-local.ts	/^interface FileContents {$/;"	i
FilenameContextFetcher	lib/shared/src/local-context/index.ts	/^export interface FilenameContextFetcher {$/;"	i
FilenameContextFetcher	vscode/src/local-context/filename-context-fetcher.ts	/^export class FilenameContextFetcher {$/;"	c
FindCodeSmells	lib/shared/src/chat/recipes/find-code-smells.ts	/^export class FindCodeSmells implements Recipe {$/;"	c
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[0.0.10]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[0.0.9]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[0.1.0]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[0.1.1]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[0.1.2]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[0.1.3]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[0.1.4]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[0.1.5]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[0.2.0]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[0.2.1]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[0.2.2]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[0.2.3]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[0.2.4]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[0.2.5]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[0.4.0]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[0.4.1]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[0.4.2]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[0.4.3]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[0.4.4]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[0.6.1]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[Template]
Fixed	vscode/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[Unreleased]
Fixup	lib/shared/src/chat/recipes/fixup.ts	/^export class Fixup implements Recipe {$/;"	c
Fixup Code from Inline Instructions	vscode/walkthroughs/fixup.md	/^## Fixup Code from Inline Instructions$/;"	s
FixupCodeLenses	vscode/src/non-stop/FixupCodeLenses.ts	/^export class FixupCodeLenses implements vscode.CodeLensProvider {$/;"	c
FixupController	vscode/src/non-stop/FixupController.ts	/^export class FixupController$/;"	c
FixupDecorator	vscode/src/non-stop/FixupDecorator.ts	/^export class FixupDecorator implements vscode.Disposable {$/;"	c
FixupDocumentEditObserver	vscode/src/non-stop/FixupDocumentEditObserver.ts	/^export class FixupDocumentEditObserver {$/;"	c
FixupFile	vscode/src/non-stop/FixupFile.ts	/^export class FixupFile {$/;"	c
FixupFileCollection	vscode/src/non-stop/roles.ts	/^export interface FixupFileCollection {$/;"	i
FixupFileObserver	vscode/src/non-stop/FixupFileObserver.ts	/^export class FixupFileObserver {$/;"	c
FixupIdleTaskRunner	vscode/src/non-stop/roles.ts	/^export interface FixupIdleTaskRunner {$/;"	i
FixupScheduler	vscode/src/non-stop/FixupScheduler.ts	/^export class FixupScheduler implements FixupIdleTaskRunner {$/;"	c
FixupTask	vscode/src/non-stop/FixupTask.ts	/^export class FixupTask {$/;"	c
FixupTaskFactory	vscode/src/non-stop/roles.ts	/^export interface FixupTaskFactory {$/;"	i
FixupTaskTreeItem	vscode/src/non-stop/TaskViewProvider.ts	/^export class FixupTaskTreeItem extends vscode.TreeItem {$/;"	c
FixupTextChanged	vscode/src/non-stop/roles.ts	/^export interface FixupTextChanged {$/;"	i
FixupTypingUI	vscode/src/non-stop/FixupTypingUI.ts	/^export class FixupTypingUI {$/;"	c
FunctionHandler	lib/shared/src/plugins/api/types.ts	/^type FunctionHandler = (parameters: PluginFunctionParameters, api: PluginAPI) => Promise<PluginF/;"	a
GET_CODY_CONTEXT_QUERY	lib/shared/src/sourcegraph-api/graphql/queries.ts	/^export const GET_CODY_CONTEXT_QUERY = `$/;"	C
GRAPHQL_URI	lib/shared/src/sourcegraph-api/graphql/url.ts	/^const GRAPHQL_URI = '\/.api\/graphql'$/;"	C
Generate Multiple Unit Tests	.vscode/cody.json	/^    "Generate Multiple Unit Tests": {$/;"	o	object:recipes
Generate Multiple Unit Tests	vscode/resources/samples/user-cody.json	/^    "Generate Multiple Unit Tests": {$/;"	o	object:recipes
Generate README.md for Current Directory	.vscode/cody.json	/^    "Generate README.md for Current Directory": {$/;"	o	object:recipes
Generate README.md for Current Directory	vscode/resources/samples/workspace-cody.json	/^    "Generate README.md for Current Directory": {$/;"	o	object:recipes
GenerateDocstring	lib/shared/src/chat/recipes/generate-docstring.ts	/^export class GenerateDocstring implements Recipe {$/;"	c
GenerateTest	lib/shared/src/chat/recipes/generate-test.ts	/^export class GenerateTest implements Recipe {$/;"	c
Get started	README.md	/^## Get started$/;"	s	chapter:<img src="https://storage.googleapis.com/sourcegraph-assets/cody/20230417/logomark-default.svg" width="26"> Cody
GetCodyContextResponse	lib/shared/src/sourcegraph-api/graphql/client.ts	/^interface GetCodyContextResponse {$/;"	i
GetCodyContextResult	lib/shared/src/sourcegraph-api/graphql/client.ts	/^type GetCodyContextResult = CodyFileChunkContext | null$/;"	a
GetContextOptions	vscode/src/completions/context.ts	/^interface GetContextOptions {$/;"	i
GetContextResult	vscode/src/completions/context.ts	/^interface GetContextResult {$/;"	i
Getting started	cli/README.md	/^## Getting started$/;"	s	chapter:Cody CLI (experimental)
Getting started	vscode/CONTRIBUTING.md	/^## Getting started$/;"	s	chapter:Contributing to Cody for VS Code
GitHelpers	cli/src/gitHelpers/index.ts	/^export interface GitHelpers {$/;"	i
GitHistory	lib/shared/src/chat/recipes/git-log.ts	/^export class GitHistory implements Recipe {$/;"	c
GitHubResponse	lib/shared/src/plugins/built-in/github-issues.ts	/^interface GitHubResponse {$/;"	i
GlobalOptions	cli/src/program.ts	/^export interface GlobalOptions {$/;"	i
Guardrails	lib/shared/src/guardrails/index.ts	/^export interface Guardrails {$/;"	i
GuardrailsProvider	vscode/src/services/GuardrailsProvider.ts	/^export class GuardrailsProvider {$/;"	c
Hello Cody	vscode/test/fixtures/workspace/index.html	/^        <title>Hello Cody<\/title>$/;"	j
HighlightTokensResult	lib/shared/src/hallucinations-detector/index.ts	/^interface HighlightTokensResult {$/;"	i
HighlightedToken	lib/shared/src/hallucinations-detector/index.ts	/^export interface HighlightedToken {$/;"	i
History	vscode/src/completions/history.ts	/^export class History implements vscode.Disposable {$/;"	c
HistoryItem	vscode/src/completions/history.ts	/^export interface HistoryItem {$/;"	i
INDENTATION_REGEX	vscode/src/completions/text-processing.ts	/^const INDENTATION_REGEX = \/^[\\t ]*\/$/;"	C
INTERNAL_S2_URL	vscode/src/chat/protocol.ts	/^export const INTERNAL_S2_URL = new URL('https:\/\/sourcegraph.sourcegraph.com\/')$/;"	C
IN_PROGRESS_MESSAGE	slack/src/mention-handler.ts	/^const IN_PROGRESS_MESSAGE = '...✍️'$/;"	C
IS_CONTEXT_REQUIRED_QUERY	lib/shared/src/sourcegraph-api/graphql/queries.ts	/^export const IS_CONTEXT_REQUIRED_QUERY = `$/;"	C
Id	agent/src/jsonrpc.ts	/^type Id = string | number$/;"	a
IdleRecipeRunner	vscode/src/non-stop/roles.ts	/^export interface IdleRecipeRunner {$/;"	i
ImproveVariableNames	lib/shared/src/chat/recipes/improve-variable-names.ts	/^export class ImproveVariableNames implements Recipe {$/;"	c
InMemorySecretStorage	vscode/src/services/SecretStorageProvider.ts	/^export class InMemorySecretStorage implements SecretStorage {$/;"	c
Individual Test	vscode/test/e2e/README.md	/^#### Individual Test$/;"	t	subsection:Cody E2E Testing""Commands
Individual usage	README.md	/^### Individual usage$/;"	S	section:<img src="https://storage.googleapis.com/sourcegraph-assets/cody/20230417/logomark-default.svg" width="26"> Cody""Usage
Inline Chat (Experimental)	vscode/walkthroughs/inline-assist.md	/^## Inline Chat (Experimental)$/;"	s
InlineChat	lib/shared/src/chat/recipes/inline-chat.ts	/^export class InlineChat implements Recipe {$/;"	c
InlineCompletionItem	vscode/src/testutils/mocks.ts	/^    InlineCompletionItem,$/;"	C
InlineCompletionTriggerKind	vscode/test/completions/mock-vscode.ts	/^    InlineCompletionTriggerKind: {$/;"	C
InlineController	vscode/src/services/InlineController.ts	/^export class InlineController {$/;"	c
InlineTouch	lib/shared/src/chat/recipes/inline-touch.ts	/^export class InlineTouch implements Recipe {$/;"	c
Insiders	vscode/scripts/release.ts	/^    Insiders = 'insiders',$/;"	e	enum:ReleaseType
Insiders channel	vscode/CONTRIBUTING.md	/^### Insiders channel$/;"	S	section:Contributing to Cody for VS Code""Releases
IntentDetector	lib/shared/src/intent-detector/client.ts	/^export class SourcegraphIntentDetectorClient implements IntentDetector {$/;"	C
IntentDetector	lib/shared/src/intent-detector/index.ts	/^export interface IntentDetector {$/;"	i
Interaction	lib/shared/src/chat/transcript/interaction.ts	/^export class Interaction {$/;"	c
InteractionJSON	lib/shared/src/chat/transcript/interaction.ts	/^export interface InteractionJSON {$/;"	i
InteractionMessage	lib/shared/src/chat/transcript/messages.ts	/^export interface InteractionMessage extends Message {$/;"	i
InternalError	agent/src/jsonrpc.ts	/^    InternalError = -32603,$/;"	e	enum:ErrorCode
IntrinsicElements	node_modules/autopreview/components/components.d.ts	/^  interface IntrinsicElements {$/;"	i	namespace:JSX
InvalidParams	agent/src/jsonrpc.ts	/^    InvalidParams = -32602,$/;"	e	enum:ErrorCode
InvalidRequest	agent/src/jsonrpc.ts	/^    InvalidRequest = -32600,$/;"	e	enum:ErrorCode
IsContextRequiredForChatQueryResponse	lib/shared/src/sourcegraph-api/graphql/client.ts	/^interface IsContextRequiredForChatQueryResponse {$/;"	i
Item	lib/shared/src/plugins/built-in/github-issues.ts	/^interface Item {$/;"	i
JSONSerializable	vscode/src/completions/docprovider.ts	/^export type JSONSerializable = null | string | number | boolean | object | JSONSerializable[]$/;"	a
JSX	node_modules/autopreview/components/components.d.ts	/^namespace JSX {$/;"	n
JaccardMatch	vscode/src/completions/bestJaccardMatch.ts	/^export interface JaccardMatch {$/;"	i
JaccardMatchWithFilename	vscode/src/completions/context-local.ts	/^interface JaccardMatchWithFilename extends JaccardMatch {$/;"	i
KEY_ENABLED_PLUGINS	vscode/src/services/LocalStorageProvider.ts	/^    private KEY_ENABLED_PLUGINS = 'KEY_ENABLED_PLUGINS'$/;"	p	class:LocalStorage
KEY_LOCAL_HISTORY	vscode/src/services/LocalStorageProvider.ts	/^    private KEY_LOCAL_HISTORY = 'cody-local-chatHistory-v2'$/;"	p	class:LocalStorage
KeywordContextFetcher	lib/shared/src/local-context/index.ts	/^export interface KeywordContextFetcher {$/;"	i
LAST_USED_ENDPOINT	vscode/src/services/LocalStorageProvider.ts	/^    private LAST_USED_ENDPOINT = 'SOURCEGRAPH_CODY_ENDPOINT'$/;"	p	class:LocalStorage
LEGACY_SEARCH_EMBEDDINGS_QUERY	lib/shared/src/sourcegraph-api/graphql/queries.ts	/^export const LEGACY_SEARCH_EMBEDDINGS_QUERY = `$/;"	C
LF	vscode/src/testutils/mocks.ts	/^    LF = 1,$/;"	e	enum:EndOfLine
LINE_TERMINATOR	agent/src/jsonrpc.ts	/^                const LINE_TERMINATOR = '\\r\\n'$/;"	C	method:MessageDecoder._write
LLMReranker	lib/shared/src/codebase-context/rerank.ts	/^export class LLMReranker implements Reranker {$/;"	c
LOCAL_APP_LOCATIONS	vscode/src/services/LocalAppFsPaths.ts	/^export const LOCAL_APP_LOCATIONS: LocalAppPaths = {$/;"	C
LOCAL_APP_URL	vscode/src/chat/protocol.ts	/^export const LOCAL_APP_URL = new URL('http:\/\/localhost:3080')$/;"	C
LOCAL_APP_URL	vscode/src/services/AuthProvider.ts	/^        const endpoint = isApp ? LOCAL_APP_URL.href : this.authStatus.endpoint$/;"	C
LOG_EVENT_MUTATION	lib/shared/src/sourcegraph-api/graphql/queries.ts	/^export const LOG_EVENT_MUTATION = `$/;"	C
LOG_ID	vscode/src/completions/request-manager.test.ts	/^const LOG_ID = 'some-log-id'$/;"	C
LanguageConfig	vscode/src/completions/multiline.ts	/^interface LanguageConfig {$/;"	i
Layer_1	lib/icons/svg-originals/A.svg	/^	 viewBox="0 0 16 16" style="enable-background:new 0 0 16 16;" xml:space="preserve">$/;"	i
Layer_1	lib/icons/svg-originals/B.svg	/^	 viewBox="0 0 16 16" style="enable-background:new 0 0 16 16;" xml:space="preserve">$/;"	i
Learn More	vscode/walkthroughs/learn-more.md	/^## Learn More$/;"	s
Linking	doc/dev/library-development.md	/^### Linking$/;"	S	section:Developing the Cody library packages""Local development
Local Development	slack/README.md	/^## Local Development$/;"	s
Local development	doc/dev/library-development.md	/^## Local development$/;"	s	chapter:Developing the Cody library packages
LocalAppDetector	vscode/src/services/LocalAppDetector.ts	/^export class LocalAppDetector implements vscode.Disposable {$/;"	c
LocalAppPaths	vscode/src/services/LocalAppFsPaths.ts	/^export interface LocalAppPaths {$/;"	i
LocalEnv	vscode/src/chat/protocol.ts	/^export interface LocalEnv {$/;"	i
LocalKeywordContextFetcher	vscode/src/local-context/local-keyword-context-fetcher.ts	/^export class LocalKeywordContextFetcher implements KeywordContextFetcher {$/;"	c
LocalKeywordContextFetcherMock	cli/src/client/context.ts	/^class LocalKeywordContextFetcherMock implements KeywordContextFetcher {$/;"	c
LocalKeywordContextFetcherMock	slack/src/services/codebase-context.ts	/^class LocalKeywordContextFetcherMock implements KeywordContextFetcher {$/;"	c
LocalStorage	vscode/src/services/LocalStorageProvider.ts	/^export class LocalStorage {$/;"	c
LogEventResponse	lib/shared/src/sourcegraph-api/graphql/client.ts	/^interface LogEventResponse {}$/;"	i
LoginInput	vscode/src/services/AuthMenus.ts	/^export interface LoginInput {$/;"	i
LoginMenuItem	vscode/src/services/AuthMenus.ts	/^export interface LoginMenuItem {$/;"	i
LoginMenuOptionItems	vscode/src/services/AuthMenus.ts	/^export const LoginMenuOptionItems = [$/;"	C
LoginStepInputBox	vscode/src/services/AuthMenus.ts	/^export async function LoginStepInputBox(title: string, step: number, needToken: boolean): Promis/;"	f
LoginStepOptions	vscode/src/services/AuthMenus.ts	/^const LoginStepOptions = [$/;"	C
MARKDOWN_CONTEXT_TEMPLATE	lib/shared/src/prompt/templates.ts	/^const MARKDOWN_CONTEXT_TEMPLATE = 'Use the following text from file `{filePath}`:\\n{text}'$/;"	C
MARKDOWN_CONTEXT_TEMPLATE_WITH_REPO	lib/shared/src/prompt/templates.ts	/^const MARKDOWN_CONTEXT_TEMPLATE_WITH_REPO =$/;"	C
MARKDOWN_EXTENSIONS	lib/shared/src/prompt/templates.ts	/^const MARKDOWN_EXTENSIONS = new Set(['md', 'markdown'])$/;"	C
MARKDOWN_FORMAT_PROMPT	lib/shared/src/chat/recipes/helpers.ts	/^export const MARKDOWN_FORMAT_PROMPT = 'Enclose code snippets with three backticks like so: ```.'$/;"	C
MAX_AVAILABLE_PROMPT_LENGTH	lib/shared/src/prompt/constants.ts	/^export const MAX_AVAILABLE_PROMPT_LENGTH = DEFAULT_MAX_TOKENS - ANSWER_TOKENS$/;"	C
MAX_CURRENT_FILE_TOKENS	lib/shared/src/prompt/constants.ts	/^export const MAX_CURRENT_FILE_TOKENS = 1000$/;"	C
MAX_DELAY_MS	lib/shared/src/chat/typewriter.ts	/^const MAX_DELAY_MS = 200$/;"	C
MAX_HUMAN_INPUT_TOKENS	lib/shared/src/prompt/constants.ts	/^export const MAX_HUMAN_INPUT_TOKENS = 1000$/;"	C
MAX_RECIPE_CONTENT_TOKENS	lib/shared/src/chat/recipes/inline-chat.ts	/^        const MAX_RECIPE_CONTENT_TOKENS = MAX_RECIPE_INPUT_TOKENS + MAX_RECIPE_SURROUNDING_TOKEN/;"	C	method:InlineChat.getInteraction
MAX_RECIPE_CONTENT_TOKENS	lib/shared/src/chat/recipes/inline-touch.ts	/^        const MAX_RECIPE_CONTENT_TOKENS = MAX_RECIPE_INPUT_TOKENS + MAX_RECIPE_SURROUNDING_TOKEN/;"	C
MAX_RECIPE_INPUT_TOKENS	lib/shared/src/prompt/constants.ts	/^export const MAX_RECIPE_INPUT_TOKENS = 2000$/;"	C
MAX_RECIPE_SURROUNDING_TOKENS	lib/shared/src/prompt/constants.ts	/^export const MAX_RECIPE_SURROUNDING_TOKENS = 500$/;"	C
MAX_SPIN_COUNT_PER_TASK	vscode/src/non-stop/FixupController.ts	/^        const MAX_SPIN_COUNT_PER_TASK = 5$/;"	C
MIN_CHAR_CHUNK_SIZE	lib/shared/src/chat/typewriter.ts	/^const MIN_CHAR_CHUNK_SIZE = 1$/;"	C
MIN_DELAY_MS	lib/shared/src/chat/typewriter.ts	/^const MIN_DELAY_MS = 5$/;"	C
Main	vscode/test/fixtures/workspace/Main.java	/^    private Main() {}$/;"	m	class:Main	file:
Main	vscode/test/fixtures/workspace/Main.java	/^public class Main {$/;"	c
Message	agent/src/jsonrpc.ts	/^type Message = RequestMessage<any> & ResponseMessage<any> & NotificationMessage<any>$/;"	a
Message	lib/shared/src/sourcegraph-api/completions/types.ts	/^export interface Message {$/;"	i
MessageDecoder	agent/src/jsonrpc.ts	/^class MessageDecoder extends Writable {$/;"	c
MessageEncoder	agent/src/jsonrpc.ts	/^class MessageEncoder extends Readable {$/;"	c
MessageHandler	agent/src/jsonrpc.ts	/^export class MessageHandler {$/;"	c
MessageHandlerCallback	agent/src/jsonrpc.ts	/^type MessageHandlerCallback = (err: Error | null, msg: Message | null) => void$/;"	a
Meta	vscode/src/completions/docprovider.ts	/^interface Meta {$/;"	i
MethodName	agent/src/jsonrpc.ts	/^type MethodName = RequestMethodName | NotificationMethodName$/;"	a
MethodNotFound	agent/src/jsonrpc.ts	/^    MethodNotFound = -32601,$/;"	e	enum:ErrorCode
Miscellaneous notes	agent/README.md	/^## Miscellaneous notes$/;"	s	chapter:Cody agent
MockCompletionsClient	lib/shared/src/test/mocks.ts	/^export class MockCompletionsClient extends SourcegraphCompletionsClient {$/;"	c
MockEditor	lib/shared/src/test/mocks.ts	/^export class MockEditor implements Editor {$/;"	c
MockEmbeddingsClient	lib/shared/src/test/mocks.ts	/^export class MockEmbeddingsClient implements EmbeddingsSearch {$/;"	c
MockIntentDetector	lib/shared/src/test/mocks.ts	/^export class MockIntentDetector implements IntentDetector {$/;"	c
MockKeywordContextFetcher	lib/shared/src/test/mocks.ts	/^export class MockKeywordContextFetcher implements KeywordContextFetcher {$/;"	c
MockProvider	vscode/src/completions/request-manager.test.ts	/^class MockProvider extends Provider {$/;"	c
MockRequest	vscode/test/fixtures/mock-server.ts	/^interface MockRequest {$/;"	i
MockReranker	lib/shared/src/codebase-context/rerank.ts	/^export class MockReranker implements Reranker {$/;"	c
MyPrompt	lib/shared/src/chat/recipes/my-prompt.ts	/^export class MyPrompt implements Recipe {$/;"	c
MyPromptController	vscode/src/my-cody/MyPromptController.ts	/^export class MyPromptController {$/;"	c
MyPrompts	vscode/src/my-cody/types.ts	/^export interface MyPrompts {$/;"	i
MyPromptsJSON	vscode/src/my-cody/types.ts	/^export interface MyPromptsJSON {$/;"	i
MyToolsProvider	vscode/src/my-cody/MyToolsProvider.ts	/^export class MyToolsProvider {$/;"	c
NODE_ENV	.vscode/launch.json	/^        "NODE_ENV": "development",$/;"	s	object:configurations.0.env
NON_WHITESPACE_REGEX	vscode/src/completions/text-processing.ts	/^const NON_WHITESPACE_REGEX = \/\\S|$\/$/;"	C
NUMBER_OF_CHARS_TO_MATCH_AND_CUT_SUFFIX	vscode/src/completions/text-processing.ts	/^const NUMBER_OF_CHARS_TO_MATCH_AND_CUT_SUFFIX = 15$/;"	C
NUM_CODE_RESULTS	lib/shared/src/prompt/constants.ts	/^export const NUM_CODE_RESULTS = 12$/;"	C
NUM_CODE_RESULTS	vscode/src/completions/context-embeddings.ts	/^const NUM_CODE_RESULTS = 2$/;"	C
NUM_CODE_RESULTS_EXTRA	vscode/src/completions/context-embeddings.ts	/^const NUM_CODE_RESULTS_EXTRA = 5$/;"	C
NUM_TEXT_RESULTS	lib/shared/src/prompt/constants.ts	/^export const NUM_TEXT_RESULTS = 3$/;"	C
NUM_TEXT_RESULTS	vscode/src/completions/context-embeddings.ts	/^const NUM_TEXT_RESULTS = 1$/;"	C
NextQuestions	lib/shared/src/chat/recipes/next-questions.ts	/^export class NextQuestions implements Recipe {$/;"	c
NonStop	lib/shared/src/chat/recipes/non-stop.ts	/^export class NonStop implements Recipe {$/;"	c
NoopEditor	lib/shared/src/editor/index.ts	/^export class NoopEditor implements Editor {$/;"	c
Notice	web/README.md	/^## Notice$/;"	s	chapter:Cody standalone web app
NotificationCallback	agent/src/jsonrpc.ts	/^type NotificationCallback<M extends NotificationMethodName> = (params: ParamsOf<M>) => void$/;"	a
NotificationMessage	agent/src/jsonrpc.ts	/^interface NotificationMessage<M extends NotificationMethodName> {$/;"	i
NotificationMethodName	agent/src/jsonrpc.ts	/^type NotificationMethodName = keyof Notifications$/;"	a
Notifications	agent/src/jsonrpc.ts	/^type NotificationMethodName = keyof Notifications$/;"	a
Notifications	agent/src/protocol.ts	/^export type Notifications = {$/;"	a
OPENAI_API_KEY	slack/src/services/stream-completions.ts	/^    const { OPENAI_API_KEY } = process.env$/;"	C	function:getCompletionsClient
OPENING_BRACKET_REGEX	vscode/src/completions/multiline.ts	/^const OPENING_BRACKET_REGEX = \/([([{])$\/$/;"	C
OPENING_CODE_TAG	vscode/src/completions/text-processing.ts	/^export const OPENING_CODE_TAG = '<CODE5711>'$/;"	C
OldChatHistory	lib/shared/src/chat/transcript/messages.ts	/^export interface OldChatHistory {$/;"	i
OldContextMessage	lib/shared/src/codebase-context/messages.ts	/^export interface OldContextMessage extends Message {$/;"	i
OnChangeCallback	vscode/src/services/LocalAppDetector.ts	/^type OnChangeCallback = (type: string) => Promise<void>$/;"	a
Op	vscode/src/non-stop/diff.ts	/^type Op = '*' | 'I' | 'X' | '-' | 'R'$/;"	a
OpenAICompletionsClient	slack/src/services/openai-completions-client.ts	/^export class OpenAICompletionsClient implements Pick<SourcegraphCompletionsClient, 'stream'> {$/;"	c
Options	vscode/src/completions/context-embeddings.ts	/^interface Options {$/;"	i
Options	vscode/src/completions/context-local.ts	/^interface Options {$/;"	i
Other topics	doc/dev/index.md	/^### Other topics$/;"	S	section:Development
OutputItem	lib/shared/src/plugins/built-in/github-issues.ts	/^interface OutputItem extends Omit<Item, 'html_url'> {$/;"	i
PORT	slack/src/app.ts	/^const { PORT } = ENVIRONMENT_CONFIG$/;"	C
PROVIDER_IDENTIFIER	vscode/src/completions/providers/unstable-codegen.ts	/^const PROVIDER_IDENTIFIER = 'codegen'$/;"	C
PROVIDER_IDENTIFIER	vscode/src/completions/providers/unstable-huggingface.ts	/^const PROVIDER_IDENTIFIER = 'huggingface'$/;"	C
ParamsOf	agent/src/jsonrpc.ts	/^type ParamsOf<K extends MethodName> = (Requests & Notifications)[K][0]$/;"	a
ParseError	agent/src/jsonrpc.ts	/^    ParseError = -32700,$/;"	e	enum:ErrorCode
Plugin	lib/shared/src/plugins/api/types.ts	/^export interface Plugin {$/;"	i
PluginAPI	lib/shared/src/plugins/api/types.ts	/^export interface PluginAPI<TConfig = Configuration['pluginsConfig']> {$/;"	i
PluginChosenFunctionDescriptor	lib/shared/src/plugins/api/types.ts	/^export interface PluginChosenFunctionDescriptor {$/;"	i
PluginFunction	lib/shared/src/plugins/api/types.ts	/^interface PluginFunction {$/;"	i
PluginFunctionDescriptor	lib/shared/src/plugins/api/types.ts	/^export interface PluginFunctionDescriptor {$/;"	i
PluginFunctionExecutionInfo	lib/shared/src/plugins/api/types.ts	/^export interface PluginFunctionExecutionInfo {$/;"	i
PluginFunctionOutput	lib/shared/src/plugins/api/types.ts	/^export interface PluginFunctionOutput {$/;"	i
PluginFunctionParameters	lib/shared/src/plugins/api/types.ts	/^export type PluginFunctionParameters = Record<string, string | number | boolean>$/;"	a
PluginFunctionWithParameters	lib/shared/src/plugins/api/types.ts	/^export interface PluginFunctionWithParameters extends PluginFunction {$/;"	i
Position	agent/src/protocol.ts	/^export interface Position {$/;"	i
Position	vscode/src/testutils/mocks.ts	/^    Position,$/;"	C
Position	vscode/src/testutils/mocks.ts	/^class Position {$/;"	c
PrDescription	lib/shared/src/chat/recipes/generate-pr-description.ts	/^export class PrDescription implements Recipe {$/;"	c
Preamble	lib/shared/src/chat/preamble.ts	/^export interface Preamble {$/;"	i
PrefilledOptions	lib/shared/src/editor/withPreselectedOptions.ts	/^export type PrefilledOptions = [string[], string][]$/;"	a
PrefixComponents	vscode/src/completions/text-processing.ts	/^export interface PrefixComponents {$/;"	i
PromptMixin	lib/shared/src/prompt/prompt-mixin.ts	/^export class PromptMixin {$/;"	c
Protocol	agent/README.md	/^## Protocol$/;"	s	chapter:Cody agent
Provider	vscode/src/completions/providers/provider.ts	/^export abstract class Provider {$/;"	c
ProviderConfig	vscode/src/completions/providers/provider.ts	/^export interface ProviderConfig {$/;"	i
ProviderOptions	vscode/src/completions/providers/provider.ts	/^export interface ProviderOptions {$/;"	i
Proxy-Authenticate	vscode/package.json	/^              "Proxy-Authenticate": "Basic"$/;"	s	object:contributes.configuration.properties.cody.customHeaders.examples.0
Publishing new packages	doc/dev/library-development.md	/^## Publishing new packages$/;"	s	chapter:Developing the Cody library packages
READ_TIMEOUT	vscode/src/completions/logger.ts	/^const READ_TIMEOUT = 750$/;"	C
REPOSITORY_EMBEDDING_EXISTS_QUERY	lib/shared/src/sourcegraph-api/graphql/queries.ts	/^export const REPOSITORY_EMBEDDING_EXISTS_QUERY = `$/;"	C
REPOSITORY_IDS_QUERY	lib/shared/src/sourcegraph-api/graphql/queries.ts	/^export const REPOSITORY_IDS_QUERY = `$/;"	C
REPOSITORY_ID_QUERY	lib/shared/src/sourcegraph-api/graphql/queries.ts	/^export const REPOSITORY_ID_QUERY = `$/;"	C
REPOSITORY_NAMES_QUERY	lib/shared/src/sourcegraph-api/graphql/queries.ts	/^export const REPOSITORY_NAMES_QUERY = `$/;"	C
Range	agent/src/protocol.ts	/^export interface Range {$/;"	i
Recipe	lib/shared/src/chat/recipes/recipe.ts	/^export interface Recipe {$/;"	i
RecipeContext	lib/shared/src/chat/recipes/recipe.ts	/^export interface RecipeContext {$/;"	i
RecipeID	lib/shared/src/chat/recipes/recipe.ts	/^export type RecipeID =$/;"	a
RecipeInfo	agent/src/protocol.ts	/^export interface RecipeInfo {$/;"	i
Refactor Code	.vscode/cody.json	/^    "Refactor Code": {$/;"	o	object:recipes
Refactor Code	vscode/resources/samples/user-cody.json	/^    "Refactor Code": {$/;"	o	object:recipes
ReferenceSnippet	vscode/src/completions/context.ts	/^export interface ReferenceSnippet {$/;"	i
Regenerating	lib/icons/README.md	/^## Regenerating$/;"	s	chapter:cody-icons-font
Release	cli/README.md	/^### Release$/;"	S	section:Cody CLI (experimental)""Development
ReleaseNotes	lib/shared/src/chat/recipes/generate-release-notes.ts	/^export class ReleaseNotes implements Recipe {$/;"	c
ReleaseType	vscode/scripts/release.ts	/^enum ReleaseType {$/;"	g
Releases	vscode/CONTRIBUTING.md	/^## Releases$/;"	s	chapter:Contributing to Cody for VS Code
RemoveCodyPrefixAndCamelCase	vscode/src/configuration-keys.ts	/^type RemoveCodyPrefixAndCamelCase<T extends string> = T extends `cody.${infer A}`$/;"	a
Rendezvous	vscode/src/test-support.ts	/^class Rendezvous<T> {$/;"	c
ReplCommandOptions	cli/src/commands/repl/index.ts	/^interface ReplCommandOptions {$/;"	i
RepoNotFoundError	lib/shared/src/sourcegraph-api/graphql/client.ts	/^class RepoNotFoundError extends Error {}$/;"	c
RepositoryAttribution	lib/shared/src/guardrails/index.ts	/^export interface RepositoryAttribution {$/;"	i
RepositoryEmbeddingExistsResponse	lib/shared/src/sourcegraph-api/graphql/client.ts	/^interface RepositoryEmbeddingExistsResponse {$/;"	i
RepositoryIdResponse	lib/shared/src/sourcegraph-api/graphql/client.ts	/^interface RepositoryIdResponse {$/;"	i
RepositoryIdsResponse	lib/shared/src/sourcegraph-api/graphql/client.ts	/^interface RepositoryIdsResponse {$/;"	i
RepositoryNamesResponse	lib/shared/src/sourcegraph-api/graphql/client.ts	/^interface RepositoryNamesResponse {$/;"	i
Request	vscode/src/completions/request-manager.ts	/^interface Request {$/;"	i
RequestCallback	agent/src/jsonrpc.ts	/^type RequestCallback<M extends RequestMethodName> = (params: ParamsOf<M>) => Promise<ResultOf<M>/;"	a
RequestManager	vscode/src/completions/request-manager.ts	/^export class RequestManager {$/;"	c
RequestMessage	agent/src/jsonrpc.ts	/^interface RequestMessage<M extends RequestMethodName> {$/;"	i
RequestMethodName	agent/src/jsonrpc.ts	/^type RequestMethodName = keyof Requests$/;"	a
Requests	agent/src/jsonrpc.ts	/^type RequestMethodName = keyof Requests$/;"	a
Requests	agent/src/protocol.ts	/^export type Requests = {$/;"	a
Reranker	lib/shared/src/codebase-context/rerank.ts	/^export interface Reranker {$/;"	i
ResponseMessage	agent/src/jsonrpc.ts	/^interface ResponseMessage<M extends RequestMethodName> {$/;"	i
ResultOf	agent/src/jsonrpc.ts	/^type ResultOf<K extends RequestMethodName> = Requests[K][1]$/;"	a
RipgrepStreamData	vscode/src/local-context/local-keyword-context-fetcher.ts	/^interface RipgrepStreamData {$/;"	C
Running a release build locally	vscode/CONTRIBUTING.md	/^### Running a release build locally$/;"	S	section:Contributing to Cody for VS Code""Releases
SAFETY_PROMPT_TOKENS	vscode/src/chat/ChatViewProvider.ts	/^const SAFETY_PROMPT_TOKENS = 100$/;"	C
SEARCH_ATTRIBUTION_QUERY	lib/shared/src/sourcegraph-api/graphql/queries.ts	/^export const SEARCH_ATTRIBUTION_QUERY = `$/;"	C
SEARCH_EMBEDDINGS_QUERY	lib/shared/src/sourcegraph-api/graphql/queries.ts	/^export const SEARCH_EMBEDDINGS_QUERY = `$/;"	C
SERVER_PORT	vscode/test/fixtures/mock-server.ts	/^const SERVER_PORT = 49300$/;"	C
SERVER_URL	vscode/test/fixtures/mock-server.ts	/^export const SERVER_URL = 'http:\/\/localhost:49300'$/;"	C
SHARED_CONFIG	vscode/scripts/bundle.ts	/^const SHARED_CONFIG: Required<Pick<esbuild.BuildOptions, 'outdir' | 'minify' | 'sourcemap'>> = {$/;"	C
SLACK_PREAMBLE	slack/src/slack/preamble.ts	/^export const SLACK_PREAMBLE = getSlackPreamble()$/;"	C
SNIPPET_WINDOW_SIZE	vscode/src/completions/utils.ts	/^export const SNIPPET_WINDOW_SIZE = 50$/;"	C
SOURCEGRAPH_ACCESS_TOKEN	slack/src/services/sourcegraph-client.ts	/^const { SOURCEGRAPH_ACCESS_TOKEN } = ENVIRONMENT_CONFIG$/;"	C
SOURCEGRAPH_ACCESS_TOKEN	slack/src/services/stream-completions.ts	/^const { SOURCEGRAPH_ACCESS_TOKEN } = ENVIRONMENT_CONFIG$/;"	C
STOP_SEQUENCE_REGEXP	lib/shared/src/chat/viewHelpers.ts	/^const STOP_SEQUENCE_REGEXP = \/(H|Hu|Hum|Huma|Human|Human:)$\/$/;"	C
STOP_WORD	vscode/src/completions/providers/unstable-huggingface.ts	/^const STOP_WORD = '<|endoftext|>'$/;"	C
SURROUNDING_LINES	lib/shared/src/prompt/constants.ts	/^export const SURROUNDING_LINES = 50$/;"	C
SearchAttributionResponse	lib/shared/src/sourcegraph-api/graphql/client.ts	/^interface SearchAttributionResponse {$/;"	i
SearchAttributionResults	lib/shared/src/sourcegraph-api/graphql/client.ts	/^export interface SearchAttributionResults {$/;"	i
SearchResult	lib/shared/src/plugins/built-in/confluence.ts	/^interface SearchResult {$/;"	i
SecretStorage	vscode/src/services/SecretStorageProvider.ts	/^export interface SecretStorage {$/;"	i
ServerCapabilities	agent/src/protocol.ts	/^export interface ServerCapabilities {}$/;"	i
ServerInfo	agent/src/protocol.ts	/^export interface ServerInfo {$/;"	i
Setup	doc/dev/index.md	/^### Setup$/;"	S	section:Development
Simulating a fresh user install	vscode/CONTRIBUTING.md	/^#### Simulating a fresh user install$/;"	t	subsection:Contributing to Cody for VS Code""Releases""Running a release build locally
SiteGraphqlFieldsResponse	lib/shared/src/sourcegraph-api/graphql/client.ts	/^interface SiteGraphqlFieldsResponse {$/;"	i
SiteHasCodyEnabledResponse	lib/shared/src/sourcegraph-api/graphql/client.ts	/^interface SiteHasCodyEnabledResponse {$/;"	i
SiteVersionResponse	lib/shared/src/sourcegraph-api/graphql/client.ts	/^interface SiteVersionResponse {$/;"	i
SlackInteraction	slack/src/slack/message-interaction.ts	/^class SlackInteraction {$/;"	c
SourcegraphBrowserCompletionsClient	lib/shared/src/sourcegraph-api/completions/browserClient.ts	/^export class SourcegraphBrowserCompletionsClient extends SourcegraphCompletionsClient {$/;"	c
SourcegraphCompletionsClient	lib/shared/src/sourcegraph-api/completions/client.ts	/^export abstract class SourcegraphCompletionsClient {$/;"	c
SourcegraphEmbeddingsSearchClient	lib/shared/src/embeddings/client.ts	/^export class SourcegraphEmbeddingsSearchClient implements EmbeddingsSearch {$/;"	c
SourcegraphGraphQLAPIClient	lib/shared/src/sourcegraph-api/graphql/client.ts	/^export class SourcegraphGraphQLAPIClient {$/;"	c
SourcegraphGuardrailsClient	lib/shared/src/guardrails/client.ts	/^export class SourcegraphGuardrailsClient implements Guardrails {$/;"	c
SourcegraphIntentDetectorClient	lib/shared/src/intent-detector/client.ts	/^export class SourcegraphIntentDetectorClient implements IntentDetector {$/;"	C
SourcegraphNodeCompletionsClient	lib/shared/src/sourcegraph-api/completions/nodeClient.ts	/^export class SourcegraphNodeCompletionsClient extends SourcegraphCompletionsClient {$/;"	c
Spell Checker	.vscode/cody.json	/^    "Spell Checker": {$/;"	o	object:recipes
Spell Checker	vscode/resources/samples/user-cody.json	/^    "Spell Checker": {$/;"	o	object:recipes
Stable	vscode/scripts/release.ts	/^    Stable = 'stable',$/;"	e	enum:ReleaseType
Stable channel	vscode/CONTRIBUTING.md	/^### Stable channel$/;"	S	section:Contributing to Cody for VS Code""Releases
TOPIC_RE	lib/shared/src/chat/bot-response-multiplexer.ts	/^    private static readonly TOPIC_RE = \/<$|<\\\/?([A-Za-z-]?$|[A-Za-z-]+>?)\/m$/;"	p	class:BotResponseMultiplexer
TaskDecorations	vscode/src/non-stop/FixupDecorator.ts	/^interface TaskDecorations {$/;"	i
TaskViewProvider	vscode/src/non-stop/TaskViewProvider.ts	/^export class TaskViewProvider implements vscode.TreeDataProvider<FixupTaskTreeItem> {$/;"	c
Term	vscode/src/local-context/local-keyword-context-fetcher.ts	/^export interface Term {$/;"	i
Test plan	.github/PULL_REQUEST_TEMPLATE.md	/^## Test plan$/;"	s
TestClient	agent/src/index.test.ts	/^export class TestClient extends MessageHandler {$/;"	c
TestSupport	vscode/src/test-support.ts	/^export class TestSupport {$/;"	c
Testing	vscode/CONTRIBUTING.md	/^## Testing$/;"	s	chapter:Contributing to Cody for VS Code
TextChange	vscode/src/non-stop/tracked-range.ts	/^export interface TextChange {$/;"	i
TextDocument	agent/src/protocol.ts	/^export interface TextDocument {$/;"	i
TextDocument	vscode/test/completions/vscode-text-document.ts	/^export class TextDocument implements vscode.TextDocument {$/;"	c
TokenInputBox	vscode/src/services/AuthMenus.ts	/^export async function TokenInputBox(endpoint: string): Promise<LoginInput | null> {$/;"	f
Transcript	lib/shared/src/chat/transcript/index.ts	/^export class Transcript {$/;"	c
TranscriptJSON	lib/shared/src/chat/transcript/index.ts	/^export interface TranscriptJSON {$/;"	i
TranscriptJSONScope	lib/shared/src/chat/transcript/index.ts	/^export interface TranscriptJSONScope {$/;"	i
TranslateToLanguage	lib/shared/src/chat/recipes/translate.ts	/^export class TranslateToLanguage implements Recipe {$/;"	c
TrimmedString	vscode/src/completions/text-processing.ts	/^export interface TrimmedString {$/;"	i
Typewriter	lib/shared/src/chat/typewriter.ts	/^interface Typewriter {$/;"	i
UnifiedContextFetcher	lib/shared/src/unified-context/index.ts	/^export interface UnifiedContextFetcher {$/;"	i
UnifiedContextFetcherClient	lib/shared/src/unified-context/client.ts	/^export class UnifiedContextFetcherClient implements UnifiedContextFetcher {$/;"	c
UnifiedContextFetcherResult	lib/shared/src/unified-context/index.ts	/^export type UnifiedContextFetcherResult = FileChunkContext | { type: 'UnknownContext' }$/;"	a
Unlinking	doc/dev/library-development.md	/^### Unlinking$/;"	S	section:Developing the Cody library packages""Local development
UnstableCodeGenOptions	vscode/src/completions/providers/unstable-codegen.ts	/^interface UnstableCodeGenOptions {$/;"	i
UnstableCodeGenProvider	vscode/src/completions/providers/unstable-codegen.ts	/^export class UnstableCodeGenProvider extends Provider {$/;"	c
UnstableHuggingFaceOptions	vscode/src/completions/providers/unstable-huggingface.ts	/^interface UnstableHuggingFaceOptions {$/;"	i
UnstableHuggingFaceProvider	vscode/src/completions/providers/unstable-huggingface.ts	/^export class UnstableHuggingFaceProvider extends Provider {$/;"	c
Updating the protocol	agent/README.md	/^## Updating the protocol$/;"	s	chapter:Cody agent
Usage	README.md	/^## Usage$/;"	s	chapter:<img src="https://storage.googleapis.com/sourcegraph-assets/cody/20230417/logomark-default.svg" width="26"> Cody
Useful commands	agent/README.md	/^## Useful commands$/;"	s	chapter:Cody agent
User	lib/shared/src/plugins/built-in/github-issues.ts	/^interface User {$/;"	i
UserLocalHistory	lib/shared/src/chat/transcript/messages.ts	/^export interface UserLocalHistory {$/;"	i
VALID_TOKEN	vscode/test/fixtures/mock-server.ts	/^export const VALID_TOKEN = 'abcdefgh1234'$/;"	C
VECTOR_UPDATE_TIMEOUT	slack/src/services/local-vector-store.ts	/^const VECTOR_UPDATE_TIMEOUT = 12 * 60 * 60 * 1000$/;"	C
VSCodeApi	vscode/webviews/utils/VSCodeApi.ts	/^interface VSCodeApi {$/;"	i
VSCodeEditor	vscode/src/editor/vscode-editor.ts	/^export class VSCodeEditor implements Editor {$/;"	c
VSCodeSecretStorage	vscode/src/services/SecretStorageProvider.ts	/^export class VSCodeSecretStorage implements SecretStorage {$/;"	c
VSCodeWrapper	vscode/webviews/utils/VSCodeApi.ts	/^export interface VSCodeWrapper {$/;"	i
VsCodeFixupController	lib/shared/src/editor/index.ts	/^interface VsCodeFixupController {$/;"	i
VsCodeInlineController	lib/shared/src/editor/index.ts	/^interface VsCodeInlineController {$/;"	i
VsCodeMyPromptController	lib/shared/src/editor/index.ts	/^interface VsCodeMyPromptController {$/;"	i
WebConfiguration	web/src/settings/useConfig.ts	/^export type WebConfiguration = ClientInit['config']$/;"	C
WebviewMessage	vscode/src/chat/protocol.ts	/^export type WebviewMessage =$/;"	a
Welcome to the Completions Review tool!	completions-review-tool/README.md	/^# Welcome to the Completions Review tool!$/;"	c
What is Cody?	README.md	/^## What is Cody?$/;"	s	chapter:<img src="https://storage.googleapis.com/sourcegraph-assets/cody/20230417/logomark-default.svg" width="26"> Cody
WikiContent	lib/shared/src/plugins/built-in/confluence.ts	/^interface WikiContent {$/;"	i
WorkspaceEdit	vscode/src/testutils/mocks.ts	/^    WorkspaceEdit,$/;"	C
Wrapper	node_modules/autopreview/react.js	/^      class Wrapper extends Component {$/;"	c	method:AutoPreviewForReact._showComponent
[0.0.10]	vscode/CHANGELOG.md	/^## [0.0.10]$/;"	s	chapter:Changelog
[0.0.9]	vscode/CHANGELOG.md	/^## [0.0.9]$/;"	s	chapter:Changelog
[0.1.0]	vscode/CHANGELOG.md	/^## [0.1.0]$/;"	s	chapter:Changelog
[0.1.1]	vscode/CHANGELOG.md	/^## [0.1.1]$/;"	s	chapter:Changelog
[0.1.2]	vscode/CHANGELOG.md	/^## [0.1.2]$/;"	s	chapter:Changelog
[0.1.3]	vscode/CHANGELOG.md	/^## [0.1.3]$/;"	s	chapter:Changelog
[0.1.4]	vscode/CHANGELOG.md	/^## [0.1.4]$/;"	s	chapter:Changelog
[0.1.5]	vscode/CHANGELOG.md	/^## [0.1.5]$/;"	s	chapter:Changelog
[0.2.0]	vscode/CHANGELOG.md	/^## [0.2.0]$/;"	s	chapter:Changelog
[0.2.1]	vscode/CHANGELOG.md	/^## [0.2.1]$/;"	s	chapter:Changelog
[0.2.2]	vscode/CHANGELOG.md	/^## [0.2.2]$/;"	s	chapter:Changelog
[0.2.3]	vscode/CHANGELOG.md	/^## [0.2.3]$/;"	s	chapter:Changelog
[0.2.4]	vscode/CHANGELOG.md	/^## [0.2.4]$/;"	s	chapter:Changelog
[0.2.5]	vscode/CHANGELOG.md	/^## [0.2.5]$/;"	s	chapter:Changelog
[0.4.0]	vscode/CHANGELOG.md	/^## [0.4.0]$/;"	s	chapter:Changelog
[0.4.1]	vscode/CHANGELOG.md	/^## [0.4.1]$/;"	s	chapter:Changelog
[0.4.2]	vscode/CHANGELOG.md	/^## [0.4.2]$/;"	s	chapter:Changelog
[0.4.3]	vscode/CHANGELOG.md	/^## [0.4.3]$/;"	s	chapter:Changelog
[0.4.4]	vscode/CHANGELOG.md	/^## [0.4.4]$/;"	s	chapter:Changelog
[0.6.1]	vscode/CHANGELOG.md	/^## [0.6.1]$/;"	s	chapter:Changelog
[Template]	vscode/CHANGELOG.md	/^## [Template]$/;"	s	chapter:Changelog
[Unreleased]	vscode/CHANGELOG.md	/^## [Unreleased]$/;"	s	chapter:Changelog
[typescript]	.vscode/settings.json	/^  "[typescript]": {$/;"	o
[typescriptreact]	.vscode/settings.json	/^  "[typescriptreact]": {$/;"	o
_000	vscode/src/completions/providers/unstable-codegen.ts	/^    const contextWindowChars = 8_000 \/\/ ~ 2k token limit$/;"	C	function:createProviderConfig
_000	vscode/src/completions/providers/unstable-huggingface.ts	/^    const contextWindowChars = 8_000 \/\/ ~ 2k token limit$/;"	C	function:createProviderConfig
__type	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    __type: { fields: { name: string }[] } | null$/;"	p	interface:SiteGraphqlFieldsResponse
__typename	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    __typename: 'FileChunkContext'$/;"	p	interface:CodyFileChunkContext
_disposables	vscode/src/services/DecorationProvider.ts	/^    private _disposables: vscode.Disposable[] = []$/;"	p	class:DecorationProvider
_disposables	vscode/src/services/InlineController.ts	/^    private _disposables: vscode.Disposable[] = []$/;"	p	class:InlineController
_exec	vscode/src/my-cody/MyToolsProvider.ts	/^const _exec = promisify(exec)$/;"	C
_onDidChange	vscode/src/services/DecorationProvider.ts	/^    private _onDidChange: vscode.EventEmitter<void> = new vscode.EventEmitter<void>()$/;"	p	class:DecorationProvider
_read	agent/src/jsonrpc.ts	/^    public _read(size: number): void {$/;"	m	class:MessageEncoder
_showComponent	node_modules/autopreview/Autopreview.js	/^  async _showComponent(components, index = 0) {$/;"	m	class:AutoPreview
_showComponent	node_modules/autopreview/react.js	/^  async _showComponent(components, index = 0) {$/;"	m	class:AutoPreviewForReact
_showComponent	node_modules/autopreview/react18.js	/^  async _showComponent(components, index = 0) {$/;"	m	class:AutoPreviewForReact
_showComponent	node_modules/autopreview/vue2.js	/^  async _showComponent(components, index = 0) {$/;"	m	class:AutoPreviewForVue
_showComponent	node_modules/autopreview/vue3.js	/^  async _showComponent(components, index = 0) {$/;"	m	class:AutoPreviewForVue
_write	agent/src/jsonrpc.ts	/^    public _write(chunk: Buffer, encoding: string, callback: (error?: Error | null) => void): vo/;"	m	class:MessageDecoder
a	vscode/src/non-stop/diff.test.ts	/^        const a = '.a...bc....d...e...'$/;"	C
a	vscode/src/non-stop/diff.test.ts	/^        const a = prefix + 'world!'$/;"	C
a	vscode/webviews/index.css	/^a {$/;"	s
a:hover	vscode/webviews/index.css	/^a:hover {$/;"	s
abort	lib/shared/src/sourcegraph-api/completions/browserClient.ts	/^        const abort = new AbortController()$/;"	C	method:SourcegraphBrowserCompletionsClient.stream
abortController	lib/shared/src/sourcegraph-api/completions/nodeClient.ts	/^        const abortController = new AbortController()$/;"	C	method:SourcegraphNodeCompletionsClient.stream
abortController	vscode/src/completions/index.ts	/^        const abortController = new AbortController()$/;"	C
abortMessageInProgress	lib/shared/src/chat/useClient.ts	/^    abortMessageInProgress: () => void$/;"	p	interface:CodyClient
abortSignal	lib/shared/src/sourcegraph-api/completions/nodeClient.ts	/^        const abortSignal = abortController.signal$/;"	C	method:SourcegraphNodeCompletionsClient.stream
accept	vscode/src/completions/logger.ts	/^export function accept(id: string, lines: number): void {$/;"	f
accept	vscode/src/services/CodeLensProvider.ts	/^    const accept = getInlineAcceptLens(id, codeLensRange)$/;"	C	function:getLenses
acceptedAt	vscode/src/completions/logger.ts	/^    acceptedAt: number | null$/;"	p	interface:CompletionEvent
accessToken	agent/src/protocol.ts	/^    accessToken: string$/;"	p	interface:ConnectionConfiguration
accessToken	cli/src/client/index.ts	/^    const accessToken: string | undefined = process.env.SRC_ACCESS_TOKEN$/;"	C	function:getClient
accessToken	lib/shared/src/configuration.ts	/^    accessToken: string | null$/;"	p	interface:ConfigurationWithAccessToken
accessToken	vscode/src/completions/providers/unstable-huggingface.ts	/^    accessToken: null | string$/;"	p	interface:UnstableHuggingFaceOptions
accessToken	vscode/src/completions/providers/unstable-huggingface.ts	/^    private accessToken: null | string$/;"	p	class:UnstableHuggingFaceProvider
accessToken	vscode/src/configuration.ts	/^    const accessToken = (await getAccessToken(secretStorage)) || null$/;"	C
accessToken	vscode/src/services/AuthProvider.ts	/^            accessToken: token,$/;"	C
acquireVsCodeApi	vscode/webviews/utils/VSCodeApi.ts	/^declare const acquireVsCodeApi: () => VSCodeApi$/;"	C
action	lib/shared/src/chat/transcript/messages.ts	/^    action: string$/;"	p	interface:ChatButton
action	node_modules/autopreview/Autopreview.js	/^    this.ws.send(JSON.stringify({ id: Date.now().toString, action, data }));$/;"	M	variable:anonymousObject8c7ec3e20305
action	vscode/src/notifications/index.ts	/^    const action = actions.find(action => action.label === response)$/;"	C
actions	cli/src/client/preamble.ts	/^const actions = `You are Cody, an AI-powered coding assistant created by Sourcegraph. You work i/;"	C
actions	lib/shared/src/chat/preamble.ts	/^    actions: string$/;"	p	interface:Preamble
actions	lib/shared/src/chat/preamble.ts	/^    const actionsText = customPreamble?.actions ?? actions$/;"	C	function:getMultiRepoPreamble
actions	lib/shared/src/chat/preamble.ts	/^    const actionsText = customPreamble?.actions ?? actions$/;"	C	function:getPreamble
actions	lib/shared/src/chat/preamble.ts	/^const actions = `You are Cody, an AI-powered coding assistant created by Sourcegraph. You work i/;"	C
actions	slack/src/slack/preamble.ts	/^const actions = `You are Cody, an AI-powered coding assistant created by Sourcegraph. You work i/;"	C
actions	vscode/src/my-cody/types.ts	/^    actions: string$/;"	p	interface:CodyPromptPremade
actions	vscode/src/notifications/index.ts	/^    actions: Action[]$/;"	p	interface:ActionNotification
actionsText	lib/shared/src/chat/preamble.ts	/^    const actionsText = customPreamble?.actions ?? actions$/;"	C	function:getMultiRepoPreamble
actionsText	lib/shared/src/chat/preamble.ts	/^    const actionsText = customPreamble?.actions ?? actions$/;"	C	function:getPreamble
activate	vscode/src/extension.ts	/^export function activate(context: vscode.ExtensionContext): ExtensionApi {$/;"	f
activate	vscode/src/my-cody/CustomRecipesBuilder.ts	/^    public activate(state: boolean): void {$/;"	m	class:CustomRecipesBuilder
activationEvents	vscode/package.json	/^  "activationEvents": [$/;"	a
activeDocument	vscode/src/services/InlineController.ts	/^        const activeDocument = await vscode.workspace.openTextDocument(this.thread.uri)$/;"	C
activeDocument	vscode/src/services/InlineController.ts	/^        const activeDocument = await vscode.workspace.openTextDocument(thread.uri)$/;"	C
activeEditor	lib/shared/src/chat/useClient.ts	/^            const activeEditor = editor.getActiveTextEditor()$/;"	C
activeEditor	lib/shared/src/chat/useClient.ts	/^    const activeEditor = useMemo(() => scope.editor.getActiveTextEditor(), [scope.editor])$/;"	C
activeEditor	vscode/src/editor/vscode-editor.ts	/^        const activeEditor = this.getActiveTextEditorInstance()$/;"	C	method:VSCodeEditor.getActiveTextEditor
activeEditor	vscode/src/editor/vscode-editor.ts	/^        const activeEditor = this.getActiveTextEditorInstance()$/;"	C	method:VSCodeEditor.getActiveTextEditorSelection
activeEditor	vscode/src/editor/vscode-editor.ts	/^        const activeEditor = this.getActiveTextEditorInstance()$/;"	C	method:VSCodeEditor.getActiveTextEditorSelectionOrEntireFile
activeEditor	vscode/src/editor/vscode-editor.ts	/^        const activeEditor = this.getActiveTextEditorInstance()$/;"	C	method:VSCodeEditor.getActiveTextEditorVisibleContent
activeEditor	vscode/src/editor/vscode-editor.ts	/^        const activeEditor = vscode.window.activeTextEditor$/;"	C	method:VSCodeEditor.getActiveTextEditorInstance
activeFilename	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const activeFilename = activeTextEditor$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
activeTextEditor	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const activeTextEditor = this.editor.getActiveTextEditor()$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
activitybar	vscode/package.json	/^      "activitybar": [$/;"	a	object:contributes.viewsContainers
actualOutput	lib/shared/src/hallucinations-detector/index.test.ts	/^            const actualOutput = findFilePaths(input)$/;"	C
add	lib/shared/src/prompt/prompt-mixin.ts	/^    public static add(mixin: PromptMixin): void {$/;"	m	class:PromptMixin
add	vscode/src/completions/bestJaccardMatch.ts	/^    const add = ($/;"	C	function:bestJaccardMatch
add	vscode/src/completions/cache.ts	/^    public add(logId: string, completions: Completion[]): void {$/;"	C	method:CompletionsCache.get
addAssistantResponse	lib/shared/src/chat/transcript/index.ts	/^    public addAssistantResponse(text: string, displayText?: string): void {$/;"	m	class:Transcript
addCustom	lib/shared/src/prompt/prompt-mixin.ts	/^    public static addCustom(mixin: PromptMixin): void {$/;"	m	class:PromptMixin
addEndpointHistory	vscode/src/services/LocalStorageProvider.ts	/^    private async addEndpointHistory(endpoint: string): Promise<void> {$/;"	m	class:LocalStorage
addErrorAsAssistantResponse	lib/shared/src/chat/transcript/index.ts	/^    public addErrorAsAssistantResponse(errorText: string): void {$/;"	m	class:Transcript
addInteraction	lib/shared/src/chat/transcript/index.ts	/^    public addInteraction(interaction: Interaction | null): void {$/;"	m	class:Transcript
addJSONFile	vscode/src/my-cody/MyPromptController.ts	/^    public async addJSONFile(type: CodyPromptType): Promise<void> {$/;"	m	class:MyPromptController
addOption	vscode/src/my-cody/MyPromptController.ts	/^        const addOption: vscode.QuickPickItem = { label: 'Create a New User Recipe', detail: '',/;"	C	method:MyPromptController.quickRecipe
addRequest	vscode/src/completions/request-manager.ts	/^    private addRequest(documentUri: string, request: Request): void {$/;"	m	class:RequestManager
addUserRecipeQuick	vscode/src/my-cody/MyPromptController.ts	/^    private async addUserRecipeQuick(): Promise<void> {$/;"	m	class:MyPromptController
additionalRepoId	lib/shared/src/chat/useClient.ts	/^                const additionalRepoId = await graphqlClient.getRepoId(activeEditor.repoName)$/;"	C
adjustIndentation	vscode/src/completions/multiline.ts	/^function adjustIndentation(text: string, originalIndent: number, newIndent: number): string {$/;"	f
afterIntegrationTest	vscode/test/integration/helpers.ts	/^export async function afterIntegrationTest(): Promise<void> {$/;"	f
agent	agent/src/index.ts	/^const agent = new Agent()$/;"	C
agentProcess	agent/src/index.test.ts	/^    agentProcess.stdout.pipe(client.messageDecoder)$/;"	C
agentProcess	agent/src/index.test.ts	/^    const agentProcess = spawn('node', [path.join(__dirname, '..\/dist\/agent.js')], {$/;"	C
airQualityPlugin	lib/shared/src/plugins/built-in/air-quality.ts	/^export const airQualityPlugin: Plugin = {$/;"	C
airQualityPlugin	lib/shared/src/plugins/built-in/index.ts	/^    airQualityPlugin,$/;"	C
all	cli/src/commands/commit/command.ts	/^    all: boolean$/;"	p	interface:CommitOptions
allBoostedFiles	vscode/src/local-context/filename-context-fetcher.ts	/^        const allBoostedFiles = []$/;"	C	method:FilenameContextFetcher.getContext
allUris	vscode/src/completions/context-local.ts	/^    const allUris: vscode.Uri[] = vscode.window.tabGroups.all$/;"	C	function:getRelevantFiles
allowAsStatement	vscode/.eslintrc.json	/^    "no-void": ["error", { "allowAsStatement": true }],$/;"	b	object:rules.no-void.1
annotateAttribution	lib/shared/src/guardrails/index.ts	/^export async function annotateAttribution(guardrails: Guardrails, text: string): Promise<Annotat/;"	f
annotated	lib/shared/src/guardrails/index.ts	/^    const annotated = parts.join('')$/;"	C
anonUserID	vscode/src/services/LocalStorageProvider.ts	/^        const anonUserID = this.storage.get(this.ANONYMOUS_USER_ID_KEY, null)$/;"	C	method:LocalStorage.getAnonymousUserID
anonUserID	vscode/src/services/LocalStorageProvider.ts	/^        const anonUserID = uuid.v4()$/;"	C	method:LocalStorage.setAnonymousUserID
anonymousObject0f447a290305	node_modules/autopreview/vue2.js	/^    const app = new Vue(Object.assign(this.options, {$/;"	v	method:AutoPreviewForVue._showComponent
anonymousObject0f45068a0105	node_modules/autopreview/vue3.js	/^    const app = Vue.createApp({$/;"	v	method:AutoPreviewForVue._showComponent
anonymousObject39c914cd0105	completions-review-tool/server.js	/^app.use('\/build', express.static('public\/build', { immutable: true, maxAge: '1y' }))$/;"	v
anonymousObject39c914cd0205	completions-review-tool/server.js	/^app.use(express.static('public', { maxAge: '1h' }))$/;"	v
anonymousObject39c914cd0305	completions-review-tool/server.js	/^        return createRequestHandler({$/;"	v
anonymousObject39c914cd0405	completions-review-tool/server.js	/^    : createRequestHandler({$/;"	v
anonymousObject8c7ec3e20105	node_modules/autopreview/Autopreview.js	/^      window.parent.postMessage({ command: 'ERROR', data: `Root element with selector ${selector/;"	v
anonymousObject8c7ec3e20205	node_modules/autopreview/Autopreview.js	/^      this.sendMessage('update', { packageInitiated: true });$/;"	v
anonymousObject8c7ec3e20305	node_modules/autopreview/Autopreview.js	/^    this.ws.send(JSON.stringify({ id: Date.now().toString, action, data }));$/;"	v
anonymousObject8c7ec3e20405	node_modules/autopreview/Autopreview.js	/^    this.sendMessage('update', {$/;"	v	method:AutoPreview.getComponents
anonymousObject8c7ec3e20505	node_modules/autopreview/Autopreview.js	/^    this.sendMessage('update', { componentMounted: true });$/;"	v	method:AutoPreview.showComponent
anonymousObjectc892c5c20105	.eslintrc.js	/^    {$/;"	v
anonymousObjectc892c5c20205	.eslintrc.js	/^    {$/;"	v
anonymousObjectc892c5c20305	.eslintrc.js	/^    {$/;"	v
anonymousUserID	vscode/src/services/EventLogger.ts	/^let anonymousUserID: string$/;"	v
answer	cli/src/client/preamble.ts	/^const answer = `Understood. I am Cody, an AI assistant made by Sourcegraph to help with programm/;"	C
answer	lib/shared/src/chat/preamble.ts	/^    answer: string$/;"	p	interface:Preamble
answer	lib/shared/src/chat/preamble.ts	/^    const answerText = customPreamble?.answer ?? answer$/;"	C	function:getMultiRepoPreamble
answer	lib/shared/src/chat/preamble.ts	/^    const answerText = customPreamble?.answer ?? answer$/;"	C	function:getPreamble
answer	lib/shared/src/chat/preamble.ts	/^const answer = `Understood. I am Cody, an AI assistant made by Sourcegraph to help with programm/;"	C
answer	slack/src/slack/preamble.ts	/^const answer = `Understood. I am Cody, an AI assistant made by Sourcegraph to help with programm/;"	C
answer	vscode/src/my-cody/types.ts	/^    answer: string$/;"	p	interface:CodyPromptPremade
answerText	lib/shared/src/chat/preamble.ts	/^    const answerText = customPreamble?.answer ?? answer$/;"	C	function:getMultiRepoPreamble
answerText	lib/shared/src/chat/preamble.ts	/^    const answerText = customPreamble?.answer ?? answer$/;"	C	function:getPreamble
answerType	vscode/src/my-cody/InputMenu.ts	/^export type answerType = 'add' | 'file' | 'delete' | 'list' | 'open' | 'cancel'$/;"	a
api	vscode/src/extension.ts	/^    const api = new ExtensionApi()$/;"	C	function:activate
api	vscode/test/integration/helpers.ts	/^    const api = getExtensionAPI()$/;"	C	function:getFixupTasks
api	vscode/test/integration/helpers.ts	/^    const api = vscode.extensions.getExtension<ExtensionApi>('sourcegraph.cody-ai')$/;"	C	function:beforeIntegrationTest
api	vscode/webviews/utils/VSCodeApi.ts	/^let api: VSCodeWrapper$/;"	v
apiKey	lib/shared/src/plugins/built-in/air-quality.ts	/^                const apiKey = api.config?.apiNinjas?.apiKey$/;"	C
apiKey	lib/shared/src/plugins/built-in/timezone.ts	/^                const apiKey = api.config?.apiNinjas?.apiKey$/;"	C
apiKey	lib/shared/src/plugins/built-in/weather.ts	/^                const apiKey = api.config?.apiNinjas?.apiKey$/;"	C
apiKey	slack/src/services/openai-completions-client.ts	/^    constructor(protected apiKey: string) {$/;"	p	class:OpenAICompletionsClient
apiKey	vscode/package.json	/^                "apiKey": {$/;"	o	object:contributes.configuration.properties.cody.plugins.config.properties.apiNinjas.properties
apiNinjas	vscode/package.json	/^            "apiNinjas": {$/;"	o	object:contributes.configuration.properties.cody.plugins.config.properties
apiRegex	lib/shared/src/hallucinations-detector/index.ts	/^    const apiRegex = new RegExp('\\\\\/:[\\\\w-]+', 'g')$/;"	C
apiToken	lib/shared/src/plugins/built-in/github-issues.ts	/^                const apiToken = api.config?.github?.apiToken$/;"	C
apiToken	vscode/package.json	/^                "apiToken": {$/;"	o	object:contributes.configuration.properties.cody.plugins.config.properties.confluence.properties
apiToken	vscode/package.json	/^                "apiToken": {$/;"	o	object:contributes.configuration.properties.cody.plugins.config.properties.github.properties
app	completions-review-tool/server.js	/^const app = express()$/;"	C
app	slack/src/slack/init.ts	/^export const app = new App({$/;"	C
app	vscode/test/e2e/helpers.ts	/^            const app = await electron.launch({$/;"	C
app	vscode/test/fixtures/mock-server.ts	/^    const app = express()$/;"	C	function:run
appContext	slack/src/app.ts	/^    const appContext = await createAppContext()$/;"	C	function:startBot
appContext	slack/src/app.ts	/^    const appContext = { codebaseContexts: {} } as AppContext$/;"	C	function:createAppContext
appDetector	vscode/src/services/AuthProvider.ts	/^    public appDetector: LocalAppDetector$/;"	p	class:AuthProvider
appDirectory	completions-review-tool/remix.config.js	/^  appDirectory: 'src',$/;"	p	property:module.exports
appJson	vscode/src/services/LocalAppDetector.ts	/^        const appJson = await loadAppJson(this.tokenFsPath)$/;"	C
appName	vscode/src/chat/protocol.ts	/^    appName: string$/;"	p	interface:LocalEnv
appName	vscode/src/services/LocalAppDetector.ts	/^    appName: vscode.env.appName,$/;"	C
appScheme	vscode/src/services/AuthProvider.ts	/^    private appScheme = vscode.env.uriScheme$/;"	p	class:AuthProvider
apply	vscode/src/non-stop/codelenses.ts	/^            const apply = getApplyLens(codeLensRange, task.id)$/;"	C	function:getLensesForTask
applyAlignment	node_modules/autopreview/Autopreview.js	/^  applyAlignment(center) {$/;"	m	class:AutoPreview
arch	vscode/src/chat/protocol.ts	/^    arch: string$/;"	p	interface:LocalEnv
arch	vscode/src/rg.ts	/^    const arch = process.env.npm_config_arch || os.arch()$/;"	C	function:getTarget
arch	vscode/src/services/LocalAppDetector.ts	/^    arch: process.arch,$/;"	C
archConvertor	vscode/src/chat/protocol.ts	/^export function archConvertor(arch: string): string {$/;"	f
args	.vscode/launch.json	/^      "args": [$/;"	a	object:configurations.0
args	cli/src/program.ts	/^const args = process.argv.slice(2)$/;"	C
args	lib/shared/src/chat/recipes/generate-release-notes.ts	/^        const { args: gitArgs } = selected$/;"	C	method:ReleaseNotes.getInteraction
args	lib/shared/src/chat/recipes/git-log.ts	/^        const { args: gitArgs, rawDisplayText } = selected$/;"	C	method:GitHistory.getInteraction
args	vscode/src/chat/fastFileFinder.ts	/^    const args = ['--files', '-g', searchPattern, '--crlf', '--fixed-strings', '--no-config', '-/;"	C	function:executeRg
args	vscode/src/completions/providers/anthropic.ts	/^        const args: CompletionParameters = this.options.multiline$/;"	C	method:AnthropicProvider.generateCompletions
args	vscode/src/log.ts	/^    const lastArg = args[args.length - 1]$/;"	C	function:debug
args	vscode/src/my-cody/MyPromptController.ts	/^        const { command, args } = this.myPromptInProgress$/;"	C	method:MyPromptController.getCommandOutput
args	vscode/src/my-cody/types.ts	/^    args?: string[]$/;"	p	interface:CodyPrompt
argument	lib/shared/src/telemetry/EventLogger.ts	/^        const argument = {$/;"	C	method:EventLogger.log
argument	vscode/src/services/EventLogger.ts	/^    const argument = {$/;"	C	function:logEvent
arrow-body-style	cli/.eslintrc.json	/^    "arrow-body-style": "off",$/;"	s	object:rules
arrow-body-style	completions-review-tool/.eslintrc.json	/^    "arrow-body-style": "off",$/;"	s	object:rules
arrow-body-style	slack/.eslintrc.json	/^    "arrow-body-style": "off",$/;"	s	object:rules
arrow-body-style	web/.eslintrc.json	/^    "arrow-body-style": "off",$/;"	s	object:rules
assert	lib/shared/src/chat/transcript/transcript.test.ts	/^        assert.deepStrictEqual(prompt, expectedPrompt)$/;"	C
assetsBuildDirectory	completions-review-tool/remix.config.js	/^  assetsBuildDirectory: 'public\/build',$/;"	p	property:module.exports
assignee	lib/shared/src/plugins/built-in/github-issues.ts	/^    assignee: User | null$/;"	p	interface:Item
assistant	cli/src/client/completions.ts	/^            assistant: assistantMessage$/;"	C	function:getCompletionWithContext
assistant	cli/src/client/completions.ts	/^    const messages: { human: Message; assistant?: Message }[] = [$/;"	C	function:getCompletionWithContext
assistantMessage	lib/shared/src/chat/transcript/index.ts	/^            const assistantMessage = interaction.getAssistantMessage()$/;"	C	method:Transcript.getPromptForLastInteraction
assistantMessage	lib/shared/src/chat/transcript/interaction.ts	/^        private assistantMessage: InteractionMessage,$/;"	p	class:Interaction
assistantMessage	lib/shared/src/chat/transcript/interaction.ts	/^    assistantMessage: InteractionMessage$/;"	p	interface:InteractionJSON
assistantMessage	slack/src/slack/message-interaction.ts	/^        private assistantMessage: InteractionMessage$/;"	p	class:SlackInteraction
assistantResponse	lib/shared/src/chat/transcript/transcript.test.ts	/^        const assistantResponse = 'By setting the Authorization header.'$/;"	C
assistantResponse	lib/shared/src/chat/transcript/transcript.test.ts	/^        const assistantResponse = 'EFGH'.repeat(256) \/\/ 256 tokens$/;"	C	function:generateLongTranscript
assistantResponsePrefix	lib/shared/src/chat/recipes/find-code-smells.ts	/^        const assistantResponsePrefix = ''$/;"	C	method:FindCodeSmells.getInteraction
assistantResponsePrefix	lib/shared/src/chat/recipes/generate-docstring.ts	/^        const assistantResponsePrefix = `Here is the generated documentation:\\n\\`\\`\\`${exten/;"	C	method:GenerateDocstring.getInteraction
assistantResponsePrefix	lib/shared/src/chat/recipes/generate-pr-description.ts	/^        const assistantResponsePrefix = `Here is the PR description for the work done in your cu/;"	C	method:PrDescription.getInteraction
assistantResponsePrefix	lib/shared/src/chat/recipes/generate-release-notes.ts	/^        const assistantResponsePrefix = `Here is the generated release notes for ${selectedLabel/;"	C	method:ReleaseNotes.getInteraction
assistantResponsePrefix	lib/shared/src/chat/recipes/generate-test.ts	/^        const assistantResponsePrefix = `Here is the generated unit test:\\n\\`\\`\\`${extension/;"	C	method:GenerateTest.getInteraction
assistantResponsePrefix	lib/shared/src/chat/recipes/git-log.ts	/^        const assistantResponsePrefix = `Here is a summary of recent changes:\\n${truncatedLogMe/;"	C	method:GitHistory.getInteraction
assistantResponsePrefix	lib/shared/src/chat/recipes/improve-variable-names.ts	/^        const assistantResponsePrefix = `Here is the improved code:\\n\\`\\`\\`${extension}\\n`$/;"	C	method:ImproveVariableNames.getInteraction
assistantResponsePrefix	lib/shared/src/chat/recipes/next-questions.ts	/^        const assistantResponsePrefix = 'Sure, here are great follow-up discussion topics and le/;"	C	method:NextQuestions.getInteraction
assistantResponsePrefix	lib/shared/src/chat/recipes/translate.ts	/^        const assistantResponsePrefix = `Here is the code translated to ${toLanguage}:\\n\\`\\`\\/;"	C	method:TranslateToLanguage.getInteraction
async	cli/src/gitHelpers/testHelpers.ts	/^export async function withTemporaryGitRepository<T>({$/;"	C
async	vscode/scripts/bundle.ts	/^async function build(): Promise<void> {$/;"	C
async	vscode/src/editor/vscode-editor.ts	/^    public async replaceSelection(fileName: string, selectedText: string, replacement: string): /;"	C	method:VSCodeEditor.getActiveTextEditorVisibleContent
async	vscode/src/my-cody/InputMenu.ts	/^export async function showPromptCommandInput(): Promise<string | void> {$/;"	C
authProvider	vscode/src/main.ts	/^    const authProvider = new AuthProvider(initialConfig, secretStorage, localStorage)$/;"	C
authState	vscode/src/services/AuthProvider.ts	/^        const authState = await this.auth(endpoint, token, customHeaders)$/;"	C
authState	vscode/src/services/AuthProvider.ts	/^        const authState = await this.auth(lastEndpoint, token || null)$/;"	C
authStatus	vscode/src/chat/ChatViewProvider.ts	/^            const authStatus = this.authProvider.getAuthStatus()$/;"	C
authStatus	vscode/src/chat/ChatViewProvider.ts	/^        const authStatus = this.authProvider.getAuthStatus()$/;"	C
authStatus	vscode/src/chat/utils.ts	/^    const authStatus: AuthStatus = { ...defaultAuthStatus, endpoint }$/;"	C	function:newAuthStatus
authStatus	vscode/src/chat/utils.ts	/^    const isAllowed = authStatus.requiresVerifiedEmail ? authStatus.hasVerifiedEmail : true$/;"	C	function:newAuthStatus
authStatus	vscode/src/services/AuthProvider.ts	/^                const authStatus = await this.auth(selectedEndpoint, token || null)$/;"	C
authStatus	vscode/src/services/AuthProvider.ts	/^            const authStatus = await this.auth(LOCAL_APP_URL.href, token)$/;"	C
authStatus	vscode/src/services/AuthProvider.ts	/^        const authStatus = await this.makeAuthStatus(config)$/;"	C
authStatus	vscode/src/services/AuthProvider.ts	/^    private authStatus: AuthStatus = defaultAuthStatus$/;"	p	class:AuthProvider
authStatusFromToken	vscode/src/services/AuthProvider.ts	/^                    const authStatusFromToken = await this.auth(selectedEndpoint, input?.token |/;"	C
authenticated	vscode/src/chat/protocol.ts	/^    authenticated: boolean$/;"	p	interface:AuthStatus
authenticated	vscode/src/chat/protocol.ts	/^    authenticated: false,$/;"	C
authenticated	vscode/src/chat/utils.test.ts	/^            authenticated: true,$/;"	C
author	node_modules/autopreview/package.json	/^  "author": "",$/;"	s
autocomplete	lib/shared/src/configuration.ts	/^    autocomplete: boolean$/;"	p	interface:Configuration
autocompleteAdvancedAccessToken	lib/shared/src/configuration.ts	/^    autocompleteAdvancedAccessToken: string | null$/;"	p	interface:Configuration
autocompleteAdvancedCache	lib/shared/src/configuration.ts	/^    autocompleteAdvancedCache: boolean$/;"	p	interface:Configuration
autocompleteAdvancedEmbeddings	lib/shared/src/configuration.ts	/^    autocompleteAdvancedEmbeddings: boolean$/;"	p	interface:Configuration
autocompleteAdvancedProvider	lib/shared/src/configuration.ts	/^    autocompleteAdvancedProvider: 'anthropic' | 'unstable-codegen' | 'unstable-huggingface'$/;"	p	interface:Configuration
autocompleteAdvancedServerEndpoint	lib/shared/src/configuration.ts	/^    autocompleteAdvancedServerEndpoint: string | null$/;"	p	interface:Configuration
autocompleteExperimentalCompleteSuggestWidgetSelection	lib/shared/src/configuration.ts	/^    autocompleteExperimentalCompleteSuggestWidgetSelection?: boolean$/;"	p	interface:Configuration
autocompleteExperimentalTriggerMoreEagerly	lib/shared/src/configuration.ts	/^    autocompleteExperimentalTriggerMoreEagerly: boolean$/;"	p	interface:Configuration
axios	slack/package.json	/^    "axios": "^1.3.6",$/;"	s	object:dependencies
b	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                const b = fileStats[filename].bytesSearched$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
b	vscode/src/non-stop/diff.test.ts	/^        const b = '~~~ab~cde~~~'$/;"	C
b	vscode/src/non-stop/diff.test.ts	/^        const b = prefix + 'peeps...'$/;"	C
badges	vscode/package.json	/^  "badges": [$/;"	a
ban/ban	completions-review-tool/.eslintrc.json	/^    "ban\/ban": "off",$/;"	s	object:rules
ban/ban	slack/.eslintrc.json	/^    "ban\/ban": "off"$/;"	s	object:rules
baseConfig	.prettierrc.js	/^const baseConfig = require('@sourcegraph\/prettierrc')$/;"	C
baseUrl	cli/tsconfig.json	/^    "baseUrl": ".\/src",$/;"	s	object:compilerOptions
baseUrl	completions-review-tool/tsconfig.json	/^    "baseUrl": ".\/src",$/;"	s	object:compilerOptions
baseUrl	lib/shared/src/plugins/built-in/github-issues.ts	/^                const baseUrl = api.config?.github?.baseURL ?? defaultBaseURL$/;"	C
baseUrl	lib/shared/src/sourcegraph-api/graphql/url.ts	/^    baseUrl: string$/;"	p	interface:BuildGraphQLUrlOptions
baseUrl	slack/tsconfig.json	/^    "baseUrl": ".\/src",$/;"	s	object:compilerOptions
baseUrl	vscode/package.json	/^                "baseUrl": {$/;"	o	object:contributes.configuration.properties.cody.plugins.config.properties.confluence.properties
baseUrl	vscode/package.json	/^                "baseUrl": {$/;"	o	object:contributes.configuration.properties.cody.plugins.config.properties.github.properties
basename	lib/shared/src/common/index.ts	/^export function basename(path: string): string {$/;"	f
batchCompletions	vscode/src/completions/utils.ts	/^export async function batchCompletions($/;"	f
beforeIntegrationTest	vscode/test/integration/helpers.ts	/^export async function beforeIntegrationTest(): Promise<void> {$/;"	f
bestJaccardMatch	vscode/src/completions/bestJaccardMatch.ts	/^export function bestJaccardMatch(targetText: string, matchText: string, windowSize: number): Jac/;"	f
bin	cli/package.json	/^  "bin": {$/;"	o
blob	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    blob: {$/;"	p	interface:CodyFileChunkContext
blockElseTest	vscode/src/completions/multiline.ts	/^    blockElseTest: RegExp$/;"	p	interface:LanguageConfig
blockEnd	vscode/src/completions/multiline.ts	/^    blockEnd: string | null$/;"	p	interface:LanguageConfig
blockStart	vscode/src/completions/multiline.ts	/^    blockStart: string$/;"	p	interface:LanguageConfig
blurbIndex	lib/shared/src/plugins/built-in/confluence.ts	/^    const blurbIndex = paragraph.indexOf(blurb)$/;"	C	function:getSurroundingText
body	completions-review-tool/src/styles/global.css	/^body {$/;"	s
body	lib/shared/src/plugins/built-in/confluence.ts	/^    body: {$/;"	p	interface:WikiContent
body	lib/shared/src/plugins/built-in/github-issues.ts	/^    body: string$/;"	p	interface:Item
body	lib/shared/src/plugins/built-in/url-reader.ts	/^        body: text.slice(0, 1000),$/;"	C	function:fetchURL
body	node_modules/autopreview/css/index.css	/^body {$/;"	s
body	vscode/test/fixtures/mock-server.ts	/^    body: {$/;"	p	interface:MockRequest
body	vscode/webviews/index.css	/^body {$/;"	s
body	web/src/App.module.css	/^body {$/;"	s
body	web/src/index.css	/^body {$/;"	s
body::-webkit-scrollbar	node_modules/autopreview/css/index.css	/^body::-webkit-scrollbar,$/;"	s
body[data-vscode-theme-kind='vscode-dark'] .transcript-item:not(.human-transcript-item)	vscode/webviews/Chat.module.css	/^body[data-vscode-theme-kind='vscode-dark'] .transcript-item:not(.human-transcript-item),$/;"	c
body[data-vscode-theme-kind='vscode-high-contrast'] .transcript-item:not(.human-transcript-item)	vscode/webviews/Chat.module.css	/^body[data-vscode-theme-kind='vscode-high-contrast'] .transcript-item:not(.human-transcript-item)/;"	c
body[data-vscode-theme-kind='vscode-high-contrast-light'] .transcript-item:not(.human-transcript-item)	vscode/webviews/Chat.module.css	/^body[data-vscode-theme-kind='vscode-high-contrast-light'] .transcript-item:not(.human-transcript/;"	c
body[data-vscode-theme-kind='vscode-light'] .transcript-item:not(.human-transcript-item)	vscode/webviews/Chat.module.css	/^body[data-vscode-theme-kind='vscode-light'] .transcript-item:not(.human-transcript-item),$/;"	c
boostedFilename	lib/shared/src/codebase-context/rerank.ts	/^            const boostedResult = resultsMap[boostedFilename]$/;"	C	method:LLMReranker.rerank
boostedFilename	lib/shared/src/codebase-context/rerank.ts	/^        for (const boostedFilename of boostedFilenames) {$/;"	C	method:LLMReranker.rerank
boostedFilenames	lib/shared/src/codebase-context/rerank.ts	/^        const boostedFilenames = await parseXml(out)$/;"	C	method:LLMReranker.rerank
boostedFiles	vscode/src/local-context/filename-context-fetcher.ts	/^            const boostedFiles = []$/;"	C	method:FilenameContextFetcher.getContext
boostedNames	lib/shared/src/codebase-context/rerank.ts	/^        const boostedNames = new Set<string>()$/;"	C	method:LLMReranker.rerank
boostedResult	lib/shared/src/codebase-context/rerank.ts	/^            const boostedResult = resultsMap[boostedFilename]$/;"	C	method:LLMReranker.rerank
botMessage	lib/shared/src/chat/transcript/index.ts	/^        const botMessage = messages[i]$/;"	C	function:truncatePrompt
botText	vscode/src/non-stop/FixupController.ts	/^            const botText = task.inProgressReplacement || task.replacement$/;"	C
bothWords	vscode/src/completions/bestJaccardMatch.ts	/^    const bothWords = new Map<string, number>()$/;"	C	function:bestJaccardMatch
buf	lib/shared/src/sourcegraph-api/utils.test.ts	/^        const { str, buf } = toPartialUtf8String(Buffer.from('hello, world', 'utf-8'))$/;"	C
buf	lib/shared/src/sourcegraph-api/utils.test.ts	/^        const { str, buf } = toPartialUtf8String(Buffer.from('今日は、世界', 'utf-8'))$/;"	C
buf	lib/shared/src/sourcegraph-api/utils.test.ts	/^        const { str, buf } = toPartialUtf8String(Buffer.from([0x48, 0x69, 0x20, 0xef]))$/;"	C
buf	lib/shared/src/sourcegraph-api/utils.test.ts	/^        const { str, buf } = toPartialUtf8String(Buffer.from([0x59, 0x6f, 0x21, 0xf0, 0x8a, 0x8b/;"	C
buffer	agent/src/jsonrpc.ts	/^    private buffer: Buffer = Buffer.alloc(0)$/;"	p	class:MessageDecoder
buffer	agent/src/jsonrpc.ts	/^    private buffer: Buffer = Buffer.alloc(0)$/;"	p	class:MessageEncoder
buffer	vscode/src/non-stop/diff.ts	/^    const buffer = []$/;"	C	function:dumpUse
buffer	vscode/src/non-stop/tracked-range.test.ts	/^    const buffer = []$/;"	C	function:show
bufferText	vscode/src/non-stop/FixupController.ts	/^            const bufferText = editor.document.getText(task.selectionRange)$/;"	C
bufferText	vscode/src/non-stop/FixupController.ts	/^        const bufferText = document.getText(task.selectionRange)$/;"	C
buffer_	lib/shared/src/chat/bot-response-multiplexer.ts	/^    private buffer_ = ''$/;"	p	class:BotResponseMultiplexer
buffer_	lib/shared/src/chat/bot-response-multiplexer.ts	/^    private buffer_: string[] = []$/;"	p	class:BufferedBotResponseSubscriber
bugs	vscode/package.json	/^  "bugs": {$/;"	o
build	agent/package.json	/^    "build": "esbuild .\/src\/index.ts --bundle --outfile=dist\/agent.js --format=cjs --platform/;"	s	object:scripts
build	cli/package.json	/^    "build": "esbuild .\/src\/program.ts --bundle --outfile=dist\/cody --platform=node --log-lev/;"	s	object:scripts
build	completions-review-tool/package.json	/^    "build": "remix build",$/;"	s	object:scripts
build	completions-review-tool/server.js	/^          build: require(BUILD_DIR),$/;"	p	variable:anonymousObject39c914cd0305
build	completions-review-tool/server.js	/^        build: require(BUILD_DIR),$/;"	p	variable:anonymousObject39c914cd0405
build	lib/shared/package.json	/^    "build": "tsc --build",$/;"	s	object:scripts
build	lib/ui/package.json	/^    "build": "tsc --build && cp -R src\/* dist\/",$/;"	s	object:scripts
build	package.json	/^    "build": "tsc --build",$/;"	s	object:scripts
build	slack/package.json	/^    "build": "esbuild .\/src\/app.ts --bundle --outfile=dist\/app.js --external:hnswlib-node --f/;"	s	object:scripts
build	vscode/package.json	/^    "build": "scripts\/download-rg.sh && tsc --build && pnpm run esbuild --minify && vite build /;"	s	object:scripts
build	vscode/scripts/bundle.ts	/^async function build(): Promise<void> {$/;"	C
build	vscode/src/my-cody/CustomRecipesBuilder.ts	/^    public build(content: string | null, type: CodyPromptType): Map<string, CodyPrompt> | null {$/;"	m	class:CustomRecipesBuilder
build	web/package.json	/^    "build": "tsc --build && vite build --mode production",$/;"	s	object:scripts
build-agent-binaries	agent/package.json	/^    "build-agent-binaries": "pnpm run build && pkg -t node16-linux-arm64,node16-linux-x64,node16/;"	s	object:scripts
build-minify	agent/package.json	/^    "build-minify": "pnpm build --minify",$/;"	s	object:scripts
build-ts	agent/package.json	/^    "build-ts": "tsc --build",$/;"	s	object:scripts
build-ts	cli/package.json	/^    "build-ts": "tsc --build --emitDeclarationOnly",$/;"	s	object:scripts
build:dev	vscode/package.json	/^    "build:dev": "scripts\/download-rg.sh && tsc --build && concurrently \\"pnpm run esbuild --s/;"	s	object:scripts
build:docker	slack/package.json	/^    "build:docker": "IMAGE=cody-slack:0.0.1 .\/build.sh",$/;"	s	object:scripts
build:ts	slack/package.json	/^    "build:ts": "tsc --build --emitDeclarationOnly",$/;"	s	object:scripts
buildGraphQLUrl	lib/shared/src/sourcegraph-api/graphql/url.ts	/^export const buildGraphQLUrl = ({ request, baseUrl }: BuildGraphQLUrlOptions): string => {$/;"	C
builder	vscode/src/my-cody/MyPromptController.ts	/^    private builder: CustomRecipesBuilder$/;"	p	class:MyPromptController
button	vscode/webviews/App.css	/^button {$/;"	s
buttons	lib/shared/src/chat/transcript/messages.ts	/^    buttons?: ChatButton[]$/;"	p	interface:ChatMessage
byte	lib/shared/src/sourcegraph-api/utils.ts	/^        const byte = buf[lastValidByteOffsetExclusive - numBytes]$/;"	C
bytes	vscode/src/chat/ChatViewProvider.ts	/^        const bytes = await vscode.workspace.fs.readFile(root)$/;"	C
bytes	vscode/src/my-cody/CustomRecipesBuilder.ts	/^            const bytes = await vscode.workspace.fs.readFile(codyJsonFilePath)$/;"	C	method:CustomRecipesBuilder.getPromptsFromFileSystem
bytes	vscode/src/my-cody/helper.ts	/^    const bytes = await vscode.workspace.fs.readFile(codyJsonPath)$/;"	C	function:createJSONFile
cache	.vscode/settings.json	/^  "eslint.options": { "cache": true },$/;"	b	object:eslint.options
cache	vscode/src/completions/cache.test.ts	/^        const cache = new CompletionsCache()$/;"	C
cache	vscode/src/completions/cache.ts	/^    private cache = new LRUCache<string, CachedCompletions>({$/;"	p	class:CompletionsCache
cache	vscode/src/completions/completion.test.ts	/^        const cache = new CompletionsCache()$/;"	C
cache	vscode/src/completions/index.ts	/^            cache,$/;"	C
cache	vscode/src/completions/index.ts	/^    cache?: CompletionsCache$/;"	p	interface:CodyCompletionItemProviderConfig
cache	vscode/src/completions/request-manager.test.ts	/^        const cache = new CompletionsCache()$/;"	C
cachedCompletion	vscode/src/completions/cache.ts	/^        const cachedCompletion: CachedCompletions = {$/;"	C	method:CompletionsCache.get
cachedCompletions	vscode/src/completions/index.ts	/^            const cachedCompletions = this.completionsCache?.get(prefix, false)$/;"	C
cachedCompletions	vscode/src/completions/index.ts	/^        const cachedCompletions = this.completionsCache?.get(prefix)$/;"	C
cachedCompletions	vscode/src/completions/request-manager.ts	/^            const cachedCompletions = this.completionsCache?.get(request.prefix)$/;"	C	method:RequestManager.retestCaches
callback	agent/src/jsonrpc.ts	/^    constructor(public callback: MessageHandlerCallback) {$/;"	p	class:MessageDecoder
callback	lib/shared/src/chat/bot-response-multiplexer.ts	/^    constructor(private callback: (content: string | undefined) => Promise<void>) {}$/;"	p	class:BufferedBotResponseSubscriber
callbackIndex	vscode/src/services/SecretStorageProvider.ts	/^            const callbackIndex = this.callbacks.indexOf(callback)$/;"	C	method:InMemorySecretStorage.onDidChange
callbacks	vscode/src/services/SecretStorageProvider.ts	/^    private callbacks: ((key: string) => Promise<void>)[]$/;"	p	class:InMemorySecretStorage
cancel	vscode/src/non-stop/codelenses.ts	/^            const cancel = getCancelLens(codeLensRange, task.id)$/;"	C	function:getLensesForTask
capabilities	agent/src/protocol.ts	/^    capabilities?: ClientCapabilities$/;"	p	interface:ClientInfo
capabilities	agent/src/protocol.ts	/^    capabilities?: ServerCapabilities$/;"	p	interface:ServerInfo
cases	lib/shared/src/hallucinations-detector/index.test.ts	/^        const cases: {$/;"	C
catch	lib/shared/src/plugins/built-in/github-issues.ts	/^    } catch (error) {$/;"	C
catch	vscode/src/services/EventLogger.ts	/^    } catch (error) {$/;"	C	function:logEvent
categories	vscode/package.json	/^  "categories": [$/;"	a
category	vscode/package.json	/^        "category": "Ask Cody",$/;"	s	object:contributes.commands.10
category	vscode/package.json	/^        "category": "Ask Cody",$/;"	s	object:contributes.commands.11
category	vscode/package.json	/^        "category": "Ask Cody",$/;"	s	object:contributes.commands.2
category	vscode/package.json	/^        "category": "Ask Cody",$/;"	s	object:contributes.commands.3
category	vscode/package.json	/^        "category": "Ask Cody",$/;"	s	object:contributes.commands.4
category	vscode/package.json	/^        "category": "Ask Cody",$/;"	s	object:contributes.commands.5
category	vscode/package.json	/^        "category": "Ask Cody",$/;"	s	object:contributes.commands.6
category	vscode/package.json	/^        "category": "Ask Cody",$/;"	s	object:contributes.commands.7
category	vscode/package.json	/^        "category": "Ask Cody",$/;"	s	object:contributes.commands.8
category	vscode/package.json	/^        "category": "Cody Inline Chat",$/;"	s	object:contributes.commands.19
category	vscode/package.json	/^        "category": "Cody Inline Chat",$/;"	s	object:contributes.commands.20
category	vscode/package.json	/^        "category": "Cody Inline Chat",$/;"	s	object:contributes.commands.21
category	vscode/package.json	/^        "category": "Cody Inline Chat",$/;"	s	object:contributes.commands.22
category	vscode/package.json	/^        "category": "Cody Inline Chat",$/;"	s	object:contributes.commands.23
category	vscode/package.json	/^        "category": "Cody",$/;"	s	object:contributes.commands.0
category	vscode/package.json	/^        "category": "Cody",$/;"	s	object:contributes.commands.1
category	vscode/package.json	/^        "category": "Cody",$/;"	s	object:contributes.commands.12
category	vscode/package.json	/^        "category": "Cody",$/;"	s	object:contributes.commands.13
category	vscode/package.json	/^        "category": "Cody",$/;"	s	object:contributes.commands.14
category	vscode/package.json	/^        "category": "Cody",$/;"	s	object:contributes.commands.15
category	vscode/package.json	/^        "category": "Cody",$/;"	s	object:contributes.commands.16
category	vscode/package.json	/^        "category": "Cody",$/;"	s	object:contributes.commands.17
category	vscode/package.json	/^        "category": "Cody",$/;"	s	object:contributes.commands.18
category	vscode/package.json	/^        "category": "Cody",$/;"	s	object:contributes.commands.24
category	vscode/package.json	/^        "category": "Cody",$/;"	s	object:contributes.commands.25
category	vscode/package.json	/^        "category": "Cody",$/;"	s	object:contributes.commands.26
category	vscode/package.json	/^        "category": "Cody",$/;"	s	object:contributes.commands.27
category	vscode/package.json	/^        "category": "Cody",$/;"	s	object:contributes.commands.28
category	vscode/package.json	/^        "category": "Cody",$/;"	s	object:contributes.commands.29
category	vscode/package.json	/^        "category": "Cody",$/;"	s	object:contributes.commands.30
category	vscode/package.json	/^        "category": "Cody",$/;"	s	object:contributes.commands.31
category	vscode/package.json	/^        "category": "Cody",$/;"	s	object:contributes.commands.32
category	vscode/package.json	/^        "category": "Cody",$/;"	s	object:contributes.commands.9
cb	vscode/src/services/SecretStorageProvider.ts	/^        for (const cb of this.callbacks) {$/;"	C	method:InMemorySecretStorage.delete
cb	vscode/src/services/SecretStorageProvider.ts	/^        for (const cb of this.callbacks) {$/;"	C	method:InMemorySecretStorage.store
cellTopic	lib/shared/src/chat/bot-response-multiplexer.test.ts	/^        const cellTopic: string[] = []$/;"	C
ch	vscode/src/non-stop/diff.ts	/^    for (const ch of text) {$/;"	C	function:computeChunks
ch	vscode/src/non-stop/tracked-range.test.ts	/^        const ch = text[i]$/;"	C	function:show
ch	vscode/src/non-stop/tracked-range.test.ts	/^    for (const ch of spec) {$/;"	C	function:show
ch	vscode/test/e2e/fixup-decorator.test.ts	/^    for (const ch of 'who needs titles?') {$/;"	C
chA	vscode/src/non-stop/diff.ts	/^            const chA = a[iA - 1]$/;"	C	function:longestCommonSubsequence
chB	vscode/src/non-stop/diff.ts	/^        const chB = b[iB - 1]$/;"	C	function:longestCommonSubsequence
change	vscode/src/non-stop/tracked-range.ts	/^    for (const change of changes) {$/;"	C	function:updateRangeMultipleChanges
change	vscode/src/services/CodeLensProvider.ts	/^            for (const change of e.contentChanges) {$/;"	C
change	vscode/src/services/InlineAssist.test.ts	/^        const change = new vscode.Range(1, 0, 3, 0)$/;"	C
change	vscode/src/services/InlineAssist.test.ts	/^        const change = new vscode.Range(1, 0, 5, 0)$/;"	C
change	vscode/src/services/InlineAssist.test.ts	/^        const change = new vscode.Range(2, 0, 3, 0)$/;"	C
change	vscode/src/services/InlineAssist.test.ts	/^        const change = new vscode.Range(5, 0, 10, 0)$/;"	C
change	vscode/src/services/InlineAssist.test.ts	/^        const change = new vscode.Range(6, 0, 5, 0)$/;"	C
change	vscode/src/services/InlineController.ts	/^            for (const change of e.contentChanges) {$/;"	C
changeText	vscode/src/services/InlineAssist.test.ts	/^        const changeText = 'line0'$/;"	C
changeText	vscode/src/services/InlineAssist.test.ts	/^        const changeText = 'line1\\nline2'$/;"	C
changeText	vscode/src/services/InlineAssist.test.ts	/^        const changeText = 'line1\\nline2\\nline3'$/;"	C
changeText	vscode/src/services/InlineAssist.test.ts	/^        const changeText = 'line2\\nline3'$/;"	C
changeText	vscode/src/services/InlineAssist.test.ts	/^        const changeText = 'line6'$/;"	C
changes	vscode/src/completions/index.ts	/^            const changes = event.contentChanges$/;"	C
changes	vscode/src/non-stop/FixupDocumentEditObserver.ts	/^            const changes = new Array<TextChange>(...event.contentChanges)$/;"	C	method:FixupDocumentEditObserver.textDocumentChanged
changes	vscode/src/non-stop/tracked-range.test.ts	/^        const changes = [$/;"	C	function:show
channel	slack/src/mention-handler.ts	/^    const channel = event.channel$/;"	C	function:handleHumanMessage
channelName	slack/src/mention-handler.ts	/^    const [messages, channelName] = await Promise.all([$/;"	C	function:handleHumanMessage
char	vscode/src/completions/multiline.ts	/^            for (const char of line) {$/;"	C	function:adjustIndentation
character	agent/src/protocol.ts	/^    character: number$/;"	p	interface:Position
character	vscode/src/completions/completion.test.ts	/^            const position: any = { line: splitPrefix.length, character: splitPrefix[splitPrefix/;"	C
character	vscode/src/testutils/mocks.ts	/^    public character: number$/;"	p	class:Position
chat	agent/src/protocol.ts	/^    chat?: 'none' | 'streaming'$/;"	p	interface:ClientCapabilities
chat	lib/shared/src/chat/chat.ts	/^    public chat(messages: Message[], cb: CompletionCallbacks, params?: Partial<ChatParameters>):/;"	C
chat	lib/shared/src/chat/transcript/messages.ts	/^    chat: ChatHistory$/;"	p	interface:UserLocalHistory
chatClient	lib/shared/src/chat/client.ts	/^    const chatClient = new ChatClient(completionsClient)$/;"	C	function:createClient
chatClient	lib/shared/src/codebase-context/rerank.ts	/^    constructor(private chatClient: ChatClient) {}$/;"	p	class:LLMReranker
chatClient	vscode/src/external-services.ts	/^    chatClient: ChatClient$/;"	p	interface:ExternalServices
chatClient	vscode/src/external-services.ts	/^    const chatClient = new ChatClient(completions)$/;"	C	function:configureExternalServices
chatClient	vscode/src/local-context/filename-context-fetcher.ts	/^        private chatClient: ChatClient$/;"	p	class:FilenameContextFetcher
chatClient	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        private chatClient: ChatClient$/;"	p	class:LocalKeywordContextFetcher
chatClient	vscode/src/main.ts	/^        chatClient,$/;"	C
chatID	vscode/src/chat/ChatViewProvider.ts	/^            const chatID = sortedChats[0][0]$/;"	C
chatMessages	lib/shared/src/chat/useClient.ts	/^    readonly chatMessages: ChatMessage[]$/;"	p	interface:CodyClient
chatModel	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    chatModel?: string$/;"	p	interface:CodyLLMSiteConfiguration
chatModelMaxTokens	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    chatModelMaxTokens?: number$/;"	p	interface:CodyLLMSiteConfiguration
chatPredictions	lib/shared/src/telemetry/EventLogger.ts	/^            chatPredictions: this.config.experimentalChatPredictions,$/;"	C	method:EventLogger.log
chatProvider	vscode/src/main.ts	/^    const chatProvider = new ChatViewProvider($/;"	C
chatQuestionRecipe	lib/shared/src/chat/transcript/transcript.test.ts	/^        const chatQuestionRecipe = new ChatQuestion(() => {})$/;"	C
chatSelection	vscode/src/services/CodeLensProvider.ts	/^        const chatSelection = this.selectionRange$/;"	C
chatSelection	vscode/src/services/InlineController.ts	/^            const chatSelection = this.getSelectionRange()$/;"	C
chatTranscript	vscode/src/chat/ChatViewProvider.ts	/^        const chatTranscript = !isPrivateInstance && this.codebaseContext.getCodebase() ? privat/;"	C
chatTranscript	vscode/src/test-support.ts	/^    public async chatTranscript(): Promise<ChatMessage[]> {$/;"	m	class:TestSupport
chatView	vscode/test/integration/chat.test.ts	/^        const chatView = await getChatViewProvider()$/;"	C
chatViewProvider	vscode/src/test-support.ts	/^    public chatViewProvider = new Rendezvous<ChatViewProvider>()$/;"	p	class:TestSupport
chatViewProvider	vscode/test/integration/chat.test.ts	/^    const chatViewProvider = await getExtensionAPI().exports.testing?.chatViewProvider.get()$/;"	C	function:getChatViewProvider
chats	vscode/src/chat/ChatViewProvider.ts	/^            const chats = localHistory.chat$/;"	C
checkEmbeddingsConnection	lib/shared/src/codebase-context/index.ts	/^    public checkEmbeddingsConnection(): boolean {$/;"	m	class:CodebaseContext
checkIsConfigEnabled	vscode/src/my-cody/MyPromptController.ts	/^    private checkIsConfigEnabled(): void {$/;"	m	class:MyPromptController
checkPrTemplate	lib/shared/src/chat/recipes/generate-pr-description.ts	/^        const checkPrTemplate = spawnSync('git', ['ls-files', ...templateFormatArgs], { cwd: dir/;"	C	method:PrDescription.getInteraction
chooseDataSources	lib/shared/src/plugins/api/index.ts	/^export const chooseDataSources = ($/;"	C
chunk	vscode/src/non-stop/diff.ts	/^    for (const chunk of chunks) {$/;"	C	function:computeChunks
chunkContent	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    chunkContent: string$/;"	p	interface:CodyFileChunkContext
chunks	vscode/src/non-stop/diff.ts	/^    const chunks = computeChunks(original, a, b)$/;"	C	function:computeChunks
chunks	vscode/src/non-stop/diff.ts	/^    const chunks: Chunk[] = []$/;"	C	function:computeChunks
class	lib/shared/src/chat/chat.ts	/^export class ChatClient {$/;"	C
class	lib/shared/src/intent-detector/client.ts	/^export class SourcegraphIntentDetectorClient implements IntentDetector {$/;"	C
classes	completions-review-tool/globals.d.ts	/^    const classes: { readonly [key: string]: string }$/;"	C
classes	lib/ui/src/globals.d.ts	/^    const classes: { readonly [key: string]: string }$/;"	C
classes	vscode/webviews/globals.d.ts	/^    const classes: { readonly [key: string]: string }$/;"	C
classes	web/src/globals.d.ts	/^    const classes: { readonly [key: string]: string }$/;"	C
classnames	lib/ui/package.json	/^    "classnames": "^2.3.2"$/;"	s	object:dependencies
classnames	vscode/package.json	/^    "classnames": "^2.3.2",$/;"	s	object:dependencies
cleanupMessageForPrompt	slack/src/slack/message-interaction.ts	/^export function cleanupMessageForPrompt(text: string, isAssistantMessage = false) {$/;"	f
clear	vscode/src/completions/cache.ts	/^    public clear(): void {$/;"	m	class:CompletionsCache
clear	vscode/src/completions/logger.ts	/^export function clear(): void {$/;"	f
clear	vscode/src/my-cody/MyPromptController.ts	/^    public async clear(type: CodyPromptType = 'user'): Promise<void> {$/;"	m	class:MyPromptController
clear	vscode/src/services/DecorationProvider.ts	/^    public clear(): void {$/;"	m	class:DecorationProvider
client	agent/src/agent.ts	/^            const client = await this.client$/;"	C
client	agent/src/index.test.ts	/^    const client = new TestClient()$/;"	C
client	cli/src/client/completions.ts	/^    const client = 'debug' in clientOrGlobalOptions ? await getClient(clientOrGlobalOptions) : c/;"	C	function:getCompletionWithContext
client	cli/src/commands/commit/command.ts	/^    client: Client | GlobalOptions$/;"	p	interface:CommitEnvironment
client	lib/shared/src/embeddings/client.ts	/^        private client: SourcegraphGraphQLAPIClient,$/;"	p	class:SourcegraphEmbeddingsSearchClient
client	lib/shared/src/guardrails/client.ts	/^    constructor(private client: SourcegraphGraphQLAPIClient) {}$/;"	p	class:SourcegraphGuardrailsClient
client	lib/shared/src/unified-context/client.ts	/^        private client: SourcegraphGraphQLAPIClient,$/;"	p	class:UnifiedContextFetcherClient
client	vscode/src/chat/ChatViewProvider.ts	/^    const client = new SourcegraphGraphQLAPIClient(config)$/;"	C	function:getCodebaseContext
client	vscode/src/external-services.ts	/^    const client = new SourcegraphGraphQLAPIClient(initialConfig)$/;"	C	function:configureExternalServices
client	vscode/src/services/AuthProvider.ts	/^    private client: SourcegraphGraphQLAPIClient | null = null$/;"	p	class:AuthProvider
client	vscode/src/services/GuardrailsProvider.ts	/^        private client: Guardrails,$/;"	p	class:GuardrailsProvider
close	vscode/src/services/CodeLensProvider.ts	/^    const close = getInlineCloseLens(id, codeLensRange)$/;"	C	function:getErrorLenses
close	vscode/src/services/CodeLensProvider.ts	/^    const close = getInlineCloseLens(id, codeLensRange)$/;"	C	function:getLenses
closingBracket	vscode/src/completions/multiline.ts	/^        const closingBracket = BRACKET_PAIR[openingBracket]$/;"	C	function:shouldIncludeClosingLineBasedOnBrackets
code	agent/src/jsonrpc.ts	/^    code: ErrorCode$/;"	p	interface:ErrorInfo
code	completions-review-tool/data/completions-1686127320776.json	/^    "code": "class TextDocument implements vscode.TextDocument {\\n    private text: string\\n\\/;"	s	object:1
code	completions-review-tool/data/completions-1686127320776.json	/^    "code": "import path from 'path'\\n\\nfunction writeDateToDisk() {\\n    ️🔥\\n}"$/;"	s	object:2
code	completions-review-tool/data/completions-1686127320776.json	/^    "code": "import signale from 'signale'\\n\\nfunction logMessage(message: string) {\\n    ️/;"	s	object:0
code	completions-review-tool/data/completions-1686127445971.json	/^    "code": "class TextDocument implements vscode.TextDocument {\\n    private text: string\\n\\/;"	s	object:2
code	completions-review-tool/data/completions-1686127445971.json	/^    "code": "import path from 'path'\\n\\nfunction writeDateToDisk() {\\n    ️🔥\\n}"$/;"	s	object:1
code	completions-review-tool/data/completions-1686127445971.json	/^    "code": "import signale from 'signale'\\n\\nfunction logMessage(message: string) {\\n    ️/;"	s	object:0
code	completions-review-tool/data/completions-1686127449821.json	/^    "code": "class TextDocument implements vscode.TextDocument {\\n    private text: string\\n\\/;"	s	object:2
code	completions-review-tool/data/completions-1686127449821.json	/^    "code": "import path from 'path'\\n\\nfunction writeDateToDisk() {\\n    ️🔥\\n}"$/;"	s	object:1
code	completions-review-tool/data/completions-1686127449821.json	/^    "code": "import signale from 'signale'\\n\\nfunction logMessage(message: string) {\\n    ️/;"	s	object:0
code	completions-review-tool/data/completions-1686127552793.json	/^    "code": "class TextDocument implements vscode.TextDocument {\\n    private text: string\\n\\/;"	s	object:2
code	completions-review-tool/data/completions-1686127552793.json	/^    "code": "import path from 'path'\\n\\nfunction writeDateToDisk() {\\n    ️🔥\\n}"$/;"	s	object:0
code	completions-review-tool/data/completions-1686127552793.json	/^    "code": "import signale from 'signale'\\n\\nfunction logMessage(message: string) {\\n    ️/;"	s	object:1
code	vscode/test/completions/run-code-completions-on-dataset.ts	/^    code: string$/;"	p	interface:CompletionResult
code	vscode/test/completions/run-code-completions-on-dataset.ts	/^    for (const [index, code] of codeSamples.entries()) {$/;"	C	function:generateCompletionsForDataset
codeBlocks	lib/shared/src/guardrails/index.ts	/^    codeBlocks: number$/;"	p	interface:AnnotatedText
codeCompletionsEndpoint	lib/shared/src/sourcegraph-api/completions/client.ts	/^    protected get codeCompletionsEndpoint(): string {$/;"	m	class:SourcegraphCompletionsClient
codeLensRange	vscode/src/non-stop/codelenses.ts	/^    const codeLensRange = getSingleLineRange(task.selectionRange.start.line)$/;"	C	function:getLensesForTask
codeLensRange	vscode/src/services/CodeLensProvider.ts	/^        const codeLensRange = getSingleLineRange(range.start.line)$/;"	C
codeResults	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    codeResults: EmbeddingsSearchResult[]$/;"	p	interface:EmbeddingsSearchResults
codeSampleResults	vscode/test/completions/run-code-completions-on-dataset.ts	/^        const codeSampleResults: CompletionResult[] = []$/;"	C	function:generateCompletionsForDataset
codeToCompletions	completions-review-tool/src/models/completions.server.ts	/^const codeToCompletions: CodeToCompletions = {}$/;"	C
codeWithoutCursor	vscode/src/completions/completion.test.ts	/^            const codeWithoutCursor = prefix + suffix$/;"	C
codebase	cli/src/program.ts	/^    codebase: string$/;"	p	interface:GlobalOptions
codebase	lib/shared/src/chat/context.ts	/^    codebase?: string$/;"	p	interface:ChatContextStatus
codebase	lib/shared/src/chat/recipes/my-prompt.ts	/^    codebase: boolean$/;"	p	interface:CodyPromptContext
codebase	lib/shared/src/codebase-context/index.ts	/^        private codebase: string | undefined,$/;"	p	class:CodebaseContext
codebase	lib/shared/src/configuration.ts	/^    codebase?: string$/;"	p	interface:Configuration
codebase	slack/src/app.ts	/^    for (const codebase of DEFAULT_CODEBASES) {$/;"	C	function:createAppContext
codebase	slack/src/slack/message-interaction.ts	/^            const contextMessages = await codebaseContexts[codebase].getContextMessages($/;"	C	method:SlackInteraction.updateContextMessages
codebase	vscode/src/chat/ChatViewProvider.ts	/^    const codebase = config.codebase || convertGitCloneURLToCodebaseName(gitOutput)$/;"	C	function:getCodebaseContext
codebase	vscode/src/my-cody/CustomRecipesBuilder.ts	/^    public codebase: string | null = null$/;"	p	class:CustomRecipesBuilder
codebaseContext	cli/src/client/context.ts	/^    const codebaseContext = new CodebaseContext($/;"	C	function:createCodebaseContext
codebaseContext	cli/src/client/index.ts	/^    codebaseContext: CodebaseContext$/;"	p	interface:Client
codebaseContext	cli/src/client/index.ts	/^    let codebaseContext: CodebaseContext$/;"	C	function:getClient
codebaseContext	cli/src/client/index.ts	/^    return { codebaseContext, intentDetector, completionsClient }$/;"	C	function:getClient
codebaseContext	lib/shared/src/chat/client.ts	/^    codebaseContext: CodebaseContext$/;"	p	interface:Client
codebaseContext	lib/shared/src/chat/client.ts	/^    const codebaseContext = new CodebaseContext(config, config.codebase, embeddingsSearch, null,/;"	C	function:createClient
codebaseContext	lib/shared/src/chat/recipes/recipe.ts	/^    codebaseContext: CodebaseContext$/;"	p	interface:RecipeContext
codebaseContext	lib/shared/src/chat/transcript/transcript.test.ts	/^        const codebaseContext = new CodebaseContext($/;"	C
codebaseContext	lib/shared/src/chat/useClient.ts	/^            const codebaseContext = new CodebaseContext($/;"	C
codebaseContext	slack/src/services/codebase-context.ts	/^    const codebaseContext = new CodebaseContext($/;"	C	function:createCodebaseContext
codebaseContext	vscode/src/chat/ChatViewProvider.ts	/^            const codebaseContext = await getCodebaseContext(newConfig, this.rgPath, this.editor/;"	C
codebaseContext	vscode/src/chat/ChatViewProvider.ts	/^        const codebaseContext = await getCodebaseContext(this.config, this.rgPath, this.editor, /;"	C
codebaseContext	vscode/src/completions/context-embeddings.ts	/^    codebaseContext: CodebaseContext$/;"	p	interface:FetchEmbeddingsOptions
codebaseContext	vscode/src/completions/context-embeddings.ts	/^    codebaseContext: CodebaseContext$/;"	p	interface:Options
codebaseContext	vscode/src/completions/context-embeddings.ts	/^    const { currentFilePath, text, codebaseContext } = options$/;"	C	function:fetchAndSaveEmbeddings
codebaseContext	vscode/src/completions/context-embeddings.ts	/^    const { document, codebaseContext, prefix, suffix } = options$/;"	C
codebaseContext	vscode/src/completions/context.ts	/^    codebaseContext: CodebaseContext$/;"	p	interface:GetContextOptions
codebaseContext	vscode/src/completions/index.ts	/^            codebaseContext,$/;"	C
codebaseContext	vscode/src/completions/index.ts	/^    codebaseContext: CodebaseContext$/;"	p	interface:CodyCompletionItemProviderConfig
codebaseContext	vscode/src/external-services.ts	/^    codebaseContext: CodebaseContext$/;"	p	interface:ExternalServices
codebaseContext	vscode/src/external-services.ts	/^    const codebaseContext = new CodebaseContext($/;"	C	function:configureExternalServices
codebaseContext	vscode/src/main.ts	/^        codebaseContext,$/;"	C
codebaseContext	vscode/test/completions/run-code-completions-on-dataset.ts	/^    const { completionsClient, codebaseContext } = await configureExternalServices($/;"	C	function:initCompletionsProvider
codebaseContextMessages	cli/src/client/interactions.ts	/^        const codebaseContextMessages = await codebaseContext.getContextMessages(text, {$/;"	C	function:getContextMessages
codebaseContextMessages	lib/shared/src/chat/recipes/chat-question.ts	/^            const codebaseContextMessages = await codebaseContext.getContextMessages(text, numRe/;"	C	method:ChatQuestion.getContextMessages
codebaseContextMessages	lib/shared/src/chat/recipes/my-prompt.ts	/^            const codebaseContextMessages = await codebaseContext.getContextMessages(text, numRe/;"	C	method:MyPrompt.getContextMessages
codebaseContextMessages	lib/shared/src/chat/recipes/next-questions.ts	/^            const codebaseContextMessages = await codebaseContext.getContextMessages(text, numRe/;"	C	method:NextQuestions.getContextMessages
codebaseContexts	slack/src/constants.ts	/^    codebaseContexts: CodebaseContexts$/;"	p	interface:AppContext
codebaseContexts	slack/src/mention-handler.ts	/^    const { codebaseContexts, vectorStore } = appContext$/;"	C	function:restoreTranscriptFromSlackThread
codebaseIds	lib/shared/src/chat/useClient.ts	/^    const codebaseIds: Promise<string[]> = useMemo(async () => {$/;"	C
codebasePreamble	cli/src/client/preamble.ts	/^        const codebasePreamble =$/;"	C	function:getPreamble
codebasePreamble	lib/shared/src/chat/preamble.ts	/^        const codebasePreamble =$/;"	C	function:getPreamble
codebases	lib/shared/src/chat/useClient.ts	/^    const codebases: string[] = useMemo(() => {$/;"	C
cody	cli/package.json	/^    "cody": ".\/dist\/cody"$/;"	s	object:bin
cody	vscode/package.json	/^      "cody": [$/;"	a	object:contributes.views
cody-icons-font	lib/icons/README.md	/^# cody-icons-font$/;"	c
cody-icons-font	vscode/package.json	/^    "cody-icons-font": "workspace:^",$/;"	s	object:devDependencies
cody-logo	vscode/package.json	/^      "cody-logo": {$/;"	o	object:contributes.icons
cody-logo-heavy	vscode/package.json	/^      "cody-logo-heavy": {$/;"	o	object:contributes.icons
cody.autocomplete.advanced.accessToken	vscode/package.json	/^        "cody.autocomplete.advanced.accessToken": {$/;"	o	object:contributes.configuration.properties
cody.autocomplete.advanced.cache	vscode/package.json	/^        "cody.autocomplete.advanced.cache": {$/;"	o	object:contributes.configuration.properties
cody.autocomplete.advanced.embeddings	vscode/package.json	/^        "cody.autocomplete.advanced.embeddings": {$/;"	o	object:contributes.configuration.properties
cody.autocomplete.advanced.provider	vscode/package.json	/^        "cody.autocomplete.advanced.provider": {$/;"	o	object:contributes.configuration.properties
cody.autocomplete.advanced.serverEndpoint	vscode/package.json	/^        "cody.autocomplete.advanced.serverEndpoint": {$/;"	o	object:contributes.configuration.properties
cody.autocomplete.enabled	vscode/package.json	/^        "cody.autocomplete.enabled": {$/;"	o	object:contributes.configuration.properties
cody.autocomplete.experimental.completeSuggestWidgetSelection	vscode/package.json	/^        "cody.autocomplete.experimental.completeSuggestWidgetSelection": {$/;"	o	object:contributes.configuration.properties
cody.autocomplete.experimental.triggerMoreEagerly	vscode/package.json	/^        "cody.autocomplete.experimental.triggerMoreEagerly": {$/;"	o	object:contributes.configuration.properties
cody.codebase	vscode/package.json	/^        "cody.codebase": {$/;"	o	object:contributes.configuration.properties
cody.codebase	vscode/test/fixtures/.vscode/settings.json	/^  "cody.codebase": "http:\/\/localhost:49300",$/;"	s
cody.completions.advanced.accessToken	vscode/package.json	/^        "cody.completions.advanced.accessToken": {$/;"	o	object:contributes.configuration.properties
cody.completions.advanced.cache	vscode/package.json	/^        "cody.completions.advanced.cache": {$/;"	o	object:contributes.configuration.properties
cody.completions.advanced.embeddings	vscode/package.json	/^        "cody.completions.advanced.embeddings": {$/;"	o	object:contributes.configuration.properties
cody.completions.advanced.provider	vscode/package.json	/^        "cody.completions.advanced.provider": {$/;"	o	object:contributes.configuration.properties
cody.completions.advanced.serverEndpoint	vscode/package.json	/^        "cody.completions.advanced.serverEndpoint": {$/;"	o	object:contributes.configuration.properties
cody.customHeaders	vscode/package.json	/^        "cody.customHeaders": {$/;"	o	object:contributes.configuration.properties
cody.debug.enable	vscode/package.json	/^        "cody.debug.enable": {$/;"	o	object:contributes.configuration.properties
cody.debug.enable	vscode/test/fixtures/.vscode/settings.json	/^  "cody.debug.enable": true,$/;"	b
cody.debug.filter	vscode/package.json	/^        "cody.debug.filter": {$/;"	o	object:contributes.configuration.properties
cody.debug.verbose	vscode/package.json	/^        "cody.debug.verbose": {$/;"	o	object:contributes.configuration.properties
cody.debug.verbose	vscode/test/fixtures/.vscode/settings.json	/^  "cody.debug.verbose": true,$/;"	b
cody.experimental.chatPredictions	vscode/package.json	/^        "cody.experimental.chatPredictions": {$/;"	o	object:contributes.configuration.properties
cody.experimental.customRecipes	vscode/package.json	/^        "cody.experimental.customRecipes": {$/;"	o	object:contributes.configuration.properties
cody.experimental.guardrails	vscode/package.json	/^        "cody.experimental.guardrails": {$/;"	o	object:contributes.configuration.properties
cody.experimental.suggestions	vscode/package.json	/^        "cody.experimental.suggestions": {$/;"	o	object:contributes.configuration.properties
cody.inlineChat.enabled	vscode/package.json	/^        "cody.inlineChat.enabled": {$/;"	o	object:contributes.configuration.properties
cody.plugins.config	vscode/package.json	/^        "cody.plugins.config": {$/;"	o	object:contributes.configuration.properties
cody.plugins.debug.enabled	vscode/package.json	/^        "cody.plugins.debug.enabled": {$/;"	o	object:contributes.configuration.properties
cody.plugins.enabled	vscode/package.json	/^        "cody.plugins.enabled": {$/;"	o	object:contributes.configuration.properties
cody.serverEndpoint	vscode/package.json	/^        "cody.serverEndpoint": {$/;"	o	object:contributes.configuration.properties
cody.submenu	vscode/package.json	/^      "cody.submenu": [$/;"	a	object:contributes.menus
cody.useContext	vscode/package.json	/^        "cody.useContext": {$/;"	o	object:contributes.configuration.properties
codyCommands	vscode/test/integration/api.test.ts	/^        const codyCommands = commands.filter(command => command.includes('cody.'))$/;"	C
codyConfig	vscode/src/chat/ChatViewProvider.ts	/^        const codyConfig = vscode.workspace.getConfiguration('cody')$/;"	C
codyConfiguration	vscode/src/configuration.ts	/^const codyConfiguration = vscode.workspace.getConfiguration('cody')$/;"	C
codyEnabled	vscode/src/chat/utils.test.ts	/^    const codyEnabled = true$/;"	C
codyIcon	vscode/src/services/InlineController.ts	/^    private readonly codyIcon: vscode.Uri$/;"	p	class:InlineController
codyJsonFilePath	vscode/src/my-cody/CustomRecipesBuilder.ts	/^        const codyJsonFilePath = type === 'user' ? this.jsonFileUris.user : this.jsonFileUris.wo/;"	C	method:CustomRecipesBuilder.getPromptsFromFileSystem
codyJsonFilePath	vscode/src/my-cody/helper.ts	/^    const codyJsonFilePath = constructFileUri('.vscode\/cody.json', rootDirPath)$/;"	C	function:saveJSONFile
codyJsonFilePath	vscode/src/my-cody/helper.ts	/^    const codyJsonFilePath = vscode.Uri.joinPath(rootDirUri, fileName)$/;"	C	function:constructFileUri
codyJsonPath	vscode/src/my-cody/helper.ts	/^    const codyJsonPath = constructFileUri('resources\/samples\/' + sampleFileName, extensionPath/;"	C	function:createJSONFile
codyLLMConfiguration	vscode/src/services/AuthProvider.ts	/^        const [{ enabled, version }, codyLLMConfiguration] = await Promise.all([$/;"	C
codyNotice	slack/src/services/local-vector-store.ts	/^    const codyNotice = await fetchFileContent({$/;"	C	function:getDocuments
codyRoot	vscode/test/e2e/helpers.ts	/^            const codyRoot = path.resolve(__dirname, '..', '..')$/;"	C
collapseDuplicativeWhitespace	vscode/src/completions/text-processing.ts	/^export function collapseDuplicativeWhitespace(prefix: string, completion: string): string {$/;"	f
color-hex-length	.stylelintrc.json	/^    "color-hex-length": "long",$/;"	s	object:rules
color-named	.stylelintrc.json	/^    "color-named": "never",$/;"	s	object:rules
colors	vscode/package.json	/^    "colors": [$/;"	a	object:contributes
combinedResults	lib/shared/src/codebase-context/index.ts	/^            const combinedResults = this.mergeContextResults(keywordResults, filenameResults)$/;"	C	method:CodebaseContext.getLocalContextMessages
combinedResults	lib/shared/src/codebase-context/index.ts	/^        const combinedResults = await this.getEmbeddingSearchResults(query, options)$/;"	C	method:CodebaseContext.getEmbeddingsContextMessages
combinedTokensUsage	lib/shared/src/chat/transcript/index.ts	/^        const combinedTokensUsage = estimateTokensUsage(humanMessage) + estimateTokensUsage(botM/;"	C	function:truncatePrompt
command	.vscode/cody.json	/^        "command": "cat ~\/Library\/Logs\/com.sourcegraph.cody\/Cody.log"$/;"	s	object:recipes.Debug last error from Cody app.context
command	.vscode/cody.json	/^        "command": "git diff"$/;"	s	object:recipes.Commit Message for Current Changes.context
command	lib/shared/src/chat/recipes/my-prompt.ts	/^    command?: string$/;"	p	interface:CodyPromptContext
command	node_modules/autopreview/Autopreview.js	/^      window.parent.postMessage({ command: 'ERROR', data: `Root element with selector ${selector/;"	p	variable:anonymousObject8c7ec3e20105
command	vscode/package.json	/^          "command": "cody.auth.signin",$/;"	s	object:contributes.menus.view/title.5
command	vscode/package.json	/^          "command": "cody.auth.signout",$/;"	s	object:contributes.menus.view/title.4
command	vscode/package.json	/^          "command": "cody.comment.add",$/;"	s	object:contributes.menus.commandPalette.12
command	vscode/package.json	/^          "command": "cody.comment.add",$/;"	s	object:contributes.menus.comments/commentThread/context.0
command	vscode/package.json	/^          "command": "cody.comment.collapse-all",$/;"	s	object:contributes.menus.commandPalette.15
command	vscode/package.json	/^          "command": "cody.comment.collapse-all",$/;"	s	object:contributes.menus.comments/commentThread/title.2
command	vscode/package.json	/^          "command": "cody.comment.delete",$/;"	s	object:contributes.menus.commandPalette.13
command	vscode/package.json	/^          "command": "cody.comment.delete",$/;"	s	object:contributes.menus.comments/commentThread/title.0
command	vscode/package.json	/^          "command": "cody.comment.load",$/;"	s	object:contributes.menus.commandPalette.14
command	vscode/package.json	/^          "command": "cody.comment.load",$/;"	s	object:contributes.menus.comments/commentThread/title.1
command	vscode/package.json	/^          "command": "cody.customRecipes.list",$/;"	s	object:contributes.menus.cody.submenu.11
command	vscode/package.json	/^          "command": "cody.customRecipes.list",$/;"	s	object:contributes.menus.commandPalette.22
command	vscode/package.json	/^          "command": "cody.feedback",$/;"	s	object:contributes.menus.view/title.2
command	vscode/package.json	/^          "command": "cody.fixup.apply",$/;"	s	object:contributes.menus.commandPalette.16
command	vscode/package.json	/^          "command": "cody.fixup.apply",$/;"	s	object:contributes.menus.view/item/context.1
command	vscode/package.json	/^          "command": "cody.fixup.apply-all",$/;"	s	object:contributes.menus.commandPalette.17
command	vscode/package.json	/^          "command": "cody.fixup.apply-all",$/;"	s	object:contributes.menus.view/title.8
command	vscode/package.json	/^          "command": "cody.fixup.apply-by-file",$/;"	s	object:contributes.menus.commandPalette.18
command	vscode/package.json	/^          "command": "cody.fixup.apply-by-file",$/;"	s	object:contributes.menus.view/item/context.0
command	vscode/package.json	/^          "command": "cody.fixup.diff",$/;"	s	object:contributes.menus.commandPalette.19
command	vscode/package.json	/^          "command": "cody.fixup.diff",$/;"	s	object:contributes.menus.view/item/context.2
command	vscode/package.json	/^          "command": "cody.fixup.open",$/;"	s	object:contributes.menus.commandPalette.20
command	vscode/package.json	/^          "command": "cody.focus",$/;"	s	object:contributes.menus.cody.submenu.9
command	vscode/package.json	/^          "command": "cody.focus",$/;"	s	object:contributes.menus.commandPalette.10
command	vscode/package.json	/^          "command": "cody.focus",$/;"	s	object:contributes.menus.comments/commentThread/context.1
command	vscode/package.json	/^          "command": "cody.guardrails.debug",$/;"	s	object:contributes.menus.cody.submenu.10
command	vscode/package.json	/^          "command": "cody.guardrails.debug",$/;"	s	object:contributes.menus.commandPalette.21
command	vscode/package.json	/^          "command": "cody.history",$/;"	s	object:contributes.menus.view/title.1
command	vscode/package.json	/^          "command": "cody.interactive.clear",$/;"	s	object:contributes.menus.view/title.0
command	vscode/package.json	/^          "command": "cody.non-stop.fixup",$/;"	s	object:contributes.menus.editor/title.0
command	vscode/package.json	/^          "command": "cody.recipe.context-search",$/;"	s	object:contributes.menus.commandPalette.1
command	vscode/package.json	/^          "command": "cody.recipe.explain-code",$/;"	s	object:contributes.menus.cody.submenu.0
command	vscode/package.json	/^          "command": "cody.recipe.explain-code",$/;"	s	object:contributes.menus.commandPalette.0
command	vscode/package.json	/^          "command": "cody.recipe.explain-code-high-level",$/;"	s	object:contributes.menus.cody.submenu.1
command	vscode/package.json	/^          "command": "cody.recipe.explain-code-high-level",$/;"	s	object:contributes.menus.commandPalette.2
command	vscode/package.json	/^          "command": "cody.recipe.find-code-smells",$/;"	s	object:contributes.menus.cody.submenu.8
command	vscode/package.json	/^          "command": "cody.recipe.find-code-smells",$/;"	s	object:contributes.menus.commandPalette.9
command	vscode/package.json	/^          "command": "cody.recipe.fixup",$/;"	s	object:contributes.menus.cody.submenu.7
command	vscode/package.json	/^          "command": "cody.recipe.fixup",$/;"	s	object:contributes.menus.commandPalette.8
command	vscode/package.json	/^          "command": "cody.recipe.generate-docstring",$/;"	s	object:contributes.menus.cody.submenu.4
command	vscode/package.json	/^          "command": "cody.recipe.generate-docstring",$/;"	s	object:contributes.menus.commandPalette.5
command	vscode/package.json	/^          "command": "cody.recipe.generate-unit-test",$/;"	s	object:contributes.menus.cody.submenu.3
command	vscode/package.json	/^          "command": "cody.recipe.generate-unit-test",$/;"	s	object:contributes.menus.commandPalette.4
command	vscode/package.json	/^          "command": "cody.recipe.git-history",$/;"	s	object:contributes.menus.commandPalette.7
command	vscode/package.json	/^          "command": "cody.recipe.improve-variable-names",$/;"	s	object:contributes.menus.cody.submenu.5
command	vscode/package.json	/^          "command": "cody.recipe.inline-touch",$/;"	s	object:contributes.menus.cody.submenu.2
command	vscode/package.json	/^          "command": "cody.recipe.inline-touch",$/;"	s	object:contributes.menus.commandPalette.3
command	vscode/package.json	/^          "command": "cody.recipe.translate-to-language",$/;"	s	object:contributes.menus.cody.submenu.6
command	vscode/package.json	/^          "command": "cody.recipe.translate-to-language",$/;"	s	object:contributes.menus.commandPalette.6
command	vscode/package.json	/^          "command": "cody.settings.extension",$/;"	s	object:contributes.menus.view/title.7
command	vscode/package.json	/^          "command": "cody.settings.user",$/;"	s	object:contributes.menus.commandPalette.11
command	vscode/package.json	/^          "command": "cody.settings.user",$/;"	s	object:contributes.menus.view/title.6
command	vscode/package.json	/^          "command": "cody.welcome",$/;"	s	object:contributes.menus.view/title.3
command	vscode/package.json	/^          "command": "workbench.action.reloadWindow",$/;"	s	object:contributes.menus.view/title.9
command	vscode/package.json	/^        "command": "cody.auth.signin",$/;"	s	object:contributes.commands.14
command	vscode/package.json	/^        "command": "cody.auth.signout",$/;"	s	object:contributes.commands.13
command	vscode/package.json	/^        "command": "cody.chat.focus",$/;"	s	object:contributes.keybindings.0
command	vscode/package.json	/^        "command": "cody.comment.add",$/;"	s	object:contributes.commands.19
command	vscode/package.json	/^        "command": "cody.comment.collapse-all",$/;"	s	object:contributes.commands.22
command	vscode/package.json	/^        "command": "cody.comment.delete",$/;"	s	object:contributes.commands.20
command	vscode/package.json	/^        "command": "cody.comment.load",$/;"	s	object:contributes.commands.21
command	vscode/package.json	/^        "command": "cody.customRecipes.list",$/;"	s	object:contributes.commands.32
command	vscode/package.json	/^        "command": "cody.customRecipes.list",$/;"	s	object:contributes.keybindings.5
command	vscode/package.json	/^        "command": "cody.feedback",$/;"	s	object:contributes.commands.1
command	vscode/package.json	/^        "command": "cody.fixup.apply",$/;"	s	object:contributes.commands.28
command	vscode/package.json	/^        "command": "cody.fixup.apply-all",$/;"	s	object:contributes.commands.29
command	vscode/package.json	/^        "command": "cody.fixup.apply-by-file",$/;"	s	object:contributes.commands.30
command	vscode/package.json	/^        "command": "cody.fixup.diff",$/;"	s	object:contributes.commands.31
command	vscode/package.json	/^        "command": "cody.fixup.open",$/;"	s	object:contributes.commands.27
command	vscode/package.json	/^        "command": "cody.focus",$/;"	s	object:contributes.commands.16
command	vscode/package.json	/^        "command": "cody.guardrails.debug",$/;"	s	object:contributes.commands.24
command	vscode/package.json	/^        "command": "cody.history",$/;"	s	object:contributes.commands.18
command	vscode/package.json	/^        "command": "cody.inline.new",$/;"	s	object:contributes.commands.23
command	vscode/package.json	/^        "command": "cody.inline.new",$/;"	s	object:contributes.keybindings.4
command	vscode/package.json	/^        "command": "cody.interactive.clear",$/;"	s	object:contributes.commands.17
command	vscode/package.json	/^        "command": "cody.non-stop.fixup",$/;"	s	object:contributes.commands.26
command	vscode/package.json	/^        "command": "cody.non-stop.fixup",$/;"	s	object:contributes.keybindings.2
command	vscode/package.json	/^        "command": "cody.recipe.context-search",$/;"	s	object:contributes.commands.10
command	vscode/package.json	/^        "command": "cody.recipe.explain-code",$/;"	s	object:contributes.commands.2
command	vscode/package.json	/^        "command": "cody.recipe.explain-code-high-level",$/;"	s	object:contributes.commands.3
command	vscode/package.json	/^        "command": "cody.recipe.find-code-smells",$/;"	s	object:contributes.commands.11
command	vscode/package.json	/^        "command": "cody.recipe.fixup",$/;"	s	object:contributes.commands.9
command	vscode/package.json	/^        "command": "cody.recipe.fixup",$/;"	s	object:contributes.keybindings.1
command	vscode/package.json	/^        "command": "cody.recipe.generate-docstring",$/;"	s	object:contributes.commands.5
command	vscode/package.json	/^        "command": "cody.recipe.generate-unit-test",$/;"	s	object:contributes.commands.4
command	vscode/package.json	/^        "command": "cody.recipe.git-history",$/;"	s	object:contributes.commands.7
command	vscode/package.json	/^        "command": "cody.recipe.improve-variable-names",$/;"	s	object:contributes.commands.8
command	vscode/package.json	/^        "command": "cody.recipe.inline-touch",$/;"	s	object:contributes.commands.25
command	vscode/package.json	/^        "command": "cody.recipe.inline-touch",$/;"	s	object:contributes.keybindings.3
command	vscode/package.json	/^        "command": "cody.recipe.translate-to-language",$/;"	s	object:contributes.commands.6
command	vscode/package.json	/^        "command": "cody.settings.extension",$/;"	s	object:contributes.commands.15
command	vscode/package.json	/^        "command": "cody.settings.user",$/;"	s	object:contributes.commands.12
command	vscode/package.json	/^        "command": "cody.welcome",$/;"	s	object:contributes.commands.0
command	vscode/resources/samples/workspace-cody.json	/^        "command": "git diff"$/;"	s	object:recipes.Commit Message for Current Changes.context
command	vscode/src/my-cody/MyPromptController.ts	/^        const { command, args } = this.myPromptInProgress$/;"	C	method:MyPromptController.getCommandOutput
command	vscode/src/my-cody/types.ts	/^    command?: string$/;"	p	interface:CodyPrompt
command	vscode/src/services/StatusBar.ts	/^    const command = vscode.commands.registerCommand(statusBarItem.command, async () => {$/;"	C	function:createStatusBar
commandOutput	lib/shared/src/chat/recipes/my-prompt.ts	/^        const commandOutput = await context.editor.controllers?.prompt.get('output')$/;"	C	method:MyPrompt.getInteraction
commandPalette	vscode/package.json	/^      "commandPalette": [$/;"	a	object:contributes.menus
commandRegex	lib/shared/src/chat/recipes/helpers.ts	/^export const commandRegex = {$/;"	C
commander	cli/package.json	/^    "commander": "^10.0.1",$/;"	s	object:dependencies
commands	vscode/package.json	/^    "commands": [$/;"	a	object:contributes
commands	vscode/test/integration/api.test.ts	/^        const commands = await vscode.commands.getCommands(true)$/;"	C
comment	vscode/src/services/InlineController.ts	/^        const comment = new Comment(humanInput, 'Me', this.userIcon, reply.thread)$/;"	C
commentController	vscode/src/main.ts	/^    const commentController = new InlineController(context.extensionPath)$/;"	C
commentController	vscode/src/services/InlineController.ts	/^        const commentController = vscode.comments.createCommentController(this.id, this.label)$/;"	C
commentController	vscode/src/services/InlineController.ts	/^    private commentController: vscode.CommentController | null = null$/;"	p	class:InlineController
comments	vscode/src/services/InlineController.ts	/^        const comments = thread?.comments as Comment[]$/;"	C
comments/commentThread/context	vscode/package.json	/^      "comments\/commentThread\/context": [$/;"	a	object:contributes.menus
comments/commentThread/title	vscode/package.json	/^      "comments\/commentThread\/title": [$/;"	a	object:contributes.menus
commitCommand	cli/src/commands/commit/command.ts	/^export const commitCommand = new Command('commit')$/;"	C
commitMessage	cli/src/commands/commit/command.ts	/^    const commitMessage = await generateCommitMessage(diff, otherCommitMessages, globalOptions.d/;"	C	function:run
commitMessage	cli/src/commands/commit/command.ts	/^    const commitMessage = completion.slice(0, completion.indexOf('<\/commit-message>')).trim()$/;"	C	function:generateCommitMessage
commitSignatureEnv	cli/src/gitHelpers/testHelpers.ts	/^const commitSignatureEnv: NodeJS.ProcessEnv = {$/;"	C
compilerOptions	agent/tsconfig.json	/^  "compilerOptions": {$/;"	o
compilerOptions	cli/tsconfig.json	/^  "compilerOptions": {$/;"	o
compilerOptions	completions-review-tool/tsconfig.json	/^  "compilerOptions": {$/;"	o
compilerOptions	lib/shared/tsconfig.json	/^  "compilerOptions": {$/;"	o
compilerOptions	lib/ui/tsconfig.json	/^  "compilerOptions": {$/;"	o
compilerOptions	slack/tsconfig.json	/^  "compilerOptions": {$/;"	o
compilerOptions	tsconfig.base.json	/^  "compilerOptions": {$/;"	o
compilerOptions	tsconfig.json	/^  "compilerOptions": {$/;"	o
compilerOptions	vscode/scripts/tsconfig.json	/^  "compilerOptions": {$/;"	o
compilerOptions	vscode/test/completions/tsconfig.json	/^  "compilerOptions": {$/;"	o
compilerOptions	vscode/test/integration/tsconfig.json	/^  "compilerOptions": {$/;"	o
compilerOptions	vscode/tsconfig.json	/^  "compilerOptions": {$/;"	o
compilerOptions	web/tsconfig.json	/^  "compilerOptions": {$/;"	o
complete	lib/shared/src/sourcegraph-api/completions/browserClient.ts	/^    public complete(): Promise<CompletionResponse> {$/;"	m	class:SourcegraphBrowserCompletionsClient
complete	lib/shared/src/sourcegraph-api/completions/nodeClient.ts	/^    public async complete(params: CompletionParameters, abortSignal?: AbortSignal): Promise<Comp/;"	m	class:SourcegraphNodeCompletionsClient
complete	lib/shared/src/test/mocks.ts	/^    public complete(params: CompletionParameters, abortSignal?: AbortSignal): Promise<Completion/;"	m	class:MockCompletionsClient
complete	vscode/src/completions/completion.test.ts	/^    let complete: ($/;"	v
completeSuggestWidgetSelection	vscode/src/completions/index.ts	/^            completeSuggestWidgetSelection,$/;"	C
completeSuggestWidgetSelection	vscode/src/completions/index.ts	/^    completeSuggestWidgetSelection?: boolean$/;"	p	interface:CodyCompletionItemProviderConfig
completers	vscode/src/completions/index.ts	/^        const completers: Provider[] = []$/;"	C
completion	cli/src/commands/commit/command.ts	/^    const completion = await getCompletionWithContext($/;"	C	function:generateCommitMessage
completion	cli/src/commands/repl/index.ts	/^    const completion = await getCompletionWithContext(globalOptions, promptToUse || '', undefine/;"	C	function:run
completion	lib/shared/src/sourcegraph-api/completions/types.ts	/^    completion: string$/;"	p	interface:CompletionResponse
completion	vscode/src/completions/cache.ts	/^        for (const completion of completions) {$/;"	C	method:CompletionsCache.get
completionEvent	vscode/src/completions/logger.ts	/^    const completionEvent = displayedCompletions.get(id)$/;"	C	function:accept
completionEvent	vscode/src/completions/logger.ts	/^    const completionEvent = displayedCompletions.get(id)$/;"	C	function:noResponse
completionGroups	vscode/src/completions/docprovider.ts	/^        const completionGroups = this.completionsByUri[uri.toString()]$/;"	C
completionItems	vscode/test/completions/run-code-completions-on-dataset.ts	/^            const completionItems = await completionsProvider.provideInlineCompletionItems(textD/;"	C	function:generateCompletionsForDataset
completionModel	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    completionModel?: string$/;"	p	interface:CodyLLMSiteConfiguration
completionModelMaxTokens	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    completionModelMaxTokens?: number$/;"	p	interface:CodyLLMSiteConfiguration
completionProvider	vscode/src/completions/completion.test.ts	/^            const completionProvider = new CodyCompletionItemProvider({$/;"	C
completionReadyCode	vscode/test/completions/run-code-completions-on-dataset.ts	/^    const completionReadyCode = code.replaceAll(CURSOR, '')$/;"	C
completionText	vscode/src/completions/docprovider.ts	/^                        const completionText = `\\`\\`\\`${lang}\\n${content}\\n\\`\\`\\``$/;"	C
completions	agent/src/protocol.ts	/^    completions?: 'none'$/;"	p	interface:ClientCapabilities
completions	completions-review-tool/data/completions-1686127320776.json	/^    "completions": [$/;"	a	object:0
completions	completions-review-tool/data/completions-1686127320776.json	/^    "completions": [$/;"	a	object:1
completions	completions-review-tool/data/completions-1686127320776.json	/^    "completions": [$/;"	a	object:2
completions	completions-review-tool/data/completions-1686127445971.json	/^    "completions": [$/;"	a	object:0
completions	completions-review-tool/data/completions-1686127445971.json	/^    "completions": [$/;"	a	object:1
completions	completions-review-tool/data/completions-1686127445971.json	/^    "completions": [$/;"	a	object:2
completions	completions-review-tool/data/completions-1686127449821.json	/^    "completions": [$/;"	a	object:0
completions	completions-review-tool/data/completions-1686127449821.json	/^    "completions": [$/;"	a	object:1
completions	completions-review-tool/data/completions-1686127449821.json	/^    "completions": [$/;"	a	object:2
completions	completions-review-tool/data/completions-1686127552793.json	/^    "completions": [$/;"	a	object:0
completions	completions-review-tool/data/completions-1686127552793.json	/^    "completions": [$/;"	a	object:1
completions	completions-review-tool/data/completions-1686127552793.json	/^    "completions": [$/;"	a	object:2
completions	vscode/src/completions/cache.ts	/^            completions: existingCompletions.concat(completion),$/;"	C	method:CompletionsCache.get
completions	vscode/src/completions/cache.ts	/^        const completions = result.completions.map(completion => {$/;"	C	method:CompletionsCache.get
completions	vscode/src/completions/cache.ts	/^    completions: Completion[]$/;"	p	interface:CachedCompletions
completions	vscode/src/completions/completion.test.ts	/^            const completions = await completionProvider.provideInlineCompletionItems($/;"	C
completions	vscode/src/completions/completion.test.ts	/^            const { completions } = await complete($/;"	C
completions	vscode/src/completions/completion.test.ts	/^            const { completions } = await complete(CURSOR_MARKER, [createCompletionResponse(comp/;"	C
completions	vscode/src/completions/completion.test.ts	/^            const { completions } = await complete(`console.log(${CURSOR_MARKER}`, 'stall')$/;"	C
completions	vscode/src/completions/completion.test.ts	/^            const { completions } = await complete(`const foo = ${CURSOR_MARKER}`, [createComple/;"	C
completions	vscode/src/completions/completion.test.ts	/^            const { completions } = await complete(`function printHello(${CURSOR_MARKER})`, [$/;"	C
completions	vscode/src/completions/completion.test.ts	/^            const { completions, requests } = await complete($/;"	C
completions	vscode/src/completions/completion.test.ts	/^        const { completions } = await complete($/;"	C
completions	vscode/src/completions/completion.test.ts	/^        const { completions } = await complete(`const isLocalHost = window.location.host${CURSOR/;"	C
completions	vscode/src/completions/completion.test.ts	/^        const { completions } = await complete(`const x = ${CURSOR_MARKER}`, [createCompletionRe/;"	C
completions	vscode/src/completions/completion.test.ts	/^        const { completions } = await complete(`foo = ${CURSOR_MARKER}`, [createCompletionRespon/;"	C
completions	vscode/src/completions/completion.test.ts	/^        const { completions } = await complete(`function bubbleSort(${CURSOR_MARKER})`, [$/;"	C
completions	vscode/src/completions/docprovider.ts	/^    completions: Completion[]$/;"	p	interface:CompletionGroup
completions	vscode/src/completions/index.ts	/^        const completions = await this.requestManager.request($/;"	C
completions	vscode/src/completions/providers/unstable-codegen.ts	/^            const completions: string[] = data.completions.map(c => postProcess(c.completion, th/;"	C	method:UnstableCodeGenProvider.generateCompletions
completions	vscode/src/completions/providers/unstable-huggingface.ts	/^            const completions: string[] = data.map(c => postProcess(c.generated_text, this.optio/;"	C	method:UnstableHuggingFaceProvider.generateCompletions
completions	vscode/src/external-services.ts	/^    const completions = new SourcegraphNodeCompletionsClient(initialConfig, logger)$/;"	C	function:configureExternalServices
completions	vscode/test/completions/run-code-completions-on-dataset.ts	/^            const completions = ('items' in completionItems ? completionItems.items : completion/;"	C	function:generateCompletionsForDataset
completions	vscode/test/completions/run-code-completions-on-dataset.ts	/^    completions: string[]$/;"	p	interface:CompletionResult
completionsCache	vscode/src/completions/request-manager.ts	/^    constructor(private completionsCache: CompletionsCache | undefined) {}$/;"	p	class:RequestManager
completionsClient	cli/src/client/index.ts	/^    completionsClient: SourcegraphCompletionsClient$/;"	p	interface:Client
completionsClient	cli/src/client/index.ts	/^    const completionsClient = new SourcegraphNodeCompletionsClient({$/;"	C	function:getClient
completionsClient	cli/src/client/index.ts	/^    return { codebaseContext, intentDetector, completionsClient }$/;"	C	function:getClient
completionsClient	lib/shared/src/chat/client.ts	/^    const completionsClient = createCompletionsClient(fullConfig)$/;"	C	function:createClient
completionsClient	slack/src/services/stream-completions.ts	/^const completionsClient = getCompletionsClient()$/;"	C
completionsClient	vscode/src/completions/completion.test.ts	/^            const completionsClient: any = {$/;"	C
completionsClient	vscode/src/completions/providers/anthropic.ts	/^    completionsClient: SourcegraphNodeCompletionsClient$/;"	p	interface:AnthropicOptions
completionsClient	vscode/src/completions/providers/anthropic.ts	/^    private completionsClient: SourcegraphNodeCompletionsClient$/;"	p	class:AnthropicProvider
completionsClient	vscode/src/external-services.ts	/^    completionsClient: SourcegraphCompletionsClient$/;"	p	interface:ExternalServices
completionsClient	vscode/src/main.ts	/^        completionsClient,$/;"	C
completionsClient	vscode/test/completions/run-code-completions-on-dataset.ts	/^    const { completionsClient, codebaseContext } = await configureExternalServices($/;"	C	function:initCompletionsProvider
completionsDataset	vscode/test/completions/completions-dataset.ts	/^export const completionsDataset = [$/;"	C
completionsEndpoint	lib/shared/src/sourcegraph-api/completions/client.ts	/^    protected get completionsEndpoint(): string {$/;"	m	class:SourcegraphCompletionsClient
completionsProvider	vscode/src/main.ts	/^    const completionsProvider = new CodyCompletionItemProvider({$/;"	C	function:createCompletionsProvider
completionsProvider	vscode/src/main.ts	/^    let completionsProvider: vscode.Disposable | null = null$/;"	v
completionsProvider	vscode/test/completions/run-code-completions-on-dataset.ts	/^    const completionsProvider = await initCompletionsProvider()$/;"	C	function:generateCompletionsForDataset
completionsProvider	vscode/test/completions/run-code-completions-on-dataset.ts	/^    const completionsProvider = new CodyCompletionItemProvider({$/;"	C	function:initCompletionsProvider
complicatedMarkdown	lib/shared/src/common/markdown/markdown.test.ts	/^const complicatedMarkdown = [$/;"	C
component	node_modules/autopreview/vue2.js	/^      component = function () {$/;"	f	method:AutoPreviewForVue._showComponent
component	node_modules/autopreview/vue3.js	/^      component = {$/;"	v	method:AutoPreviewForVue._showComponent
componentDidMount	node_modules/autopreview/react.js	/^        componentDidMount() {$/;"	m	class:AutoPreviewForReact._showComponent.Wrapper
componentMounted	node_modules/autopreview/Autopreview.js	/^    this.sendMessage('update', { componentMounted: true });$/;"	p	variable:AutoPreview.showComponent.anonymousObject8c7ec3e20505
components	node_modules/autopreview/Autopreview.js	/^      'components': keys$/;"	p	variable:AutoPreview.getComponents.anonymousObject8c7ec3e20405
components	node_modules/autopreview/Autopreview.js	/^    this.components = [];$/;"	p	method:AutoPreview.constructor
composite	tsconfig.base.json	/^    "composite": true,$/;"	b	object:compilerOptions
compression	completions-review-tool/package.json	/^    "compression": "^1.7.4",$/;"	s	object:dependencies
compression	completions-review-tool/server.js	/^const compression = require('compression')$/;"	C
computeChunks	vscode/src/non-stop/diff.ts	/^function computeChunks(original: string, a: string, b: string): Chunk[] {$/;"	f
concurrently	vscode/package.json	/^    "concurrently": "^8.2.0",$/;"	s	object:devDependencies
config	.eslintrc.js	/^const config = {$/;"	C
config	lib/shared/src/chat/client.ts	/^    config: ClientInitConfig$/;"	p	interface:ClientInit
config	lib/shared/src/chat/useClient.ts	/^    config: CodyClientConfig$/;"	p	interface:CodyClientProps
config	lib/shared/src/chat/useClient.ts	/^    readonly config: CodyClientConfig$/;"	p	interface:CodyClient
config	lib/shared/src/codebase-context/index.ts	/^        private config: Pick<Configuration, 'useContext' | 'serverEndpoint'>,$/;"	p	class:CodebaseContext
config	lib/shared/src/plugins/api/types.ts	/^    config: TConfig$/;"	p	interface:PluginAPI
config	lib/shared/src/sourcegraph-api/completions/client.ts	/^        protected config: CompletionsClientConfig,$/;"	p	class:SourcegraphCompletionsClient
config	lib/shared/src/sourcegraph-api/graphql/client.ts	/^        private config: Pick<ConfigurationWithAccessToken, 'serverEndpoint' | 'accessToken' | 'c/;"	p	class:SourcegraphGraphQLAPIClient
config	lib/shared/src/telemetry/EventLogger.ts	/^        private config: ConfigurationWithAccessToken$/;"	p	class:EventLogger
config	lib/ui/.storybook/main.ts	/^const config: StorybookConfig = {$/;"	C
config	lib/ui/.storybook/main.ts	/^export default config$/;"	C
config	vscode/.storybook/main.ts	/^const config: StorybookConfig = {$/;"	C
config	vscode/.storybook/main.ts	/^export default config$/;"	C
config	vscode/src/completions/multiline.ts	/^    const config = getLanguageConfig(languageId)$/;"	C	function:detectMultiline
config	vscode/src/configuration.test.ts	/^        const config: Pick<vscode.WorkspaceConfiguration, 'get'> = {$/;"	C
config	vscode/src/configuration.ts	/^    const config = getConfiguration(vscode.workspace.getConfiguration())$/;"	C
config	vscode/src/configuration.ts	/^    const config = vscode.workspace.getConfiguration()$/;"	C	function:migrateDeprecatedConfigOption
config	vscode/src/log.ts	/^    const config = getConfiguration(workspaceConfig)$/;"	C	function:debug
config	vscode/src/main.ts	/^            const config = getConfiguration(vscode.workspace.getConfiguration())$/;"	C
config	vscode/src/main.ts	/^    const config = getConfiguration(workspaceConfig)$/;"	C
config	vscode/src/my-cody/MyPromptController.ts	/^        const config = vscode.workspace.getConfiguration('cody')$/;"	C	method:MyPromptController.checkIsConfigEnabled
config	vscode/src/services/AuthProvider.ts	/^        const config = {$/;"	C
config	vscode/src/services/InlineController.ts	/^            const config = vscode.workspace.getConfiguration('cody')$/;"	C
config	vscode/test/integration/helpers.ts	/^    const config = vscode.workspace.getConfiguration()$/;"	C	function:beforeIntegrationTest
configForWebview	vscode/src/chat/ChatViewProvider.ts	/^            const configForWebview: ConfigurationSubsetForWebview & LocalEnv = {$/;"	C
configOverwrites	vscode/src/chat/protocol.ts	/^    configOverwrites?: CodyLLMSiteConfiguration$/;"	p	interface:AuthStatus
configOverwrites	vscode/src/services/AuthProvider.ts	/^        const configOverwrites = !isError(codyLLMConfiguration) ? codyLLMConfiguration : undefin/;"	C
configuration	slack/src/services/openai-completions-client.ts	/^        const configuration = new Configuration({$/;"	C	method:OpenAICompletionsClient.constructor
configuration	vscode/package.json	/^    "configuration": {$/;"	o	object:contributes
configurationDetails	lib/shared/src/telemetry/EventLogger.ts	/^            configurationDetails,$/;"	C	method:EventLogger.log
configurationDetails	lib/shared/src/telemetry/EventLogger.ts	/^        const configurationDetails = {$/;"	C	method:EventLogger.log
configurations	.vscode/launch.json	/^  "configurations": [$/;"	a
configureExternalServices	vscode/src/external-services.ts	/^export async function configureExternalServices($/;"	f
confirmRemove	vscode/src/my-cody/MyPromptController.ts	/^            const confirmRemove = await showRemoveConfirmationInput()$/;"	C	method:MyPromptController.fileTypeActions
conflicted	vscode/src/non-stop/FixupDecorator.ts	/^        const conflicted: vscode.Range[] = []$/;"	C
conflicts	vscode/src/non-stop/FixupDecorator.ts	/^        const conflicts: vscode.Range[] = []$/;"	C
conflicts	vscode/src/non-stop/FixupDecorator.ts	/^    conflicts: vscode.Range[]$/;"	p	interface:TaskDecorations
conflicts	vscode/src/non-stop/diff.ts	/^    const conflicts = []$/;"	C	function:computeChunks
confluence	vscode/package.json	/^            "confluence": {$/;"	o	object:contributes.configuration.properties.cody.plugins.config.properties
confluencePlugin	lib/shared/src/plugins/built-in/confluence.ts	/^export const confluencePlugin: Plugin = {$/;"	C
confluencePlugin	lib/shared/src/plugins/built-in/index.ts	/^    confluencePlugin,$/;"	C
connectedCallback	node_modules/autopreview/components/list/index.js	/^  connectedCallback() {$/;"	m	class:AutoPreviewList
connection	lib/shared/src/chat/context.ts	/^    connection?: boolean$/;"	p	interface:ChatContextStatus
connectionConfiguration	agent/src/protocol.ts	/^    connectionConfiguration?: ConnectionConfiguration$/;"	p	interface:ClientInfo
conspiracyTopic	lib/shared/src/chat/bot-response-multiplexer.test.ts	/^        const conspiracyTopic: string[] = []$/;"	C
const	lib/shared/src/chat/recipes/generate-pr-description.ts	/^        const checkPrTemplate = spawnSync('git', ['ls-files', ...templateFormatArgs], { cwd: dir/;"	C	method:PrDescription.getInteraction
const	lib/shared/src/chat/recipes/git-log.ts	/^        const selection = context.editor.getActiveTextEditorSelectionOrEntireFile()$/;"	C	method:GitHistory.getInteraction
const	lib/shared/src/chat/recipes/helpers.ts	/^export const commandRegex = {$/;"	C
const	lib/shared/src/chat/recipes/langs.ts	/^export const languageNames = Array.from(Object.keys(languageMarkdownID))$/;"	C
const	lib/shared/src/hallucinations-detector/index.ts	/^const filePathRegexp = new RegExp(filePathRegexpParts.join(''), 'g')$/;"	C
const	lib/shared/src/intent-detector/client.ts	/^        const inputLowerCase = input.toLowerCase()$/;"	C
const	lib/shared/src/plugins/built-in/confluence.ts	/^        const searchResponse = await fetch(searchUrl, searchOptions)$/;"	C
const	lib/shared/src/plugins/built-in/github-issues.ts	/^        const rawResponse = await fetch(url, opts)$/;"	C
const	lib/shared/src/telemetry/EventLogger.ts	/^        const argument = {$/;"	C	method:EventLogger.log
const	lib/shared/src/telemetry/EventLogger.ts	/^        const publicArgument = {$/;"	C	method:EventLogger.log
const	slack/src/services/sourcegraph-client.ts	/^export const intentDetector = new SourcegraphIntentDetectorClient(sourcegraphClient)$/;"	C
const	slack/src/services/stream-completions.ts	/^const completionsClient = getCompletionsClient()$/;"	C
const	vscode/src/chat/protocol.ts	/^export const unauthenticatedStatus = {$/;"	C
const	vscode/src/completions/completion.test.ts	/^            const completionProvider = new CodyCompletionItemProvider({$/;"	C
const	vscode/src/completions/completion.test.ts	/^            const document: any = {$/;"	C
const	vscode/src/completions/completion.test.ts	/^            const providerConfig = createProviderConfig({$/;"	C
const	vscode/src/completions/logger.ts	/^    const id = createId()$/;"	C	function:start
const	vscode/src/completions/providers/unstable-codegen.ts	/^        const log = logger.startCompletion({$/;"	C	method:UnstableCodeGenProvider.generateCompletions
const	vscode/src/completions/providers/unstable-huggingface.ts	/^        const log = logger.startCompletion({$/;"	C	method:UnstableHuggingFaceProvider.generateCompletions
const	vscode/src/local-context/filename-context-fetcher.ts	/^        const results = await new Promise<string>((resolve, reject) => {$/;"	C	method:FilenameContextFetcher.getFilenames
const	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                    const out = await new Promise<string>((resolve, reject) => {$/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
const	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const proc = spawn(this.rgPath, rgArgs, {$/;"	C	method:LocalKeywordContextFetcher.fetchFileStats
const	vscode/src/my-cody/InputMenu.ts	/^    const inputOptions = {$/;"	C	function:showCustomRecipeMenu
const	vscode/src/my-cody/InputMenu.ts	/^    const selectedOption = await vscode.window.showQuickPick(options, inputOptions)$/;"	C	function:showCustomRecipeMenu
const	vscode/src/my-cody/MyToolsProvider.ts	/^            const output = stdout || stderr$/;"	C	method:MyToolsProvider.exeCommand
const	vscode/src/services/AuthMenus.ts	/^const LoginStepOptions = [$/;"	C
const	vscode/src/services/AuthMenus.ts	/^export const LoginMenuOptionItems = [$/;"	C
const	vscode/src/services/AuthProvider.ts	/^        const authStatus = await this.makeAuthStatus(config)$/;"	C
const	vscode/src/services/EventLogger.ts	/^    const publicArgument = {$/;"	C	function:logEvent
const	vscode/src/services/InlineController.ts	/^            const newRange = await editDocByUri($/;"	C
const	vscode/src/services/InlineController.ts	/^        const selectionRange = new vscode.Range(startPost, isFixMode ? endPostFix : endPostAsk)$/;"	C
const	vscode/test/completions/run-code-completions-on-dataset.ts	/^    const completionsProvider = new CodyCompletionItemProvider({$/;"	C	function:initCompletionsProvider
const	vscode/test/fixtures/mock-server.ts	/^const FIXUP_PROMPT_TAG = '<selection>'$/;"	C
constructFileUri	vscode/src/my-cody/helper.ts	/^export function constructFileUri(fileName: string, rootDirPath?: string): vscode.Uri | undefined/;"	f
constructSearchPattern	vscode/src/chat/fastFileFinder.ts	/^function constructSearchPattern(filePaths: string[]): string {$/;"	f
constructor	agent/src/jsonrpc.ts	/^    constructor(public callback: MessageHandlerCallback) {$/;"	m	class:MessageDecoder
constructor	agent/src/offsets.ts	/^    constructor(public readonly document: TextDocument) {$/;"	m	class:DocumentOffsets
constructor	lib/shared/src/chat/bot-response-multiplexer.ts	/^    constructor(private callback: (content: string | undefined) => Promise<void>) {}$/;"	m	class:BufferedBotResponseSubscriber
constructor	lib/shared/src/chat/chat.ts	/^    constructor(private completions: SourcegraphCompletionsClient) {}$/;"	C
constructor	lib/shared/src/chat/recipes/chat-question.ts	/^    constructor(private debug: (filterLabel: string, text: string, ...args: unknown[]) => void) /;"	m	class:ChatQuestion
constructor	lib/shared/src/chat/recipes/inline-chat.ts	/^    constructor(private debug: (filterLabel: string, text: string, ...args: unknown[]) => void) /;"	m	class:InlineChat
constructor	lib/shared/src/chat/transcript/index.ts	/^    constructor(interactions: Interaction[] = [], id?: string) {$/;"	m	class:Transcript
constructor	lib/shared/src/chat/transcript/interaction.ts	/^    constructor($/;"	m	class:Interaction
constructor	lib/shared/src/codebase-context/index.ts	/^    constructor($/;"	m	class:CodebaseContext
constructor	lib/shared/src/codebase-context/rerank.ts	/^    constructor(private chatClient: ChatClient) {}$/;"	m	class:LLMReranker
constructor	lib/shared/src/codebase-context/rerank.ts	/^    constructor(private rerank_: (userQuery: string, results: ContextResult[]) => Promise<Contex/;"	m	class:MockReranker
constructor	lib/shared/src/embeddings/client.ts	/^    constructor($/;"	m	class:SourcegraphEmbeddingsSearchClient
constructor	lib/shared/src/guardrails/client.ts	/^    constructor(private client: SourcegraphGraphQLAPIClient) {}$/;"	m	class:SourcegraphGuardrailsClient
constructor	lib/shared/src/intent-detector/client.ts	/^    constructor(private client: SourcegraphGraphQLAPIClient) {}$/;"	C
constructor	lib/shared/src/prompt/prompt-mixin.ts	/^    constructor(private readonly prompt: string) {}$/;"	m	class:PromptMixin
constructor	lib/shared/src/sourcegraph-api/completions/client.ts	/^    constructor($/;"	m	class:SourcegraphCompletionsClient
constructor	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    constructor($/;"	m	class:SourcegraphGraphQLAPIClient
constructor	lib/shared/src/telemetry/EventLogger.ts	/^    constructor($/;"	m	class:EventLogger
constructor	lib/shared/src/test/mocks.ts	/^    constructor(private mocks: Partial<Editor> = {}) {}$/;"	m	class:MockEditor
constructor	lib/shared/src/test/mocks.ts	/^    constructor(private mocks: Partial<EmbeddingsSearch> = {}) {}$/;"	m	class:MockEmbeddingsClient
constructor	lib/shared/src/test/mocks.ts	/^    constructor(private mocks: Partial<IntentDetector> = {}) {}$/;"	m	class:MockIntentDetector
constructor	lib/shared/src/test/mocks.ts	/^    constructor(private mocks: Partial<KeywordContextFetcher> = {}) {}$/;"	m	class:MockKeywordContextFetcher
constructor	lib/shared/src/test/mocks.ts	/^    constructor(private mocks: Partial<Pick<SourcegraphCompletionsClient, 'complete' | 'stream'>/;"	m	class:MockCompletionsClient
constructor	lib/shared/src/unified-context/client.ts	/^    constructor($/;"	m	class:UnifiedContextFetcherClient
constructor	node_modules/autopreview/Autopreview.js	/^  constructor(selector) {$/;"	m	class:AutoPreview
constructor	node_modules/autopreview/components/list/index.js	/^  constructor() {$/;"	m	class:AutoPreviewList
constructor	node_modules/autopreview/react.js	/^  constructor(options) {$/;"	m	class:AutoPreviewForReact
constructor	node_modules/autopreview/react18.js	/^  constructor(options) {$/;"	m	class:AutoPreviewForReact
constructor	node_modules/autopreview/vue2.js	/^  constructor(selector, options = {}) {$/;"	m	class:AutoPreviewForVue
constructor	node_modules/autopreview/vue3.js	/^  constructor(selector, beforeMount) {$/;"	m	class:AutoPreviewForVue
constructor	slack/src/services/openai-completions-client.ts	/^    constructor(protected apiKey: string) {$/;"	m	class:OpenAICompletionsClient
constructor	slack/src/slack/message-interaction.ts	/^    constructor($/;"	m	class:SlackInteraction
constructor	vscode/src/completions/providers/anthropic.ts	/^    constructor(options: ProviderOptions, anthropicOptions: AnthropicOptions) {$/;"	m	class:AnthropicProvider
constructor	vscode/src/completions/providers/provider.ts	/^    constructor(public readonly options: Readonly<ProviderOptions>) {}$/;"	m	class:Provider
constructor	vscode/src/completions/providers/unstable-codegen.ts	/^    constructor(options: ProviderOptions, unstableCodeGenOptions: UnstableCodeGenOptions) {$/;"	m	class:UnstableCodeGenProvider
constructor	vscode/src/completions/providers/unstable-huggingface.ts	/^    constructor(options: ProviderOptions, unstableHuggingFaceOptions: UnstableHuggingFaceOptions/;"	m	class:UnstableHuggingFaceProvider
constructor	vscode/src/completions/request-manager.ts	/^    constructor(private completionsCache: CompletionsCache | undefined) {}$/;"	m	class:RequestManager
constructor	vscode/src/editor/vscode-editor.ts	/^    constructor($/;"	m	class:VSCodeEditor
constructor	vscode/src/extension-api.ts	/^    constructor() {$/;"	m	class:ExtensionApi
constructor	vscode/src/local-context/filename-context-fetcher.ts	/^    constructor($/;"	m	class:FilenameContextFetcher
constructor	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    constructor($/;"	m	class:LocalKeywordContextFetcher
constructor	vscode/src/my-cody/CustomRecipesBuilder.ts	/^    constructor($/;"	m	class:CustomRecipesBuilder
constructor	vscode/src/my-cody/MyPromptController.ts	/^    constructor($/;"	m	class:MyPromptController
constructor	vscode/src/non-stop/FixupDocumentEditObserver.ts	/^    constructor(private readonly provider_: FixupFileCollection & FixupTextChanged) {}$/;"	m	class:FixupDocumentEditObserver
constructor	vscode/src/non-stop/FixupFile.ts	/^    constructor($/;"	m	class:FixupFile
constructor	vscode/src/non-stop/FixupScheduler.ts	/^    constructor(delayMsec: number) {$/;"	m	class:FixupScheduler
constructor	vscode/src/non-stop/FixupTask.ts	/^    constructor($/;"	m	class:FixupTask
constructor	vscode/src/non-stop/FixupTypingUI.ts	/^    constructor(private readonly taskFactory: FixupTaskFactory) {}$/;"	m	class:FixupTypingUI
constructor	vscode/src/services/DecorationProvider.ts	/^    constructor($/;"	m	class:DecorationProvider
constructor	vscode/src/services/GuardrailsProvider.ts	/^    constructor($/;"	m	class:GuardrailsProvider
constructor	vscode/src/services/LocalStorageProvider.ts	/^    constructor(private storage: Memento) {}$/;"	m	class:LocalStorage
constructor	vscode/src/services/SecretStorageProvider.ts	/^    constructor(private secretStorage: vscode.SecretStorage) {}$/;"	m	class:VSCodeSecretStorage
constructor	vscode/src/test-support.ts	/^    constructor() {$/;"	m	class:Rendezvous
constructor	vscode/src/testutils/mocks.ts	/^    constructor() {$/;"	m	class:CancellationTokenSource
constructor	vscode/src/testutils/mocks.ts	/^    constructor(line: number, character: number) {$/;"	m	class:Position
content	agent/src/jsonrpc.ts	/^        const content = Buffer.from(JSON.stringify(data), 'utf-8')$/;"	C	method:MessageEncoder.send
content	agent/src/protocol.ts	/^    content?: string$/;"	p	interface:TextDocument
content	lib/shared/src/chat/bot-response-multiplexer.ts	/^            const content = this.buffer_$/;"	C	method:BotResponseMultiplexer.notifyTurnComplete
content	lib/shared/src/chat/bot-response-multiplexer.ts	/^        const [content, remaining] = splitAt(this.buffer_, index)$/;"	C	method:BotResponseMultiplexer.publishBufferUpTo
content	lib/shared/src/chat/recipes/my-prompt.ts	/^            const content = await vscode.workspace.fs.readFile(fileUri)$/;"	C	method:MyPrompt.getFilePathContext
content	lib/shared/src/codebase-context/index.ts	/^                const { content, filePath, repoName, revision } = result$/;"	C	method:CodebaseContext.getUnifiedContextMessages
content	lib/shared/src/editor/index.ts	/^    content: string$/;"	p	interface:ActiveTextEditor
content	lib/shared/src/editor/index.ts	/^    content: string$/;"	p	interface:ActiveTextEditorVisibleContent
content	lib/shared/src/local-context/index.ts	/^    content: string$/;"	p	interface:ContextResult
content	lib/shared/src/plugins/built-in/confluence.ts	/^    content: {$/;"	p	interface:SearchResult
content	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    content: string$/;"	p	interface:EmbeddingsSearchResult
content	lib/shared/src/unified-context/index.ts	/^    content: string$/;"	p	interface:FileChunkContext
content	slack/src/services/github-client.ts	/^            const content = Buffer.from(response.data.content, 'base64').toString('utf8')$/;"	C	function:fetchFileContent
content	slack/src/services/local-vector-store.ts	/^    const { content, url } = codyNotice$/;"	C	function:getDocuments
content	vscode/src/completions/bestJaccardMatch.ts	/^    content: string$/;"	p	interface:JaccardMatch
content	vscode/src/completions/context.ts	/^    content: string$/;"	p	interface:ReferenceSnippet
content	vscode/src/completions/index.ts	/^    content: string$/;"	p	interface:Completion
content	vscode/src/editor/vscode-editor.ts	/^            content,$/;"	C	method:VSCodeEditor.getActiveTextEditorVisibleContent
content	vscode/src/editor/vscode-editor.ts	/^        const content = activeEditor.document.getText($/;"	C	method:VSCodeEditor.getActiveTextEditorVisibleContent
content	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                    const content = textDocument.getText(new vscode.Range(startLine, 0, endLine,/;"	C	method:LocalKeywordContextFetcher.getSearchContext
content	vscode/src/services/InlineAssist.test.ts	/^        const content = 'foo\\nbar\\nfoo\\nbar\\nfoo'$/;"	C
content	vscode/src/services/InlineAssist.test.ts	/^        const content = 'foo\\nfoo\\nfoo'$/;"	C
contentBuffer	agent/src/jsonrpc.ts	/^    private contentBuffer: Buffer = Buffer.alloc(0)$/;"	p	class:MessageDecoder
contentLengthRemaining	agent/src/jsonrpc.ts	/^    private contentLengthRemaining: number | null = null$/;"	p	class:MessageDecoder
contents	vscode/package.json	/^        "contents": "No pending Cody fixups",$/;"	s	object:contributes.viewsWelcome.0
contents	vscode/src/completions/context-local.ts	/^    contents: string$/;"	p	interface:FileContents
contents	vscode/src/completions/context-local.ts	/^    for (const { uri, contents } of files) {$/;"	C	function:getContextFromCurrentEditor
context	.vscode/cody.json	/^      "context": {$/;"	o	object:recipes.Commit Message for Current Changes
context	.vscode/cody.json	/^      "context": {$/;"	o	object:recipes.Compare Files in Opened Tabs
context	.vscode/cody.json	/^      "context": {$/;"	o	object:recipes.Debug last error from Cody app
context	.vscode/cody.json	/^      "context": {$/;"	o	object:recipes.Generate Multiple Unit Tests
context	.vscode/cody.json	/^      "context": {$/;"	o	object:recipes.Generate README.md for Current Directory
context	.vscode/cody.json	/^      "context": {$/;"	o	object:recipes.Refactor Code
context	cli/src/program.ts	/^    context: ConfigurationUseContext$/;"	p	interface:GlobalOptions
context	lib/shared/src/chat/recipes/my-prompt.ts	/^            const context = JSON.stringify({ scripts, devDependencies })$/;"	C	method:MyPrompt.getPackageJsonContext
context	lib/shared/src/chat/transcript/interaction.ts	/^    context?: ContextMessage[]$/;"	p	interface:InteractionJSON
context	lib/shared/src/prompt/templates.ts	/^    const context = isMarkdownFile(filePath)$/;"	C	function:populateCurrentEditorContextTemplate
context	lib/shared/src/prompt/templates.ts	/^    const context = isMarkdownFile(filePath)$/;"	C	function:populateCurrentEditorSelectedContextTemplate
context	vscode/resources/samples/user-cody.json	/^      "context": {$/;"	o	object:recipes.Compare Files in Opened Tabs
context	vscode/resources/samples/user-cody.json	/^      "context": {$/;"	o	object:recipes.Generate Multiple Unit Tests
context	vscode/resources/samples/user-cody.json	/^      "context": {$/;"	o	object:recipes.Refactor Code
context	vscode/resources/samples/workspace-cody.json	/^      "context": {$/;"	o	object:recipes.Commit Message for Current Changes
context	vscode/resources/samples/workspace-cody.json	/^      "context": {$/;"	o	object:recipes.Generate README.md for Current Directory
context	vscode/src/completions/context.ts	/^    const context: ReferenceSnippet[] = []$/;"	C	function:getContext
context	vscode/src/completions/context.ts	/^    context: ReferenceSnippet[]$/;"	p	interface:GetContextResult
context	vscode/src/completions/index.ts	/^        const { context: similarCode, logSummary: contextSummary } = await getContext({$/;"	C
context	vscode/src/my-cody/InputMenu.ts	/^        for (const context of promptContext) {$/;"	C
context	vscode/src/my-cody/MyPromptController.ts	/^        private context: vscode.ExtensionContext,$/;"	p	class:MyPromptController
context	vscode/src/my-cody/types.ts	/^    context?: CodyPromptContext$/;"	p	interface:CodyPrompt
context	vscode/src/services/CodeLensProvider.ts	/^        const context = this.contextStore.get(id)$/;"	C
contextConfig	lib/shared/src/chat/recipes/my-prompt.ts	/^        const contextConfig = await editor.controllers?.prompt.get('context')$/;"	C	method:MyPrompt.getContextMessages
contextFile	lib/shared/src/chat/transcript/index.ts	/^            const contextFile = (msg as ContextMessage).file$/;"	C	method:Transcript.getPromptForLastInteraction
contextFiles	cli/src/client/completions.ts	/^    const { prompt: finalPrompt, contextFiles } = await transcript.getPromptForLastInteraction($/;"	C	function:getCompletionWithContext
contextFiles	lib/shared/src/chat/client.ts	/^        const { prompt, contextFiles } = await transcript.getPromptForLastInteraction(getPreambl/;"	C	function:createClient
contextFiles	lib/shared/src/chat/transcript/index.ts	/^        const contextFiles: ContextFile[] = []$/;"	C	method:Transcript.getPromptForLastInteraction
contextFiles	lib/shared/src/chat/transcript/messages.ts	/^    contextFiles?: ContextFile[]$/;"	p	interface:ChatMessage
contextFiles	lib/shared/src/chat/useClient.ts	/^            const { prompt, contextFiles } = await transcript.getPromptForLastInteraction($/;"	C
contextFiles	slack/src/mention-handler.ts	/^    const { contextFiles = [] } = lastInteraction.toChat().pop()!$/;"	C	function:startCompletionStreaming
contextFiles	slack/src/mention-handler.ts	/^    const { prompt, contextFiles } = await transcript.getPromptForLastInteraction(SLACK_PREAMBLE/;"	C	function:handleHumanMessage
contextFiles	vscode/src/chat/ChatViewProvider.ts	/^                const { prompt, contextFiles } = await this.transcript.getPromptForLastInteracti/;"	C
contextFiles	vscode/src/chat/ChatViewProvider.ts	/^        const { prompt, contextFiles } = await transcript.getPromptForLastInteraction($/;"	C
contextFilesList	slack/src/mention-handler.ts	/^    const contextFilesList = contextFiles$/;"	C	function:startCompletionStreaming
contextMessage	lib/shared/src/chat/recipes/my-prompt.ts	/^            const contextMessage = getContextMessageWithResponse($/;"	C	function:populateVscodeDirContextMessage
contextMessage	slack/src/slack/message-interaction.ts	/^            const contextMessage = getContextMessageWithResponse($/;"	C	method:SlackInteraction.updateContextMessagesFromVectorStore
contextMessageWithSource	lib/shared/src/codebase-context/index.ts	/^function contextMessageWithSource(message: ContextMessage, source: ContextFileSource): ContextMe/;"	f
contextMessages	cli/src/client/interactions.ts	/^        contextMessages.push(...codebaseContextMessages)$/;"	C	function:getContextMessages
contextMessages	cli/src/client/interactions.ts	/^    const contextMessages =$/;"	C	function:interactionFromMessage
contextMessages	cli/src/client/interactions.ts	/^    const contextMessages: ContextMessage[] = []$/;"	C	function:getContextMessages
contextMessages	lib/shared/src/chat/recipes/chat-question.ts	/^        const contextMessages: ContextMessage[] = []$/;"	C	method:ChatQuestion.getContextMessages
contextMessages	lib/shared/src/chat/recipes/fixup.ts	/^        const contextMessages: ContextMessage[] = await codebaseContext.getContextMessages(text,/;"	C	method:Fixup.getContextMessages
contextMessages	lib/shared/src/chat/recipes/inline-chat.ts	/^        const contextMessages: ContextMessage[] = []$/;"	C	method:InlineChat.getContextMessages
contextMessages	lib/shared/src/chat/recipes/inline-chat.ts	/^        contextMessages.push(...extraContext)$/;"	C	method:InlineChat.getContextMessages
contextMessages	lib/shared/src/chat/recipes/inline-touch.ts	/^        const contextMessages: ContextMessage[] = []$/;"	C
contextMessages	lib/shared/src/chat/recipes/my-prompt.ts	/^        const contextMessages: ContextMessage[] = []$/;"	C	method:MyPrompt.getContextMessages
contextMessages	lib/shared/src/chat/recipes/my-prompt.ts	/^        const contextMessages: ContextMessage[] = []$/;"	C	method:MyPrompt.getEditorOpenTabsContext
contextMessages	lib/shared/src/chat/recipes/my-prompt.ts	/^    const contextMessages: ContextMessage[] = []$/;"	C	function:populateVscodeDirContextMessage
contextMessages	lib/shared/src/chat/recipes/next-questions.ts	/^        const contextMessages: ContextMessage[] = []$/;"	C	method:NextQuestions.getContextMessages
contextMessages	lib/shared/src/chat/recipes/non-stop.ts	/^        const contextMessages: ContextMessage[] = await codebaseContext.getContextMessages(text,/;"	C	method:NonStop.getContextMessages
contextMessages	lib/shared/src/chat/transcript/index.ts	/^            const contextMessages = await interaction.getFullContext()$/;"	C	method:Transcript.getPromptForLastInteraction
contextMessages	lib/shared/src/chat/transcript/interaction.ts	/^        const contextMessages = await this.fullContext$/;"	C	method:Interaction.hasContext
contextMessages	slack/src/slack/message-interaction.ts	/^            const contextMessages = await codebaseContexts[codebase].getContextMessages($/;"	C	method:SlackInteraction.updateContextMessages
contextMessages	slack/src/slack/message-interaction.ts	/^    public contextMessages: ContextMessage[] = []$/;"	p	class:SlackInteraction
contextTemplateFn	lib/shared/src/codebase-context/index.ts	/^        const contextTemplateFn = isMarkdownFile(groupedResults.file.fileName)$/;"	C	method:CodebaseContext.makeContextMessageWithResponse
contextTypes	vscode/src/my-cody/InputMenu.ts	/^export const contextTypes = [$/;"	C
contextWindowChars	vscode/src/completions/providers/unstable-codegen.ts	/^    const contextWindowChars = 8_000 \/\/ ~ 2k token limit$/;"	C	function:createProviderConfig
contextWindowChars	vscode/src/completions/providers/unstable-huggingface.ts	/^    const contextWindowChars = 8_000 \/\/ ~ 2k token limit$/;"	C	function:createProviderConfig
contextWindowTokens	vscode/src/completions/providers/anthropic.ts	/^    contextWindowTokens: number$/;"	p	interface:AnthropicOptions
contextualTitle	vscode/package.json	/^          "contextualTitle": "Fixups"$/;"	s	object:contributes.views.cody.1
contributes	vscode/package.json	/^  "contributes": {$/;"	o
controllers	lib/shared/src/chat/recipes/non-stop.ts	/^        const controllers = context.editor.controllers$/;"	C	method:NonStop.getInteraction
controllers	lib/shared/src/editor/index.ts	/^    controllers?: ActiveTextEditorViewControllers$/;"	p	interface:Editor
controllers	vscode/src/editor/vscode-editor.ts	/^        public controllers: {$/;"	p	class:VSCodeEditor
controllers	vscode/src/main.ts	/^    const controllers = { inline: commentController, fixups: fixup, prompt }$/;"	C
convertGitCloneURLToCodebaseName	vscode/src/chat/utils.ts	/^export function convertGitCloneURLToCodebaseName(cloneURL: string): string | null {$/;"	f
cosine	vscode/src/local-context/local-keyword-context-fetcher.ts	/^function cosine(v1: number[], v2: number[]): number {$/;"	f
cosineScore	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                const cosineScore = cosine(tfidfVec, queryVec)$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
cost	vscode/src/non-stop/diff.ts	/^            const cost = Math.min(costDeleteA, costInsertB, costSkipReplace)$/;"	C	function:longestCommonSubsequence
costDeleteA	vscode/src/non-stop/diff.ts	/^            const costDeleteA = program[iB * (lenA + 1) + iA - 1] + 1$/;"	C	function:longestCommonSubsequence
costInsertB	vscode/src/non-stop/diff.ts	/^            const costInsertB = program[(iB - 1) * (lenA + 1) + iA] + 1$/;"	C	function:longestCommonSubsequence
costSkipReplace	vscode/src/non-stop/diff.ts	/^            const costSkipReplace = program[(iB - 1) * (lenA + 1) + iA - 1] + (chA === chB ? 0 :/;"	C	function:longestCommonSubsequence
count	lib/shared/src/guardrails/index.ts	/^    const count = repos.length$/;"	C	function:summariseAttribution
count	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                            const count = parseInt(terms[1], 10)$/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
count	vscode/src/local-context/local-keyword-context-fetcher.ts	/^            for (const [filename, count] of Object.entries(fileCounts)) {$/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
count	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    count: number$/;"	p	interface:Term
create	vscode/src/completions/providers/provider.ts	/^    create(options: ProviderOptions): Provider$/;"	m	interface:ProviderConfig
createActiveTextEditorSelection	vscode/src/editor/vscode-editor.ts	/^    private createActiveTextEditorSelection($/;"	m	class:VSCodeEditor
createAppContext	slack/src/app.ts	/^async function createAppContext() {$/;"	f
createClient	lib/shared/src/chat/client.ts	/^export async function createClient({$/;"	f
createCodebaseContext	cli/src/client/context.ts	/^export async function createCodebaseContext($/;"	f
createCodebaseContext	slack/src/services/codebase-context.ts	/^export async function createCodebaseContext($/;"	f
createCompletionProviderConfig	vscode/src/main.ts	/^function createCompletionProviderConfig($/;"	f
createCompletionResponse	vscode/src/completions/completion.test.ts	/^function createCompletionResponse(completion: string): CompletionResponse {$/;"	f
createCompletionsClient	lib/shared/src/chat/client.ts	/^    createCompletionsClient?: (config: CompletionsClientConfig) => SourcegraphCompletionsClient$/;"	p	interface:ClientInit
createCompletionsProvider	vscode/src/main.ts	/^function createCompletionsProvider($/;"	f
createFileWatch	vscode/src/my-cody/helper.ts	/^export function createFileWatch(fsPath?: string): vscode.FileSystemWatcher | null {$/;"	f
createGitHelpers	cli/src/gitHelpers/index.ts	/^export function createGitHelpers(): GitHelpers {$/;"	f
createId	vscode/src/completions/logger.ts	/^function createId(): string {$/;"	f
createJSONFile	vscode/src/my-cody/helper.ts	/^export async function createJSONFile(extensionPath: string, rootDirPath: string, isUserType: boo/;"	f
createNewPrompt	vscode/src/my-cody/InputMenu.ts	/^export async function createNewPrompt(promptName?: string): Promise<CodyPrompt | null> {$/;"	f
createOrUpdateEventLogger	vscode/src/services/EventLogger.ts	/^export async function createOrUpdateEventLogger($/;"	f
createPrompt	vscode/src/completions/providers/anthropic.ts	/^    protected createPrompt(snippets: ReferenceSnippet[]): { messages: Message[]; prefix: PrefixC/;"	m	class:AnthropicProvider
createPromptPrefix	vscode/src/completions/providers/anthropic.ts	/^    private createPromptPrefix(): { messages: Message[]; prefix: PrefixComponents } {$/;"	m	class:AnthropicProvider
createProvider	vscode/src/completions/request-manager.test.ts	/^function createProvider(prefix: string) {$/;"	f
createProviderConfig	vscode/src/completions/providers/anthropic.ts	/^export function createProviderConfig(anthropicOptions: AnthropicOptions): ProviderConfig {$/;"	f
createProviderConfig	vscode/src/completions/providers/unstable-codegen.ts	/^export function createProviderConfig(unstableCodeGenOptions: UnstableCodeGenOptions): ProviderCo/;"	f
createProviderConfig	vscode/src/completions/providers/unstable-huggingface.ts	/^export function createProviderConfig(unstableHuggingFaceOptions: UnstableHuggingFaceOptions): Pr/;"	f
createRequest	vscode/src/completions/request-manager.test.ts	/^    let createRequest: (prefix: string, provider: Provider) => Promise<Completion[]>$/;"	v
createStatusBar	vscode/src/services/StatusBar.ts	/^export function createStatusBar(): CodyStatusBar {$/;"	f
createTarget	node_modules/autopreview/Autopreview.js	/^  createTarget() {$/;"	m	class:AutoPreview
createTask	vscode/src/non-stop/roles.ts	/^    createTask(documentUri: vscode.Uri, instruction: string, selectionRange: vscode.Range): void$/;"	m	interface:FixupTaskFactory
createTypewriter	lib/shared/src/chat/typewriter.ts	/^export const createTypewriter = ({ emit }: CreateTypewriterParams): Typewriter => {$/;"	C
created_at	lib/shared/src/plugins/built-in/github-issues.ts	/^    created_at: string$/;"	p	interface:Item
cross-env	completions-review-tool/package.json	/^    "cross-env": "^7.0.3",$/;"	s	object:devDependencies
cssModule	completions-review-tool/globals.d.ts	/^    const cssModule: string$/;"	C
ct	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const ct = termCounts[term] || 0$/;"	C
ctx	vscode/scripts/bundle.ts	/^    const ctx = await esbuild.context({$/;"	C
cur	vscode/src/services/InlineAssist.test.ts	/^        const cur = new vscode.Range(1, 0, 3, 0)$/;"	C
cur	vscode/src/services/InlineAssist.test.ts	/^        const cur = new vscode.Range(1, 6, 5, 9)$/;"	C
cur	vscode/src/services/InlineAssist.test.ts	/^        const cur = new vscode.Range(5, 0, 10, 0)$/;"	C
cur	vscode/src/services/InlineAssist.test.ts	/^        const cur = new vscode.Range(5, 6, 8, 9)$/;"	C
cur	vscode/src/services/InlineAssist.test.ts	/^        const cur = new vscode.Range(7, 0, 10, 0)$/;"	C
curLang	vscode/src/completions/context-local.ts	/^    const curLang = currentDocument.languageId$/;"	C	function:getRelevantFiles
current	vscode/src/services/InlineAssist.ts	/^    const newStartLine = change.start.line > current.start.line ? current.start.line : current.s/;"	C	function:updateRangeOnDocChange
currentDir	.vscode/cody.json	/^        "currentDir": true,$/;"	b	object:recipes.Generate Multiple Unit Tests.context
currentDir	.vscode/cody.json	/^        "currentDir": true,$/;"	b	object:recipes.Generate README.md for Current Directory.context
currentDir	lib/shared/src/chat/recipes/inline-touch.ts	/^        const currentDir = currentFilePath.replace(\/\\\/[^\/]+$\/, '')$/;"	C
currentDir	lib/shared/src/chat/recipes/my-prompt.ts	/^    currentDir?: boolean$/;"	p	interface:CodyPromptContext
currentDir	vscode/resources/samples/user-cody.json	/^        "currentDir": true,$/;"	b	object:recipes.Generate Multiple Unit Tests.context
currentDir	vscode/resources/samples/workspace-cody.json	/^        "currentDir": true,$/;"	b	object:recipes.Generate README.md for Current Directory.context
currentDirContext	lib/shared/src/chat/recipes/inline-touch.ts	/^        const currentDirContext = await MyPrompt.getEditorDirContext(currentDir, selection.fileN/;"	C
currentDirContext	lib/shared/src/chat/recipes/my-prompt.ts	/^            const currentDirContext = await MyPrompt.getCurrentDirContext(isTestRequest)$/;"	C	method:MyPrompt.getContextMessages
currentDirPath	lib/shared/src/chat/recipes/my-prompt.ts	/^        const currentDirPath = getCurrentDirPath(currentFileName)$/;"	C	method:MyPrompt.getCurrentDirContext
currentFile	.vscode/cody.json	/^        "currentFile": true$/;"	b	object:recipes.Generate Multiple Unit Tests.context
currentFile	.vscode/cody.json	/^        "currentFile": true$/;"	b	object:recipes.Refactor Code.context
currentFile	lib/shared/src/chat/recipes/my-prompt.ts	/^    currentFile?: boolean$/;"	p	interface:CodyPromptContext
currentFile	vscode/resources/samples/user-cody.json	/^        "currentFile": true$/;"	b	object:recipes.Generate Multiple Unit Tests.context
currentFile	vscode/resources/samples/user-cody.json	/^        "currentFile": true$/;"	b	object:recipes.Refactor Code.context
currentFileName	lib/shared/src/chat/recipes/my-prompt.ts	/^        const currentFileName = vscode.window.activeTextEditor?.document?.fileName$/;"	C	method:MyPrompt.getCurrentDirContext
currentFilePath	lib/shared/src/chat/recipes/inline-touch.ts	/^        const currentFilePath = `${this.workspacePath.fsPath}\/${selection.fileName}`$/;"	C
currentFilePath	lib/shared/src/chat/recipes/my-prompt.ts	/^        const currentFilePath = filePath || vscode.window.activeTextEditor?.document.uri.fsPath$/;"	C	method:MyPrompt.getPackageJsonContext
currentFilePath	vscode/src/completions/context-embeddings.ts	/^    const currentFilePath = path.normalize(document.fileName)$/;"	C
currentFilePath	vscode/src/completions/context-embeddings.ts	/^    const { currentFilePath, text, codebaseContext } = options$/;"	C	function:fetchAndSaveEmbeddings
currentFilePath	vscode/src/completions/context-embeddings.ts	/^    currentFilePath: string$/;"	p	interface:FetchEmbeddingsOptions
currentFilePath	vscode/src/my-cody/MyToolsProvider.ts	/^const currentFilePath = vscode.window.activeTextEditor?.document.uri.fsPath$/;"	C
currentLineText	vscode/src/completions/index.ts	/^            const currentLineText = document.lineAt(position)$/;"	C	function:toInlineCompletionItems
currentOffSet	vscode/test/completions/vscode-text-document.ts	/^        let currentOffSet = 0$/;"	v
currentTaskId	vscode/src/services/InlineController.ts	/^    private currentTaskId = ''$/;"	p	class:InlineController
currentTime	vscode/src/main.ts	/^            const currentTime: number = Date.now()$/;"	C
currentTopic	lib/shared/src/chat/bot-response-multiplexer.ts	/^    private get currentTopic(): string {$/;"	m	class:BotResponseMultiplexer
currentUser	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    currentUser: { id: string } | null$/;"	p	interface:CurrentUserIdResponse
currentUser	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    currentUser: { id: string; hasVerifiedEmail: boolean } | null$/;"	p	interface:CurrentUserIdHasVerifiedEmailResponse
currentUserID	vscode/src/services/AuthProvider.ts	/^            const currentUserID = await this.client.getCurrentUserId()$/;"	C
current_file_path	vscode/src/completions/providers/unstable-codegen.ts	/^    current_file_path: string$/;"	p	interface:Context
cursorAtWord	vscode/src/completions/index.ts	/^        const cursorAtWord = \/\\w$\/.test(sameLinePrefix)$/;"	C
cursorIndex	vscode/src/completions/completion.test.ts	/^            const cursorIndex = code.indexOf(CURSOR_MARKER)$/;"	C
custom-property-pattern	.stylelintrc.json	/^    "custom-property-pattern": null,$/;"	z	object:rules
customHeaders	agent/src/protocol.ts	/^    customHeaders: Record<string, string>$/;"	p	interface:ConnectionConfiguration
customHeaders	lib/shared/src/configuration.ts	/^    customHeaders: Record<string, string>$/;"	p	interface:Configuration
customHeaders	vscode/src/services/AuthProvider.ts	/^            customHeaders: customHeaders || this.config.customHeaders,$/;"	C
customMixin	lib/shared/src/prompt/prompt-mixin.ts	/^    private static customMixin: PromptMixin[] = []$/;"	p	class:PromptMixin
cwd	.vscode/tasks.json	/^      "options": { "cwd": "vscode" },$/;"	s	object:tasks.1.options
cwd	cli/src/commands/commit/command.ts	/^    cwd: string$/;"	p	interface:CommitEnvironment
dark	vscode/package.json	/^          "dark": "#00000000"$/;"	s	object:contributes.colors.2.defaults
dark	vscode/package.json	/^          "dark": "#436EB1"$/;"	s	object:contributes.colors.5.defaults
dark	vscode/package.json	/^          "dark": "merge.incomingContentBackground"$/;"	s	object:contributes.colors.4.defaults
dark	vscode/package.json	/^          "dark": "mergeEditor.conflict.unhandledFocused.border"$/;"	s	object:contributes.colors.1.defaults
dark	vscode/package.json	/^          "dark": "mergeEditor.conflict.unhandledUnfocused.border"$/;"	s	object:contributes.colors.3.defaults
dark	vscode/package.json	/^          "dark": "mergeEditor.conflictingLines.background"$/;"	s	object:contributes.colors.0.defaults
data	agent/src/jsonrpc.ts	/^                        const data = JSON.parse(this.contentBuffer.toString())$/;"	C	method:MessageDecoder._write
data	agent/src/jsonrpc.ts	/^                const data = this.buffer.slice(0, this.contentLengthRemaining)$/;"	C	method:MessageDecoder._write
data	agent/src/jsonrpc.ts	/^        const data: NotificationMessage<M> = {$/;"	C	method:MessageHandler.notify
data	agent/src/jsonrpc.ts	/^        const data: RequestMessage<M> = {$/;"	C	method:MessageHandler.request
data	agent/src/jsonrpc.ts	/^    data: T$/;"	p	interface:ErrorInfo
data	completions-review-tool/src/models/completions.server.ts	/^const data: CompletionData[] = []$/;"	C
data	lib/shared/src/sourcegraph-api/completions/browserClient.ts	/^                const data: Event = { ...JSON.parse(message.data), type: message.event }$/;"	C	method:SourcegraphBrowserCompletionsClient.stream
data	lib/shared/src/sourcegraph-api/completions/parse.ts	/^            const data = parseJSON<{ completion: string; stopReason: string }>(jsonData)$/;"	C	function:parseEventData
data	lib/shared/src/sourcegraph-api/completions/parse.ts	/^            const data = parseJSON<{ error: string }>(jsonData)$/;"	C	function:parseEventData
data	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    data?: T$/;"	p	interface:APIResponse
data	node_modules/autopreview/Autopreview.js	/^      window.parent.postMessage({ command: 'ERROR', data: `Root element with selector ${selector/;"	p	variable:anonymousObject8c7ec3e20105
data	slack/src/services/openai-completions-client.ts	/^                            const data = payload.replaceAll(\/(\\n)?^data:\\s*\/g, '') \/\/ in c/;"	C	method:OpenAICompletionsClient.stream
data	vscode/src/completions/providers/unstable-codegen.ts	/^            const data = (await response.json()) as { completions: { completion: string }[] }$/;"	C	method:UnstableCodeGenProvider.generateCompletions
data	vscode/src/completions/providers/unstable-huggingface.ts	/^            const data = (await response.json()) as { generated_text: string }[] | { error: stri/;"	C	method:UnstableHuggingFaceProvider.generateCompletions
data	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        data: {$/;"	C
data	vscode/src/services/LocalAppDetector.ts	/^        const data = await vscode.workspace.fs.readFile(uri)$/;"	C	function:loadAppJson
data-autopreview	node_modules/autopreview/css/index.css	/^[data-autopreview].align-center > [data-autopreview-wrapper] {$/;"	s
data-autopreview	node_modules/autopreview/css/index.css	/^[data-autopreview].align-center {$/;"	s
data-autopreview	node_modules/autopreview/css/index.css	/^[data-autopreview].align-left-top > [data-autopreview-wrapper] {$/;"	s
data-autopreview	node_modules/autopreview/css/index.css	/^[data-autopreview].align-left-top {$/;"	s
data-autopreview	node_modules/autopreview/css/index.css	/^[data-autopreview].align-left-top,$/;"	s
data-autopreview-wrapper	node_modules/autopreview/css/index.css	/^[data-autopreview-wrapper] {$/;"	s
data-autopreview-wrapper	node_modules/autopreview/css/index.css	/^[data-autopreview-wrapper]::-webkit-scrollbar {$/;"	s
dataDir	completions-review-tool/src/models/completions.server.ts	/^const dataDir = path.join(__dirname, '..\/', 'data')$/;"	C
dataLine	lib/shared/src/sourcegraph-api/completions/parse.ts	/^    const [eventLine, dataLine] = eventBuffer.split('\\n')$/;"	C	function:parseEvent
dataSources	lib/shared/src/plugins/api/types.ts	/^    dataSources: PluginFunction[]$/;"	p	interface:Plugin
date-fns	vscode/package.json	/^    "date-fns": "^2.30.0",$/;"	s	object:dependencies
deadlineMsec	vscode/src/non-stop/FixupController.ts	/^        const deadlineMsec = Date.now() + 500$/;"	C
debug	cli/src/program.ts	/^    debug: boolean$/;"	p	interface:GlobalOptions
debug	lib/shared/src/chat/recipes/chat-question.ts	/^    constructor(private debug: (filterLabel: string, text: string, ...args: unknown[]) => void) /;"	p	class:ChatQuestion
debug	lib/shared/src/chat/recipes/inline-chat.ts	/^    constructor(private debug: (filterLabel: string, text: string, ...args: unknown[]) => void) /;"	p	class:InlineChat
debug	vscode/src/log.ts	/^export function debug(filterLabel: string, text: string, ...args: unknown[]): void {$/;"	f
debug	vscode/src/services/EventLogger.ts	/^        debug('EventLogger', eventName, JSON.stringify(argument, null, 2))$/;"	C	function:logEvent
debugEditorSelection	vscode/src/services/GuardrailsProvider.ts	/^    public async debugEditorSelection(): Promise<void> {$/;"	m	class:GuardrailsProvider
debugEnable	lib/shared/src/configuration.ts	/^    debugEnable: boolean$/;"	p	interface:Configuration
debugEnable	vscode/src/chat/ChatViewProvider.ts	/^                debugEnable: this.config.debugEnable,$/;"	C
debugFilter	lib/shared/src/configuration.ts	/^    debugFilter: RegExp | null$/;"	p	interface:Configuration
debugLog	cli/src/log.ts	/^export function debugLog(debug: boolean, title: string, text: string): void {$/;"	f
debugPattern	vscode/src/configuration.ts	/^        const debugPattern: string | null = config.get<string | null>(CONFIG_KEY.debugFilter, nu/;"	C	function:getConfiguration
debugVerbose	lib/shared/src/configuration.ts	/^    debugVerbose: boolean$/;"	p	interface:Configuration
declaration	tsconfig.base.json	/^    "declaration": true,$/;"	b	object:compilerOptions
declaration-block-no-duplicate-properties	.stylelintrc.json	/^    "declaration-block-no-duplicate-properties": [$/;"	a	object:rules
declarationMap	tsconfig.base.json	/^    "declarationMap": true,$/;"	b	object:compilerOptions
decoded	vscode/src/chat/ChatViewProvider.ts	/^        const decoded = new TextDecoder('utf-8').decode(bytes)$/;"	C
decoded	vscode/src/my-cody/CustomRecipesBuilder.ts	/^            const decoded = new TextDecoder('utf-8').decode(bytes) || null$/;"	C	method:CustomRecipesBuilder.getPromptsFromFileSystem
decoded	vscode/src/my-cody/helper.ts	/^    const decoded = new TextDecoder('utf-8').decode(bytes)$/;"	C	function:createJSONFile
decorate	vscode/src/services/DecorationProvider.ts	/^    public decorate(): void {$/;"	m	class:DecorationProvider
decoration	vscode/src/non-stop/FixupDecorator.ts	/^        for (const decoration of decorations) {$/;"	C
decorationClassName	vscode/test/e2e/fixup-decorator.test.ts	/^    const decorationClassName = (await decorations.first().getAttribute('class'))$/;"	C
decorationTypeDiff	vscode/src/services/DecorationProvider.ts	/^    private decorationTypeDiff = this.makeDecorationType('diff')$/;"	p	class:DecorationProvider
decorationTypeError	vscode/src/services/DecorationProvider.ts	/^    private decorationTypeError = this.makeDecorationType('error')$/;"	p	class:DecorationProvider
decorationTypeIcon	vscode/src/services/DecorationProvider.ts	/^    private decorationTypeIcon = initDecorationType$/;"	p	class:DecorationProvider
decorationTypePending	vscode/src/services/DecorationProvider.ts	/^    private decorationTypePending = this.makeDecorationType('pending')$/;"	p	class:DecorationProvider
decorations	vscode/src/non-stop/FixupDecorator.ts	/^        const decorations = makeDecorations(diff)$/;"	C
decorations	vscode/src/services/DecorationProvider.ts	/^    private decorations: vscode.DecorationOptions[] = []$/;"	p	class:DecorationProvider
decorations	vscode/test/e2e/fixup-decorator.test.ts	/^    const decorations = page.locator(DECORATION_SELECTOR)$/;"	C
decorationsForIcon	vscode/src/services/DecorationProvider.ts	/^    private decorationsForIcon: vscode.DecorationOptions[] = []$/;"	p	class:DecorationProvider
dedent	vscode/package.json	/^    "dedent": "^0.7.0",$/;"	s	object:devDependencies
deeperConspiracyTopic	lib/shared/src/chat/bot-response-multiplexer.test.ts	/^        const deeperConspiracyTopic: string[] = []$/;"	C
default	lib/ui/.storybook/main.ts	/^export default config$/;"	C
default	vscode/.storybook/main.ts	/^export default config$/;"	C
default	vscode/package.json	/^                  "default": "https:\/\/api.github.com\/"$/;"	s	object:contributes.configuration.properties.cody.plugins.config.properties.github.properties.baseUrl
default	vscode/package.json	/^          "default": "anthropic",$/;"	s	object:contributes.configuration.properties.cody.autocomplete.advanced.provider
default	vscode/package.json	/^          "default": "anthropic",$/;"	s	object:contributes.configuration.properties.cody.completions.advanced.provider
default	vscode/package.json	/^          "default": "embeddings",$/;"	s	object:contributes.configuration.properties.cody.useContext
default	vscode/package.json	/^          "default": false$/;"	b	object:contributes.configuration.properties.cody.experimental.customRecipes
default	vscode/package.json	/^          "default": false$/;"	b	object:contributes.configuration.properties.cody.experimental.guardrails
default	vscode/package.json	/^          "default": false,$/;"	b	object:contributes.configuration.properties.cody.autocomplete.experimental.completeSuggestWidgetSelection
default	vscode/package.json	/^          "default": false,$/;"	b	object:contributes.configuration.properties.cody.autocomplete.experimental.triggerMoreEagerly
default	vscode/package.json	/^          "default": false,$/;"	b	object:contributes.configuration.properties.cody.experimental.chatPredictions
default	vscode/package.json	/^          "default": false,$/;"	b	object:contributes.configuration.properties.cody.experimental.suggestions
default	vscode/package.json	/^          "default": false,$/;"	b	object:contributes.configuration.properties.cody.plugins.enabled
default	vscode/package.json	/^          "default": true$/;"	b	object:contributes.configuration.properties.cody.autocomplete.enabled
default	vscode/package.json	/^          "default": true$/;"	b	object:contributes.configuration.properties.cody.inlineChat.enabled
default	vscode/package.json	/^          "default": true,$/;"	b	object:contributes.configuration.properties.cody.autocomplete.advanced.cache
default	vscode/package.json	/^          "default": true,$/;"	b	object:contributes.configuration.properties.cody.autocomplete.advanced.embeddings
default	vscode/package.json	/^          "default": true,$/;"	b	object:contributes.configuration.properties.cody.completions.advanced.cache
default	vscode/package.json	/^          "default": true,$/;"	b	object:contributes.configuration.properties.cody.completions.advanced.embeddings
default	vscode/package.json	/^          "default": true,$/;"	b	object:contributes.configuration.properties.cody.plugins.debug.enabled
default	vscode/package.json	/^          "default": {},$/;"	o	object:contributes.configuration.properties.cody.customHeaders
default	vscode/package.json	/^          "default": {},$/;"	o	object:contributes.configuration.properties.cody.plugins.config
default	vscode/package.json	/^        "default": {$/;"	o	object:contributes.icons.cody-logo
default	vscode/package.json	/^        "default": {$/;"	o	object:contributes.icons.cody-logo-heavy
defaultAuthStatus	vscode/src/chat/protocol.ts	/^export const defaultAuthStatus = {$/;"	C
defaultBaseURL	lib/shared/src/plugins/built-in/github-issues.ts	/^                const baseUrl = api.config?.github?.baseURL ?? defaultBaseURL$/;"	C
defaultBaseURL	lib/shared/src/plugins/built-in/github-issues.ts	/^const defaultBaseURL = 'https:\/\/api.github.com\/'$/;"	C
defaultCodyPromptContext	lib/shared/src/chat/recipes/my-prompt.ts	/^export const defaultCodyPromptContext: CodyPromptContext = {$/;"	C
defaultEditor	lib/shared/src/test/mocks.ts	/^export const defaultEditor = new MockEditor()$/;"	C
defaultEmbeddingsClient	lib/shared/src/test/mocks.ts	/^export const defaultEmbeddingsClient = new MockEmbeddingsClient()$/;"	C
defaultIntentDetector	lib/shared/src/test/mocks.ts	/^export const defaultIntentDetector = new MockIntentDetector()$/;"	C
defaultKeywordContextFetcher	lib/shared/src/test/mocks.ts	/^export const defaultKeywordContextFetcher = new MockKeywordContextFetcher()$/;"	C
defaultOrg	lib/shared/src/plugins/built-in/github-issues.ts	/^const defaultOrg = 'sourcegraph'$/;"	C
defaultPlugins	lib/shared/src/plugins/built-in/index.ts	/^export const defaultPlugins: Plugin[] = [$/;"	C
defaultSeverity	.stylelintrc.json	/^  "defaultSeverity": "warning"$/;"	s
defaultTopic	lib/shared/src/chat/bot-response-multiplexer.test.ts	/^        const defaultTopic: string[] = []$/;"	C
defaults	vscode/package.json	/^        "defaults": {$/;"	o	object:contributes.colors.0
defaults	vscode/package.json	/^        "defaults": {$/;"	o	object:contributes.colors.1
defaults	vscode/package.json	/^        "defaults": {$/;"	o	object:contributes.colors.2
defaults	vscode/package.json	/^        "defaults": {$/;"	o	object:contributes.colors.3
defaults	vscode/package.json	/^        "defaults": {$/;"	o	object:contributes.colors.4
defaults	vscode/package.json	/^        "defaults": {$/;"	o	object:contributes.colors.5
delete	vscode/src/services/SecretStorageProvider.ts	/^    delete(key: string): Promise<void>$/;"	m	interface:SecretStorage
delete	vscode/src/services/SecretStorageProvider.ts	/^    public async delete(key: string): Promise<void> {$/;"	m	class:InMemorySecretStorage
delete	vscode/src/services/SecretStorageProvider.ts	/^    public async delete(key: string): Promise<void> {$/;"	m	class:VSCodeSecretStorage
deleteChatHistory	vscode/src/services/LocalStorageProvider.ts	/^    public async deleteChatHistory(chatID: string): Promise<void> {$/;"	m	class:LocalStorage
deleteEndpoint	vscode/src/services/LocalStorageProvider.ts	/^    public async deleteEndpoint(): Promise<void> {$/;"	m	class:LocalStorage
deleteEndpointHistory	vscode/src/services/LocalStorageProvider.ts	/^    public async deleteEndpointHistory(): Promise<void> {$/;"	m	class:LocalStorage
deleteFile	vscode/src/my-cody/helper.ts	/^export async function deleteFile(uri?: vscode.Uri): Promise<void> {$/;"	f
deleteToken	vscode/src/services/SecretStorageProvider.ts	/^    deleteToken(endpoint: string): Promise<void>$/;"	m	interface:SecretStorage
deleteToken	vscode/src/services/SecretStorageProvider.ts	/^    public async deleteToken(endpoint: string): Promise<void> {$/;"	m	class:InMemorySecretStorage
deleteToken	vscode/src/services/SecretStorageProvider.ts	/^    public async deleteToken(endpoint: string): Promise<void> {$/;"	m	class:VSCodeSecretStorage
deleted_	vscode/src/non-stop/FixupFile.ts	/^    public deleted_ = false$/;"	p	class:FixupFile
delta	slack/src/services/openai-completions-client.ts	/^                                const delta = JSON.parse(data.trim())$/;"	C	method:OpenAICompletionsClient.stream
dependencies	agent/package.json	/^  "dependencies": {$/;"	o
dependencies	cli/package.json	/^  "dependencies": {$/;"	o
dependencies	completions-review-tool/package.json	/^  "dependencies": {$/;"	o
dependencies	lib/icons/package.json	/^  "dependencies": {$/;"	o
dependencies	lib/shared/package.json	/^  "dependencies": {$/;"	o
dependencies	lib/ui/package.json	/^  "dependencies": {$/;"	o
dependencies	package.json	/^        "dependencies": {$/;"	o	object:pnpm.packageExtensions.@vscode/webview-ui-toolkit
dependencies	package.json	/^  "dependencies": {$/;"	o
dependencies	slack/package.json	/^  "dependencies": {$/;"	o
dependencies	vscode/package.json	/^  "dependencies": {$/;"	o
dependencies	web/package.json	/^  "dependencies": {$/;"	o
deprecationMessage	vscode/package.json	/^          "deprecationMessage": "Deprecated: Please sign in via the UI instead."$/;"	s	object:contributes.configuration.properties.cody.serverEndpoint
deprecationMessage	vscode/package.json	/^          "deprecationMessage": "Use `cody.autocomplete.advanced.accessToken` instead"$/;"	s	object:contributes.configuration.properties.cody.completions.advanced.accessToken
deprecationMessage	vscode/package.json	/^          "deprecationMessage": "Use `cody.autocomplete.advanced.cache` instead"$/;"	s	object:contributes.configuration.properties.cody.completions.advanced.cache
deprecationMessage	vscode/package.json	/^          "deprecationMessage": "Use `cody.autocomplete.advanced.embeddings` instead"$/;"	s	object:contributes.configuration.properties.cody.completions.advanced.embeddings
deprecationMessage	vscode/package.json	/^          "deprecationMessage": "Use `cody.autocomplete.advanced.provider` instead"$/;"	s	object:contributes.configuration.properties.cody.completions.advanced.provider
deprecationMessage	vscode/package.json	/^          "deprecationMessage": "Use `cody.autocomplete.advanced.serverEndpoint` instead"$/;"	s	object:contributes.configuration.properties.cody.completions.advanced.serverEndpoint
deprecationMessage	vscode/package.json	/^          "deprecationMessage": "Use `cody.autocomplete` instead"$/;"	s	object:contributes.configuration.properties.cody.experimental.suggestions
description	.vscode/cody.json	/^  "description": "This file is used for building custom workspace recipes for Cody by Sourcegrap/;"	s
description	agent/package.json	/^  "description": "Cody JSON-RPC agent for consistent cross-editor support",$/;"	s
description	cli/package.json	/^  "description": "Cody CLI (experimental)",$/;"	s
description	lib/shared/package.json	/^  "description": "Cody shared library",$/;"	s
description	lib/shared/src/plugins/api/types.ts	/^    description: string$/;"	p	interface:Plugin
description	lib/shared/src/plugins/api/types.ts	/^    description: string$/;"	p	interface:PluginFunctionDescriptor
description	lib/ui/package.json	/^  "description": "Cody UI shared library",$/;"	s
description	node_modules/autopreview/package.json	/^  "description": "",$/;"	s
description	package.json	/^  "description": "Cody, the code AI that writes code, fixes bugs, and answers questions using th/;"	s
description	slack/package.json	/^  "description": "Your programming sidekick powered by AI and Sourcegraph's code search and inte/;"	s
description	vscode/package.json	/^                  "description": "API Ninjas Key. Use https:\/\/api-ninjas.com to get one."$/;"	s	object:contributes.configuration.properties.cody.plugins.config.properties.apiNinjas.properties.apiKey
description	vscode/package.json	/^                  "description": "Confluence API Token."$/;"	s	object:contributes.configuration.properties.cody.plugins.config.properties.confluence.properties.apiToken
description	vscode/package.json	/^                  "description": "Confluence Email."$/;"	s	object:contributes.configuration.properties.cody.plugins.config.properties.confluence.properties.email
description	vscode/package.json	/^                  "description": "Confluence instance base url."$/;"	s	object:contributes.configuration.properties.cody.plugins.config.properties.confluence.properties.baseUrl
description	vscode/package.json	/^                  "description": "GitHub API Token."$/;"	s	object:contributes.configuration.properties.cody.plugins.config.properties.github.properties.apiToken
description	vscode/package.json	/^                  "description": "GitHub organization to limit results to."$/;"	s	object:contributes.configuration.properties.cody.plugins.config.properties.github.properties.org
description	vscode/package.json	/^                  "description": "GitHub repo to limit results to."$/;"	s	object:contributes.configuration.properties.cody.plugins.config.properties.github.properties.repo
description	vscode/package.json	/^                  "description": "Github API URL.",$/;"	s	object:contributes.configuration.properties.cody.plugins.config.properties.github.properties.baseUrl
description	vscode/package.json	/^            "description": "Ask Cody to explain some code. Select some lines and use the \\"Expl/;"	s	object:contributes.walkthroughs.0.steps.1
description	vscode/package.json	/^            "description": "Chat with Cody without leaving your file. Click the + button next to/;"	s	object:contributes.walkthroughs.0.steps.3
description	vscode/package.json	/^            "description": "Cody writes code and answers questions using your own code graph as /;"	s	object:contributes.walkthroughs.0.steps.0
description	vscode/package.json	/^            "description": "Instruct Cody to edit and improve code with the \\"Fixup code from i/;"	s	object:contributes.walkthroughs.0.steps.2
description	vscode/package.json	/^            "description": "Let Cody automatically write code for you. Start writing a comment o/;"	s	object:contributes.walkthroughs.0.steps.4
description	vscode/package.json	/^            "description": "📖 Dive deeper into Cody by reading our [full documentation](https/;"	s	object:contributes.walkthroughs.0.steps.5
description	vscode/package.json	/^          "description": "URL to the Sourcegraph instance.",$/;"	s	object:contributes.configuration.properties.cody.serverEndpoint
description	vscode/package.json	/^        "description": "Cody logo heavy",$/;"	s	object:contributes.icons.cody-logo-heavy
description	vscode/package.json	/^        "description": "Cody logo",$/;"	s	object:contributes.icons.cody-logo
description	vscode/package.json	/^        "description": "Discover how Cody can help you write and understand code faster.",$/;"	s	object:contributes.walkthroughs.0
description	vscode/package.json	/^        "description": "The background of text Cody will edit where there is a specific conflict/;"	s	object:contributes.colors.0
description	vscode/package.json	/^        "description": "The background of text Cody will edit, if there is a conflict with your /;"	s	object:contributes.colors.2
description	vscode/package.json	/^        "description": "The background of text Cody will edit.",$/;"	s	object:contributes.colors.4
description	vscode/package.json	/^        "description": "The border around text Cody will edit.",$/;"	s	object:contributes.colors.5
description	vscode/package.json	/^        "description": "The border of text Cody will edit, if there is a conflict with your chan/;"	s	object:contributes.colors.1
description	vscode/package.json	/^        "description": "The border of text Cody will edit, if there is a conflict with your chan/;"	s	object:contributes.colors.3
description	vscode/package.json	/^      "description": "Discord"$/;"	s	object:badges.0
description	vscode/package.json	/^  "description": "Code AI with codebase context",$/;"	s
description	vscode/resources/samples/user-cody.json	/^  "description": "This file showcases how to build custom recipes for Cody by Sourcegraph.",$/;"	s
description	vscode/resources/samples/workspace-cody.json	/^  "description": "This is an example file to showcase how to build custom recipes for Cody by So/;"	s
description	vscode/src/services/AuthMenus.ts	/^    description: string$/;"	p	interface:LoginMenuItem
description	web/package.json	/^  "description": "Cody standalone web app",$/;"	s
descriptor	lib/shared/src/plugins/api/types.ts	/^    descriptor: PluginFunctionDescriptor$/;"	p	interface:PluginFunction
descriptors	vscode/src/chat/ChatViewProvider.ts	/^            const descriptors = await plugins.chooseDataSources($/;"	C
detect-indent	vscode/package.json	/^    "detect-indent": "^7.0.1",$/;"	s	object:dependencies
detectMultiline	vscode/src/completions/multiline.ts	/^export function detectMultiline($/;"	f
detectTokens	lib/shared/src/hallucinations-detector/index.ts	/^async function detectTokens($/;"	f
dev	completions-review-tool/package.json	/^    "dev": "npm-run-all build --parallel \\"dev:*\\"",$/;"	s	object:scripts
dev	vscode/package.json	/^    "dev": "pnpm run build:dev && pnpm run dev:instance",$/;"	s	object:scripts
dev	web/package.json	/^    "dev": "vite --mode development",$/;"	s	object:scripts
dev:instance	vscode/package.json	/^    "dev:instance": "CODY_FOCUS_ON_STARTUP=1 NODE_ENV=development code --extensionDevelopmentPat/;"	s	object:scripts
dev:node	completions-review-tool/package.json	/^    "dev:node": "cross-env NODE_ENV=development nodemon --require dotenv\/config .\/server.js --/;"	s	object:scripts
dev:remix	completions-review-tool/package.json	/^    "dev:remix": "remix watch",$/;"	s	object:scripts
devDependencies	agent/package.json	/^  "devDependencies": {$/;"	o
devDependencies	cli/package.json	/^  "devDependencies": {$/;"	o
devDependencies	completions-review-tool/package.json	/^  "devDependencies": {$/;"	o
devDependencies	lib/shared/package.json	/^  "devDependencies": {$/;"	o
devDependencies	lib/shared/src/chat/recipes/my-prompt.ts	/^            const devDependencies = packageJson.devDependencies$/;"	C	method:MyPrompt.getPackageJsonContext
devDependencies	node_modules/autopreview/package.json	/^  "devDependencies": {}$/;"	o
devDependencies	package.json	/^  "devDependencies": {$/;"	o
devDependencies	slack/package.json	/^  "devDependencies": {$/;"	o
devDependencies	vscode/package.json	/^  "devDependencies": {$/;"	o
devDependencies	web/package.json	/^  "devDependencies": {$/;"	o
didClose	vscode/src/services/StatusBar.ts	/^            let didClose = false$/;"	v
didDeleteFiles	vscode/src/non-stop/FixupFileObserver.ts	/^    public didDeleteFiles(event: vscode.FileDeleteEvent): void {$/;"	m	class:FixupFileObserver
didFinishNetworkRequest	vscode/src/completions/request-manager.test.ts	/^    public didFinishNetworkRequest = false$/;"	p	class:MockProvider
didReceiveFixupText	lib/shared/src/editor/index.ts	/^    didReceiveFixupText(id: string, text: string, state: 'streaming' | 'complete'): Promise<void/;"	m	interface:Editor
didReceiveFixupText	lib/shared/src/editor/index.ts	/^    public didReceiveFixupText(id: string, text: string, state: 'streaming' | 'complete'): Promi/;"	m	class:NoopEditor
didRenameFiles	vscode/src/non-stop/FixupFileObserver.ts	/^    public didRenameFiles(event: vscode.FileRenameEvent): void {$/;"	m	class:FixupFileObserver
diff	cli/src/commands/commit/command.ts	/^    const diff = options.diffFile$/;"	C	function:run
diff	vscode/src/non-stop/FixupController.ts	/^        const diff = this.applicableDiffOrRespin(task, editor.document)$/;"	C
diff	vscode/src/non-stop/FixupController.ts	/^        let diff = task.diff$/;"	v
diff	vscode/src/non-stop/FixupTask.ts	/^    public diff: Diff | undefined$/;"	p	class:FixupTask
diff	vscode/src/non-stop/codelenses.ts	/^            const diff = getDiffLens(codeLensRange, task.id)$/;"	C	function:getLensesForTask
diff	vscode/src/non-stop/diff.test.ts	/^        const diff = computeDiff('hello, world!', 'hello, WORLD!', 'hello, earth!', { line: 42, /;"	C
diff	vscode/src/non-stop/diff.test.ts	/^        const diff = computeDiff('hello, world!', 'hello, puny earthlings', 'hello, puny earthli/;"	C
diff	vscode/src/non-stop/diff.test.ts	/^        const diff = computeDiff('hello, world!', 'hello, worldly humans of earth!', 'hello, sal/;"	C
diff	vscode/src/non-stop/diff.test.ts	/^        const diff = computeDiff('hello, world!', 'hello, worldly humans of earth!', 'hello, wor/;"	C
diff	vscode/src/services/InlineController.ts	/^        const diff = original.trim() !== replacement.trim()$/;"	C
diffFile	cli/src/commands/commit/command.ts	/^    diffFile?: string$/;"	p	interface:CommitOptions
dirPath	lib/shared/src/chat/recipes/generate-pr-description.ts	/^        const dirPath = context.editor.getWorkspaceRootPath()$/;"	C	method:PrDescription.getInteraction
dirPath	lib/shared/src/chat/recipes/generate-release-notes.ts	/^        const dirPath = context.editor.getWorkspaceRootPath()$/;"	C	method:ReleaseNotes.getInteraction
dirPath	lib/shared/src/chat/recipes/git-log.ts	/^        const dirPath = context.editor.getWorkspaceRootPath()$/;"	C	method:GitHistory.getInteraction
dirPath	vscode/src/services/LocalAppDetector.ts	/^            const dirPath = expandHomeDir(marker.dir, homeDir)$/;"	C
dirUri	lib/shared/src/chat/recipes/my-prompt.ts	/^            const dirUri = vscode.Uri.file(dirPath)$/;"	C	method:MyPrompt.getEditorDirContext
dirUri	vscode/src/services/LocalAppDetector.ts	/^            const dirUri = vscode.Uri.file(dirPath)$/;"	C
directory	agent/package.json	/^    "directory": "agent"$/;"	s	object:repository
directory	cli/package.json	/^    "directory": "cli"$/;"	s	object:repository
directory	lib/shared/package.json	/^    "directory": "lib\/shared"$/;"	s	object:repository
directory	lib/ui/package.json	/^    "directory": "lib\/ui"$/;"	s	object:repository
directory	vscode/package.json	/^    "directory": "vscode"$/;"	s	object:repository
directory	web/package.json	/^    "directory": "web"$/;"	s	object:repository
directoryPath	lib/shared/src/chat/recipes/my-prompt.ts	/^    directoryPath?: string$/;"	p	interface:CodyPromptContext
dirname	lib/shared/src/common/index.ts	/^export function dirname(path: string): string {$/;"	f
disableTimeouts	vscode/src/completions/index.ts	/^    disableTimeouts?: boolean$/;"	p	interface:CodyCompletionItemProviderConfig
discard	vscode/src/non-stop/codelenses.ts	/^            const discard = getDiscardLens(codeLensRange, task.id)$/;"	C	function:getLensesForTask
displayDuration	vscode/src/completions/logger.ts	/^        const displayDuration = now - suggestedAt$/;"	C	function:logSuggestionEvent
displayName	slack/package.json	/^  "displayName": "Sourcegraph Cody Slack",$/;"	s
displayName	vscode/package.json	/^  "displayName": "Cody AI",$/;"	s
displayPrompt	lib/shared/src/chat/recipes/inline-chat.ts	/^    public static readonly displayPrompt = `$/;"	p	class:InlineChat
displaySearchResults	lib/shared/src/chat/recipes/context-search.ts	/^    private async displaySearchResults($/;"	m	class:ContextSearch
displayText	lib/shared/src/chat/recipes/explain-code-detailed.ts	/^        const displayText = `Explain the following code:\\n\\`\\`\\`\\n${selection.selectedText}/;"	C	method:ExplainCodeDetailed.getInteraction
displayText	lib/shared/src/chat/recipes/explain-code-high-level.ts	/^        const displayText = `Explain the following code at a high level:\\n\\`\\`\\`\\n${selecti/;"	C	method:ExplainCodeHighLevel.getInteraction
displayText	lib/shared/src/chat/recipes/find-code-smells.ts	/^        const displayText = `Find code smells in the following code: \\n\\`\\`\\`\\n${selection./;"	C	method:FindCodeSmells.getInteraction
displayText	lib/shared/src/chat/recipes/generate-docstring.ts	/^        const displayText = `Generate documentation for the following code:\\n\\`\\`\\`\\n${sele/;"	C	method:GenerateDocstring.getInteraction
displayText	lib/shared/src/chat/recipes/generate-test.ts	/^        const displayText = `Generate a unit test for the following code:\\n\\`\\`\\`${extension/;"	C	method:GenerateTest.getInteraction
displayText	lib/shared/src/chat/recipes/improve-variable-names.ts	/^        const displayText = `Improve the variable names in the following code:\\n\\`\\`\\`\\n${s/;"	C	method:ImproveVariableNames.getInteraction
displayText	lib/shared/src/chat/recipes/inline-chat.ts	/^        const displayText = humanChatInput + InlineChat.displayPrompt.replace('{selectedText}', /;"	C	method:InlineChat.getInteraction
displayText	lib/shared/src/chat/recipes/inline-touch.ts	/^        const displayText = this.getHumanDisplayText(humanInput, selection.fileName)$/;"	C
displayText	lib/shared/src/chat/recipes/my-prompt.ts	/^        const displayText = selection?.fileName ? this.getHumanDisplayText(humanInput, selection/;"	C	method:MyPrompt.getInteraction
displayText	lib/shared/src/chat/recipes/translate.ts	/^        const displayText = `Translate the following code into ${toLanguage}\\n\\`\\`\\`\\n${sel/;"	C	method:TranslateToLanguage.getInteraction
displayText	lib/shared/src/chat/transcript/messages.ts	/^    displayText?: string$/;"	p	interface:ChatMessage
displayText	lib/shared/src/chat/transcript/messages.ts	/^    displayText?: string$/;"	p	interface:InteractionMessage
displayText	vscode/src/chat/ChatViewProvider.ts	/^                    const displayText = reformatBotMessage(text, responsePrefix)$/;"	C
displayText	vscode/src/chat/ChatViewProvider.ts	/^                const displayText = reformatBotMessage(text, responsePrefix)$/;"	C
displayedCompletions	vscode/src/completions/logger.ts	/^const displayedCompletions = new LRUCache<string, CompletionEvent>({$/;"	C
disposable	vscode/src/chat/ChatViewProvider.ts	/^        for (const disposable of this.disposables) {$/;"	C
disposable	vscode/src/completions/history.ts	/^            const disposable = register()$/;"	C
disposable	vscode/src/main.ts	/^            for (const disposable of disposables) {$/;"	C	function:createCompletionsProvider
disposable	vscode/src/main.ts	/^    const { disposable, onConfigurationChange } = await register($/;"	C	function:start
disposable	vscode/src/non-stop/FixupCodeLenses.ts	/^        for (const disposable of this._disposables) {$/;"	C
disposable	vscode/src/non-stop/FixupController.ts	/^        for (const disposable of this._disposables) {$/;"	C
disposable	vscode/src/non-stop/TaskViewProvider.ts	/^        for (const disposable of this._disposables) {$/;"	C
disposable	vscode/src/services/CodeLensProvider.ts	/^        for (const disposable of this._disposables) {$/;"	C
disposable	vscode/src/services/DecorationProvider.ts	/^        for (const disposable of this._disposables) {$/;"	C	method:DecorationProvider.dispose
disposable	vscode/src/services/InlineController.ts	/^        for (const disposable of this._disposables) {$/;"	C
disposables	vscode/src/main.ts	/^    const disposables: vscode.Disposable[] = []$/;"	C
disposables	vscode/src/main.ts	/^    const disposables: vscode.Disposable[] = []$/;"	C	function:createCompletionsProvider
disposables	vscode/src/main.ts	/^    const disposables: vscode.Disposable[] = []$/;"	C	function:start
disposables	vscode/src/main.ts	/^    disposables.push(disposeCompletions)$/;"	C
dispose	vscode/src/my-cody/CustomRecipesBuilder.ts	/^    public dispose(): void {$/;"	m	class:CustomRecipesBuilder
dispose	vscode/src/my-cody/MyPromptController.ts	/^    public dispose(): void {$/;"	m	class:MyPromptController
dispose	vscode/src/services/DecorationProvider.ts	/^    public dispose(): void {$/;"	m	class:DecorationProvider
dispose	vscode/src/services/StatusBar.ts	/^    dispose(): void$/;"	m	interface:CodyStatusBar
disposeCompletions	vscode/src/main.ts	/^    const disposeCompletions: vscode.Disposable = {$/;"	C
doWorkNow	vscode/src/non-stop/FixupScheduler.ts	/^    public doWorkNow(): void {$/;"	m	class:FixupScheduler
doc	lib/shared/src/chat/recipes/my-prompt.ts	/^        for (const doc of files) {$/;"	C	method:MyPrompt.getEditorOpenTabsContext
doc	vscode/src/chat/ChatViewProvider.ts	/^                    const doc = await vscode.workspace.openTextDocument(uri)$/;"	C
doc	vscode/src/my-cody/helper.ts	/^    const doc = await vscode.workspace.openTextDocument(codyJsonFilePath)$/;"	C	function:saveJSONFile
doc	vscode/src/non-stop/FixupContentStore.ts	/^        const doc = await vscode.workspace.openTextDocument(docUri)$/;"	C
doc	vscode/src/non-stop/FixupController.ts	/^        const doc = await vscode.workspace.openTextDocument(tempDocUri)$/;"	C
docAsMessage	lib/shared/src/chat/recipes/my-prompt.ts	/^            const docAsMessage = getContextMessageWithResponse($/;"	C	method:MyPrompt.getEditorOpenTabsContext
docContext	vscode/src/completions/index.ts	/^        const docContext = getCurrentDocContext(document, position, this.maxPrefixChars, this.ma/;"	C
docs	slack/src/slack/message-interaction.ts	/^        const docs = await vectorStore.similaritySearch(this.humanMessage.text!, numResults)$/;"	C	method:SlackInteraction.updateContextMessagesFromVectorStore
docs	vscode/src/completions/context-local.ts	/^    const docs = ($/;"	C
document	agent/src/editor.ts	/^        const document = this.activeDocument()$/;"	C
document	agent/src/offsets.ts	/^    constructor(public readonly document: TextDocument) {$/;"	p	class:DocumentOffsets
document	vscode/src/completions/completion.test.ts	/^            const document: any = {$/;"	C
document	vscode/src/completions/context-embeddings.ts	/^    const { document, codebaseContext, prefix, suffix } = options$/;"	C
document	vscode/src/completions/context-embeddings.ts	/^    document: vscode.TextDocument$/;"	p	interface:Options
document	vscode/src/completions/context-local.ts	/^                const document = await vscode.workspace.openTextDocument(item.document.uri)$/;"	C
document	vscode/src/completions/context-local.ts	/^    const { document, history, prefix, jaccardDistanceWindowSize } = options$/;"	C	function:getContextFromCurrentEditor
document	vscode/src/completions/context-local.ts	/^    document: vscode.TextDocument$/;"	p	interface:Options
document	vscode/src/completions/context-local.ts	/^    for (const document of docs) {$/;"	C
document	vscode/src/completions/context.ts	/^    document: vscode.TextDocument$/;"	p	interface:GetContextOptions
document	vscode/src/completions/history.ts	/^    document: Pick<vscode.TextDocument, 'uri' | 'languageId'>$/;"	p	interface:HistoryItem
document	vscode/src/completions/index.ts	/^            const document = event.document$/;"	C
document	vscode/src/non-stop/FixupController.ts	/^        const document = await vscode.workspace.openTextDocument(task.fixupFile.uri)$/;"	C
document	vscode/src/services/InlineAssist.ts	/^    const document = await vscode.workspace.openTextDocument(uri)$/;"	C	function:editDocByUri
documentProvider	vscode/src/main.ts	/^    const documentProvider = new CompletionsDocumentProvider()$/;"	C	function:createCompletionsProvider
documentSelection	vscode/src/editor/vscode-editor.ts	/^        const documentSelection = activeEditor.selection$/;"	C	method:VSCodeEditor.getActiveTextEditor
documentText	vscode/src/editor/vscode-editor.ts	/^        const documentText = activeEditor.document.getText()$/;"	C	method:VSCodeEditor.getActiveTextEditor
documentUri	vscode/src/editor/vscode-editor.ts	/^        const documentUri = activeEditor.document.uri$/;"	C	method:VSCodeEditor.getActiveTextEditor
documentUri	vscode/src/services/InlineController.ts	/^            const documentUri = vscode.Uri.joinPath(this.workspacePath, fileName)$/;"	C
documents	slack/src/services/local-vector-store.ts	/^            const documents = await getDocuments()$/;"	C	function:scheduleVectorUpdate
documents	slack/src/services/local-vector-store.ts	/^    const documents = await getDocuments()$/;"	C	function:getVectorStore
documents	slack/src/services/local-vector-store.ts	/^    const documents = await splitter.createDocuments([content])$/;"	C	function:getDocuments
doesPathExist	vscode/src/my-cody/helper.ts	/^export async function doesPathExist(filePath?: string): Promise<boolean> {$/;"	f
dompurify	lib/shared/package.json	/^    "dompurify": "^3.0.4",$/;"	s	object:dependencies
dot	vscode/src/services/InlineController.ts	/^        const dot = '.'$/;"	C
dotcomUrl	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    private dotcomUrl = 'https:\/\/sourcegraph.com'$/;"	p	class:SourcegraphGraphQLAPIClient
dotenv	completions-review-tool/package.json	/^    "dotenv": "^16.0.3",$/;"	s	object:devDependencies
dryRun	cli/src/commands/commit/command.ts	/^    dryRun: boolean$/;"	p	interface:CommitOptions
dryRun	vscode/scripts/release.ts	/^const dryRun = Boolean(process.env.CODY_RELEASE_DRY_RUN)$/;"	C
dumpUse	vscode/src/non-stop/diff.ts	/^export function dumpUse(use: Uint8Array, a: string, b: string): void {$/;"	f
duration	lib/shared/src/guardrails/index.ts	/^    duration: number$/;"	p	interface:AnnotatedText
duration	vscode/src/chat/ChatViewProvider.ts	/^                duration: result.duration,$/;"	C
duration	vscode/src/logged-rerank.ts	/^        const duration = performance.now() - start$/;"	C	function:getRerankWithLog
e	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    const e = Object.entries(termTotalFiles).map(([term, count]) => [term, logTotal - Math.log(c/;"	C
edit	vscode/src/chat/ChatViewProvider.ts	/^        const edit = new vscode.WorkspaceEdit()$/;"	C
edit	vscode/src/non-stop/FixupController.ts	/^        const edit = new vscode.WorkspaceEdit()$/;"	C
edit	vscode/src/non-stop/FixupDocumentEditObserver.ts	/^            for (const edit of event.contentChanges) {$/;"	C	method:FixupDocumentEditObserver.textDocumentChanged
edit	vscode/src/non-stop/FixupDocumentEditObserver.ts	/^    for (const [i, edit] of edits.entries()) {$/;"	C	function:updateEdits
edit	vscode/src/services/InlineAssist.ts	/^    const edit = new vscode.WorkspaceEdit()$/;"	C	function:editDocByUri
editDocByUri	vscode/src/services/InlineAssist.ts	/^export async function editDocByUri($/;"	f
editMessage	lib/shared/src/chat/useClient.ts	/^    const editMessage = useCallback($/;"	C
editMessage	lib/shared/src/chat/useClient.ts	/^    editMessage: ($/;"	p	interface:CodyClient
editOk	vscode/src/non-stop/FixupController.ts	/^        const editOk = await editor.edit(editBuilder => {$/;"	C
editedText	vscode/src/non-stop/tracked-range.test.ts	/^    const editedText = edit(scenario.text, scenario.edited, replacement)$/;"	C	function:show
editor	lib/shared/src/chat/client.ts	/^    editor: Editor$/;"	p	interface:ClientInit
editor	lib/shared/src/chat/recipes/recipe.ts	/^    editor: Editor$/;"	p	interface:RecipeContext
editor	lib/shared/src/chat/transcript/transcript.test.ts	/^        const editor = new MockEditor({$/;"	C
editor	lib/shared/src/chat/useClient.ts	/^            const editor = options?.scope?.editor || (scope.includeInferredFile ? scope.editor :/;"	C
editor	lib/shared/src/chat/useClient.ts	/^    editor: Editor$/;"	p	interface:CodyClientScope
editor	lib/shared/src/chat/useClient.ts	/^    editor?: Editor$/;"	p	interface:CodyClientScopePartial
editor	vscode/src/chat/ChatViewProvider.ts	/^        const editor = vscode.window.activeTextEditor$/;"	C
editor	vscode/src/local-context/filename-context-fetcher.ts	/^        private editor: Editor,$/;"	p	class:FilenameContextFetcher
editor	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        private editor: Editor,$/;"	p	class:LocalKeywordContextFetcher
editor	vscode/src/main.ts	/^    const editor = new VSCodeEditor(controllers)$/;"	C
editor	vscode/src/non-stop/FixupController.ts	/^        const editor = vscode.window.visibleTextEditors.find(editor => editor.document.uri === t/;"	C
editor	vscode/src/non-stop/FixupController.ts	/^        for (const editor of editors) {$/;"	C
editor	vscode/src/non-stop/FixupController.ts	/^        let editor = vscode.window.visibleTextEditors.find(editor => editor.document.uri === tas/;"	v
editor	vscode/src/non-stop/FixupDecorator.ts	/^        for (const editor of editors) {$/;"	C
editor	vscode/src/non-stop/FixupTypingUI.ts	/^        const editor = vscode.window.activeTextEditor$/;"	C	method:FixupTypingUI.show
editor	vscode/src/services/DecorationProvider.ts	/^        const editor = this.editor$/;"	C	method:DecorationProvider.decorate
editor	vscode/src/services/DecorationProvider.ts	/^    private editor: vscode.TextEditor | undefined$/;"	p	class:DecorationProvider
editor	vscode/src/services/GuardrailsProvider.ts	/^        private editor: Editor$/;"	p	class:GuardrailsProvider
editor	vscode/src/services/InlineController.ts	/^        const editor = vscode.window.activeTextEditor$/;"	C
editor.codeActionsOnSave	.vscode/settings.json	/^  "editor.codeActionsOnSave": {$/;"	o
editor.defaultFormatter	.vscode/settings.json	/^    "editor.defaultFormatter": "esbenp.prettier-vscode"$/;"	s	object:[typescript]
editor.defaultFormatter	.vscode/settings.json	/^    "editor.defaultFormatter": "esbenp.prettier-vscode"$/;"	s	object:[typescriptreact]
editor.formatOnSave	.vscode/settings.json	/^  "editor.formatOnSave": true,$/;"	b
editor/context	vscode/package.json	/^      "editor\/context": [$/;"	a	object:contributes.menus
editor/title	vscode/package.json	/^      "editor\/title": [$/;"	a	object:contributes.menus
editorContext	vscode/src/chat/ChatViewProvider.ts	/^            const editorContext = this.editor.getActiveTextEditor()$/;"	C
editorRegexps	lib/shared/src/intent-detector/client.ts	/^const editorRegexps = [\/editor\/, \/(open|current|this)\\s+file\/, \/current(ly)?\\s+open\/, \//;"	C
editorTabSize	vscode/src/completions/multiline.ts	/^    const editorTabSize = getEditorTabSize()$/;"	C	function:ensureSameOrLargerIndentation
editors	vscode/src/non-stop/FixupController.ts	/^        for (const [file, editors] of editorsByFile.entries()) {$/;"	C
editors	vscode/src/non-stop/FixupDecorator.ts	/^        const editors = vscode.window.visibleTextEditors.filter(editor => editor.document.uri ==/;"	C
editorsByFile	vscode/src/non-stop/FixupController.ts	/^        const editorsByFile = new Map<FixupFile, vscode.TextEditor[]>()$/;"	C
edits	vscode/src/non-stop/FixupDecorator.ts	/^    edits: vscode.Range[]$/;"	p	interface:TaskDecorations
edits	vscode/src/non-stop/diff.ts	/^    const edits = []$/;"	C	function:computeChunks
elapsed	vscode/test/completions/run-code-completions-on-dataset.ts	/^    elapsed: number$/;"	p	interface:CompletionResult
elapsedMillis	vscode/src/completions/docprovider.ts	/^    elapsedMillis: number$/;"	p	interface:Meta
else	lib/shared/src/sourcegraph-api/graphql/client.ts	/^            } else {$/;"	p	class:SourcegraphGraphQLAPIClient
email	lib/shared/src/chat/recipes/generate-pr-description.ts	/^        const email = userEmail.stdout.toString().trim()$/;"	C	method:PrDescription.getInteraction
email	vscode/package.json	/^                "email": {$/;"	o	object:contributes.configuration.properties.cody.plugins.config.properties.confluence.properties
embeddingResultsError	lib/shared/src/codebase-context/index.ts	/^    private embeddingResultsError = ''$/;"	p	class:CodebaseContext
embeddingResultsWithoutCurrentFile	vscode/src/completions/context-embeddings.ts	/^    const embeddingResultsWithoutCurrentFile = results$/;"	C	function:fetchAndSaveEmbeddings
embeddings	lib/shared/src/chat/transcript/transcript.test.ts	/^        const embeddings = new MockEmbeddingsClient({$/;"	C
embeddings	lib/shared/src/codebase-context/index.ts	/^        private embeddings: EmbeddingsSearch | null,$/;"	p	class:CodebaseContext
embeddings	slack/src/services/local-vector-store.ts	/^    const embeddings = new OpenAIEmbeddings()$/;"	C	function:getVectorStore
embeddings	vscode/src/completions/context-embeddings.ts	/^    embeddings: ReferenceSnippet[]$/;"	p	interface:EmbeddingsForFile
embeddingsForCurrentFile	vscode/src/completions/context-embeddings.ts	/^    const embeddingsForCurrentFile = embeddingsPerFile.get(currentFilePath)$/;"	C
embeddingsMatches	vscode/src/completions/context.ts	/^    const embeddingsMatches = isEmbeddingsContextEnabled ? getContextFromEmbeddings(options) : [/;"	C	function:getContext
embeddingsMultiSearch	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    embeddingsMultiSearch: EmbeddingsSearchResults$/;"	p	interface:EmbeddingsMultiSearchResponse
embeddingsPerFile	vscode/src/completions/context-embeddings.ts	/^const embeddingsPerFile = new LRUCache<string, EmbeddingsForFile>({$/;"	C
embeddingsSearch	cli/src/client/context.ts	/^    const embeddingsSearch = repoId && !isError(repoId) ? new SourcegraphEmbeddingsSearchClient(/;"	C	function:createCodebaseContext
embeddingsSearch	lib/shared/src/chat/client.ts	/^    const embeddingsSearch = repoId ? new SourcegraphEmbeddingsSearchClient(graphqlClient, repoI/;"	C	function:createClient
embeddingsSearch	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    embeddingsSearch: EmbeddingsSearchResults$/;"	p	interface:EmbeddingsSearchResponse
embeddingsSearch	slack/src/services/codebase-context.ts	/^    const embeddingsSearch =$/;"	C	function:createCodebaseContext
embeddingsSearch	vscode/src/chat/ChatViewProvider.ts	/^    const embeddingsSearch = repoId && !isError(repoId) ? new SourcegraphEmbeddingsSearchClient(/;"	C	function:getCodebaseContext
embeddingsSearch	vscode/src/external-services.ts	/^    const embeddingsSearch = repoId && !isError(repoId) ? new SourcegraphEmbeddingsSearchClient(/;"	C	function:configureExternalServices
embeddingsSearchResults	lib/shared/src/codebase-context/index.ts	/^        const embeddingsSearchResults = await this.embeddings.search($/;"	C	method:CodebaseContext.getEmbeddingSearchResults
emit	lib/shared/src/chat/typewriter.ts	/^    emit: (text: string) => void$/;"	p	interface:CreateTypewriterParams
emptyGitCommitMessage	lib/shared/src/chat/recipes/generate-pr-description.ts	/^            const emptyGitCommitMessage = 'No commits history found in the current branch.'$/;"	C	method:PrDescription.getInteraction
emptyGitLogMessage	lib/shared/src/chat/recipes/generate-release-notes.ts	/^            const emptyGitLogMessage = 'No recent changes found to generate release notes.'$/;"	C	method:ReleaseNotes.getInteraction
emptyGitLogMessage	lib/shared/src/chat/recipes/git-log.ts	/^            const emptyGitLogMessage = 'No recent changes found'$/;"	C	method:GitHistory.getInteraction
emptyPromptLength	vscode/src/completions/providers/anthropic.ts	/^    public emptyPromptLength(): number {$/;"	m	class:AnthropicProvider
enable	vscode/package.json	/^          "enable": "cody.fixup.filesWithApplicableFixups",$/;"	s	object:contributes.menus.view/item/context.0
enableExtendedMultilineTriggers	vscode/src/completions/providers/provider.ts	/^    enableExtendedMultilineTriggers: boolean$/;"	p	interface:ProviderConfig
enableInlineChat	vscode/src/services/InlineController.ts	/^                const enableInlineChat = config.get('inlineChat.enabled') as boolean$/;"	C
enabled	vscode/src/services/AuthProvider.ts	/^        const [{ enabled, version }, codyLLMConfiguration] = await Promise.all([$/;"	C
enabledPluginNames	vscode/src/chat/ChatViewProvider.ts	/^        const enabledPluginNames = this.localStorage.getEnabledPlugins() ?? []$/;"	C
enabledPlugins	vscode/src/chat/ChatViewProvider.ts	/^        const enabledPlugins = defaultPlugins.filter(plugin => enabledPluginNames.includes(plugi/;"	C
enablement	vscode/package.json	/^        "enablement": "!cody.fixup.view.isEmpty",$/;"	s	object:contributes.commands.28
enablement	vscode/package.json	/^        "enablement": "!cody.fixup.view.isEmpty",$/;"	s	object:contributes.commands.29
enablement	vscode/package.json	/^        "enablement": "!cody.fixup.view.isEmpty",$/;"	s	object:contributes.commands.30
enablement	vscode/package.json	/^        "enablement": "!cody.fixup.view.isEmpty",$/;"	s	object:contributes.commands.31
enablement	vscode/package.json	/^        "enablement": "!commentIsEmpty"$/;"	s	object:contributes.commands.19
enablement	vscode/package.json	/^        "enablement": "!commentThreadIsEmpty",$/;"	s	object:contributes.commands.20
enablement	vscode/package.json	/^        "enablement": "!commentThreadIsEmpty",$/;"	s	object:contributes.commands.21
enablement	vscode/package.json	/^        "enablement": "!commentThreadIsEmpty",$/;"	s	object:contributes.commands.22
enablement	vscode/package.json	/^        "enablement": "cody.nonstop.fixups.enabled && editorHasSelection"$/;"	s	object:contributes.commands.26
enablement	vscode/package.json	/^        "enablement": "cody.nonstop.fixups.enabled",$/;"	s	object:contributes.commands.27
enablement	vscode/package.json	/^        "enablement": "config.cody.experimental.customRecipes",$/;"	s	object:contributes.commands.32
enablement	vscode/package.json	/^        "enablement": "config.cody.experimental.guardrails && editorHasSelection"$/;"	s	object:contributes.commands.24
enablement	vscode/package.json	/^        "enablement": "editorFocus"$/;"	s	object:contributes.commands.23
end	agent/src/protocol.ts	/^    end: Position$/;"	p	interface:Range
end	lib/shared/src/editor/index.ts	/^    end: {$/;"	p	interface:ActiveTextEditorSelectionRange
end	lib/shared/src/plugins/built-in/confluence.ts	/^    const end = Math.min(paragraph.length, blurbIndex + blurb.length + 300)$/;"	C	function:getSurroundingText
end	vscode/src/completions/context-local.ts	/^        const end = Math.min(index + surroundingTabs, allUris.length - 1)$/;"	C	function:getRelevantFiles
endLine	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    endLine: number$/;"	p	interface:CodyFileChunkContext
endLine	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    endLine: number$/;"	p	interface:EmbeddingsSearchResult
endLine	lib/shared/src/unified-context/index.ts	/^    endLine: number$/;"	p	interface:FileChunkContext
endLine	vscode/src/completions/context-local.ts	/^        const endLine = Math.min(document.lineCount, 10_000)$/;"	C	function:getRelevantFiles
endLine	vscode/src/completions/document.ts	/^    let endLine = 0$/;"	v
endLine	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                    const endLine = startLine + 5$/;"	C	method:LocalKeywordContextFetcher.getSearchContext
endOfLine	vscode/src/completions/index.ts	/^            const endOfLine = currentLineText.range.end$/;"	C	function:toInlineCompletionItems
endPostAsk	vscode/src/services/InlineController.ts	/^        const endPostAsk = new vscode.Position(this.thread.range.end.line + 1, 0)$/;"	C
endPostFix	vscode/src/services/InlineController.ts	/^        const endPostFix = new vscode.Position(this.thread.range.end.line, lineLength)$/;"	C
endpoint	cli/src/program.ts	/^    endpoint: string$/;"	p	interface:GlobalOptions
endpoint	vscode/src/chat/ChatViewProvider.ts	/^        const endpoint = this.config.serverEndpoint || DOTCOM_URL.href$/;"	C
endpoint	vscode/src/chat/protocol.ts	/^    endpoint: string | null$/;"	p	interface:AuthStatus
endpoint	vscode/src/chat/utils.test.ts	/^            endpoint,$/;"	C
endpoint	vscode/src/chat/utils.test.ts	/^        const expected = { ...unauthenticatedStatus, endpoint }$/;"	C
endpoint	vscode/src/chat/utils.test.ts	/^    const endpoint = 'https:\/\/example.com'$/;"	C
endpoint	vscode/src/chat/utils.ts	/^    const authStatus: AuthStatus = { ...defaultAuthStatus, endpoint }$/;"	C	function:newAuthStatus
endpoint	vscode/src/services/AuthMenus.ts	/^    const endpoint = await vscode.window.showInputBox(options)$/;"	C	function:LoginStepInputBox
endpoint	vscode/src/services/AuthMenus.ts	/^    endpoint: string | null | undefined$/;"	p	interface:LoginInput
endpoint	vscode/src/services/AuthProvider.ts	/^                const endpoint = uri || item.uri$/;"	C
endpoint	vscode/src/services/AuthProvider.ts	/^        const endpoint = await AuthMenu('signout', endpointQuickPickItem)$/;"	C
endpoint	vscode/src/services/AuthProvider.ts	/^        const endpoint = config.serverEndpoint$/;"	C
endpoint	vscode/src/services/AuthProvider.ts	/^        const endpoint = formatURL(uri) || ''$/;"	C
endpoint	vscode/src/services/AuthProvider.ts	/^        const endpoint = formatURL(uri)$/;"	C
endpoint	vscode/src/services/AuthProvider.ts	/^        const endpoint = isApp ? LOCAL_APP_URL.href : this.authStatus.endpoint$/;"	C
endpoint	vscode/src/services/LocalAppFsPaths.ts	/^    endpoint: string$/;"	C
endpointHistory	vscode/src/services/AuthProvider.ts	/^    private endpointHistory: string[] = []$/;"	p	class:AuthProvider
endpointName	vscode/src/services/AuthProvider.ts	/^        const endpointName = isLocalApp(authStatus.endpoint) ? 'Cody App' : authStatus.endpoint$/;"	C
endpointQuickPickItem	vscode/src/services/AuthProvider.ts	/^        const endpointQuickPickItem = this.authStatus.endpoint ? [this.authStatus.endpoint] : []$/;"	C
endpointUri	lib/shared/src/chat/recipes/context-search.ts	/^        const endpointUri = resultContext.endpoint$/;"	C	method:ContextSearch.displaySearchResults
endpointUri	vscode/src/chat/ChatViewProvider.ts	/^        const endpointUri = { serverEndpoint: endpoint }$/;"	C
endpointUri	vscode/src/services/AuthProvider.ts	/^        const endpointUri = new URL(uri)$/;"	C	function:formatURL
endpoints	vscode/scripts/mock-server.ts	/^const endpoints = {$/;"	C
engines	completions-review-tool/package.json	/^  "engines": {$/;"	o
engines	package.json	/^  "engines": {$/;"	o
engines	vscode/package.json	/^  "engines": {$/;"	o
ensureExecuteCommand	vscode/test/integration/helpers.ts	/^export async function ensureExecuteCommand<T>(command: string, ...args: any[]): Promise<T> {$/;"	f
ensureSameOrLargerIndentation	vscode/src/completions/multiline.ts	/^function ensureSameOrLargerIndentation(completion: string): string {$/;"	f
entry	agent/src/jsonrpc.ts	/^                    const entry = headerString.slice(startIndex, endIndex)$/;"	C	method:MessageDecoder._write
entry	vscode/src/non-stop/diff.test.ts	/^                const entry = lcs[(v + 1) * (a.length + 1) + (u + 1)]$/;"	C
enum	vscode/package.json	/^          "enum": [$/;"	a	object:contributes.configuration.properties.cody.useContext
env	.vscode/launch.json	/^      "env": {$/;"	o	object:configurations.0
env	vscode/test/fixtures/workspace/lib/batches/env/var.go	/^package env$/;"	p
envInit	vscode/src/services/LocalAppDetector.ts	/^const envInit = {$/;"	C
envalid	slack/package.json	/^    "envalid": "^7.3.1",$/;"	s	object:dependencies
envalid	vscode/package.json	/^    "envalid": "^7.3.1",$/;"	s	object:devDependencies
error	agent/src/jsonrpc.ts	/^    error?: ErrorInfo<any>$/;"	p	interface:ResponseMessage
error	lib/shared/src/editor/index.ts	/^    error(): Promise<void>$/;"	m	interface:VsCodeInlineController
error	lib/shared/src/plugins/api/types.ts	/^    error?: any$/;"	p	interface:PluginFunctionExecutionInfo
error	lib/shared/src/sourcegraph-api/completions/types.ts	/^    error: string$/;"	p	interface:ErrorEvent
errorDecorationType	vscode/src/services/DecorationProvider.ts	/^const errorDecorationType = vscode.window.createTextEditorDecorationType({$/;"	C
errorEncountered	lib/shared/src/sourcegraph-api/completions/client.ts	/^    private errorEncountered = false$/;"	p	class:SourcegraphCompletionsClient
errors	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    errors?: { message: string; path?: string[] }[]$/;"	p	interface:APIResponse
esbuild	package.json	/^    "esbuild": "^0.18.11",$/;"	s	object:devDependencies
esbuild	vscode/package.json	/^    "esbuild": "esbuild .\/src\/extension.ts --bundle --outfile=dist\/extension.js --external:vs/;"	s	object:scripts
escapeHTML	lib/shared/src/common/markdown/markdown.ts	/^const escapeHTML = (html: string): string => {$/;"	C
escapeMarkdown	lib/shared/src/common/index.ts	/^export const escapeMarkdown = (text: string): string => {$/;"	C
escapeMarkdown	lib/shared/src/common/markdown/markdown.ts	/^export const escapeMarkdown = (text: string): string => {$/;"	C
escapeRegex	vscode/src/local-context/local-keyword-context-fetcher.ts	/^function escapeRegex(s: string): string {$/;"	f
escaped	lib/shared/src/chat/recipes/my-prompt.ts	/^    const escaped = context.replace(\/\\\\\/g, '\\\\\\\\').replace(\/"\/g, '\\\\"').replace(\/\\/;"	C	function:toJSON
eslint	package.json	/^    "eslint": "^8.13.0",$/;"	s	object:devDependencies
eslint-plugin-storybook	package.json	/^    "eslint-plugin-storybook": "^0.6.12",$/;"	s	object:devDependencies
eslint.codeActionsOnSave.mode	.vscode/settings.json	/^  "eslint.codeActionsOnSave.mode": "problems",$/;"	s
eslint.lintTask.enable	.vscode/settings.json	/^  "eslint.lintTask.enable": false,$/;"	b
eslint.options	.vscode/settings.json	/^  "eslint.options": { "cache": true },$/;"	o
eslint.validate	.vscode/settings.json	/^  "eslint.validate": ["javascript", "javascriptreact", "typescript", "typescriptreact"],$/;"	a
estimateTokensUsage	lib/shared/src/chat/transcript/index.ts	/^function estimateTokensUsage(message: Message): number {$/;"	f
event	lib/shared/src/sourcegraph-api/completions/client.ts	/^        for (const event of events) {$/;"	C	method:SourcegraphCompletionsClient.sendEvents
event	lib/shared/src/sourcegraph-api/completions/parse.ts	/^        const event = parseEvent(eventsBuffer.slice(eventStartIndex, eventEndIndex))$/;"	C	function:parseEvents
event	vscode/src/chat/ChatViewProvider.ts	/^            const event = {$/;"	C
event	vscode/src/completions/logger.ts	/^    const event = displayedCompletions.get(id)$/;"	C	function:suggest
event	vscode/src/log.ts	/^            for (const event of events) {$/;"	C	function:onEvents
eventLine	lib/shared/src/sourcegraph-api/completions/parse.ts	/^    const [eventLine, dataLine] = eventBuffer.split('\\n')$/;"	C	function:parseEvent
eventLogger	vscode/src/services/EventLogger.ts	/^        eventLogger.log(eventName, anonymousUserID, argument, publicArgument)$/;"	C	function:logEvent
eventLogger	vscode/src/services/EventLogger.ts	/^export let eventLogger: EventLogger | null = null$/;"	v
eventType	lib/shared/src/sourcegraph-api/completions/parse.ts	/^    const eventType = eventLine.slice(EVENT_LINE_PREFIX.length)$/;"	C	function:parseEventType
eventType	lib/shared/src/sourcegraph-api/completions/parse.ts	/^    const eventType = parseEventType(eventLine)$/;"	C	function:parseEvent
eventValue	vscode/src/chat/ChatViewProvider.ts	/^        const eventValue = isLoggedOut ? 'disconnected' : authStatus.isLoggedIn ? 'connected' : /;"	C
events	lib/shared/src/sourcegraph-api/completions/parse.ts	/^    const events: Event[] = []$/;"	C	function:parseEvents
events	lib/shared/src/sourcegraph-api/completions/parse.ts	/^    events: Event[]$/;"	p	interface:EventsParseResult
examples	vscode/package.json	/^          "examples": "https:\/\/example.sourcegraph.com",$/;"	s	object:contributes.configuration.properties.cody.serverEndpoint
examples	vscode/package.json	/^          "examples": [$/;"	a	object:contributes.configuration.properties.cody.codebase
examples	vscode/package.json	/^          "examples": [$/;"	a	object:contributes.configuration.properties.cody.customHeaders
excerpt	lib/shared/src/plugins/built-in/confluence.ts	/^    excerpt: string$/;"	p	interface:SearchResult
exclude	agent/tsconfig.json	/^  "exclude": ["dist"],$/;"	a
exclude	cli/tsconfig.json	/^  "exclude": ["dist"],$/;"	a
exclude	lib/shared/tsconfig.json	/^  "exclude": ["dist"],$/;"	a
exclude	lib/ui/tsconfig.json	/^  "exclude": ["dist"],$/;"	a
exclude	slack/tsconfig.json	/^  "exclude": ["dist"],$/;"	a
exclude	tsconfig.json	/^  "exclude": ["dist", "node_modules"],$/;"	a
exclude	vscode/scripts/tsconfig.json	/^  "exclude": ["dist"],$/;"	a
exclude	vscode/test/completions/tsconfig.json	/^  "exclude": [],$/;"	a
exclude	vscode/test/integration/tsconfig.json	/^  "exclude": ["testdata"],$/;"	a
exclude	vscode/tsconfig.json	/^  "exclude": ["scripts", "dist", "test\/integration"],$/;"	a
exclude	web/tsconfig.json	/^  "exclude": ["dist"],$/;"	a
excludeSelection	.vscode/cody.json	/^        "excludeSelection": true$/;"	b	object:recipes.Compare Files in Opened Tabs.context
excludeSelection	.vscode/cody.json	/^        "excludeSelection": true$/;"	b	object:recipes.Generate README.md for Current Directory.context
excludeSelection	.vscode/cody.json	/^        "excludeSelection": true,$/;"	b	object:recipes.Commit Message for Current Changes.context
excludeSelection	.vscode/cody.json	/^        "excludeSelection": true,$/;"	b	object:recipes.Debug last error from Cody app.context
excludeSelection	lib/shared/src/chat/recipes/my-prompt.ts	/^    excludeSelection: false,$/;"	C
excludeSelection	lib/shared/src/chat/recipes/my-prompt.ts	/^    excludeSelection?: boolean$/;"	p	interface:CodyPromptContext
excludeSelection	vscode/resources/samples/user-cody.json	/^        "excludeSelection": true$/;"	b	object:recipes.Compare Files in Opened Tabs.context
excludeSelection	vscode/resources/samples/workspace-cody.json	/^        "excludeSelection": true$/;"	b	object:recipes.Generate README.md for Current Directory.context
excludeSelection	vscode/resources/samples/workspace-cody.json	/^        "excludeSelection": true,$/;"	b	object:recipes.Commit Message for Current Changes.context
exeCommand	vscode/src/my-cody/MyToolsProvider.ts	/^    public async exeCommand(command: string, runFromWSRoot = true): Promise<string | undefined> /;"	m	class:MyToolsProvider
exec	vscode/src/rg.ts	/^const exec = promisify(exec_)$/;"	C
execFile	cli/src/gitHelpers/index.ts	/^const execFile = promisify(_execFile)$/;"	C
execFile	cli/src/gitHelpers/testHelpers.ts	/^const execFile = promisify(_execFile)$/;"	C
executeRecipe	agent/src/index.test.ts	/^    public async executeRecipe(id: RecipeID, humanChatInput: string) {$/;"	m	class:TestClient
executeRecipe	lib/shared/src/chat/client.ts	/^    executeRecipe: ($/;"	p	interface:Client
executeRecipe	lib/shared/src/chat/useClient.ts	/^    const executeRecipe = useCallback($/;"	C
executeRecipe	lib/shared/src/chat/useClient.ts	/^    executeRecipe: ($/;"	p	interface:CodyClient
executeRecipe	vscode/src/main.ts	/^    const executeRecipe = async (recipe: RecipeID, openChatView = true): Promise<void> => {$/;"	C
executeRg	vscode/src/chat/fastFileFinder.ts	/^async function executeRg(rgPath: string, rootPath: string, searchPattern: string, maxDepth?: num/;"	f
executionInfos	lib/shared/src/plugins/api/index.ts	/^    const executionInfos = await Promise.all($/;"	C
exists	lib/shared/src/hallucinations-detector/index.ts	/^        const exists = filePathsExist[filePath]$/;"	C	function:detectTokens
expandHomeDir	vscode/src/services/LocalAppDetector.ts	/^function expandHomeDir(path: string, homeDir: string | null): string {$/;"	f
expandedTerms	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const expandedTerms = await this.userQueryToExpandedKeywords(query)$/;"	C	method:LocalKeywordContextFetcher.userQueryToKeywordQuery
expect	vscode/src/chat/utils.test.ts	/^        expect(newAuthStatus(endpoint, !isDotComOrApp, validUser, !verifiedEmail, !codyEnabled, /;"	C
expect	vscode/src/chat/utils.test.ts	/^        expect(newAuthStatus(endpoint, !isDotComOrApp, validUser, verifiedEmail, codyEnabled, si/;"	C
expect	vscode/src/chat/utils.test.ts	/^        expect(newAuthStatus(endpoint, isDotComOrApp, validUser, !verifiedEmail, codyEnabled, si/;"	C
expect	vscode/src/chat/utils.test.ts	/^        expect(newAuthStatus(endpoint, isDotComOrApp, validUser, verifiedEmail, codyEnabled, sit/;"	C
expect	vscode/src/completions/completion.test.ts	/^        expect(requests).toHaveLength(0)$/;"	C
expect	vscode/src/configuration.test.ts	/^        expect(getConfiguration(config)).toEqual({$/;"	C
expect	vscode/src/non-stop/diff.test.ts	/^        expect(diff.clean).toBe(true)$/;"	C
expected	vscode/src/chat/utils.test.ts	/^        const expected = { ...unauthenticatedStatus, endpoint }$/;"	C
expected	vscode/src/chat/utils.test.ts	/^        const expected = {$/;"	C
expectedHighlightedTokensText	lib/shared/src/hallucinations-detector/index.test.ts	/^const expectedHighlightedTokensText = `# Title$/;"	C
expectedPrompt	lib/shared/src/chat/transcript/transcript.test.ts	/^        const expectedPrompt = [$/;"	C
experimentalChatPredictions	lib/shared/src/configuration.ts	/^    experimentalChatPredictions: boolean$/;"	p	interface:Configuration
experimentalCustomRecipes	lib/shared/src/configuration.ts	/^    experimentalCustomRecipes: boolean$/;"	p	interface:Configuration
experimentalGuardrails	lib/shared/src/configuration.ts	/^    experimentalGuardrails: boolean$/;"	p	interface:Configuration
experimentalNonStop	lib/shared/src/configuration.ts	/^    experimentalNonStop: boolean$/;"	p	interface:Configuration
explanation	lib/shared/src/codebase-context/rerank.ts	/^    const files: { filename: string; explanation: string }[] = items.map((item: any) => ({$/;"	C	function:parseXml
export	cli/src/client/completions.ts	/^export function streamCompletions(client: SourcegraphCompletionsClient, messages: Message[], cb:/;"	C
export	cli/src/gitHelpers/testHelpers.ts	/^export async function withTemporaryGitRepository<T>({$/;"	C
export	lib/shared/src/chat/chat.ts	/^export class ChatClient {$/;"	C
export	lib/shared/src/chat/recipes/helpers.ts	/^export const commandRegex = {$/;"	C
export	lib/shared/src/chat/recipes/helpers.ts	/^export function getFileExtension(fileName: string): string {$/;"	C	function:getContextMessagesFromSelection
export	lib/shared/src/chat/recipes/helpers.ts	/^export function getNormalizedLanguageName(extension: string): string {$/;"	C
export	lib/shared/src/chat/recipes/langs.ts	/^export const languageNames = Array.from(Object.keys(languageMarkdownID))$/;"	C
export	lib/shared/src/intent-detector/client.ts	/^export class SourcegraphIntentDetectorClient implements IntentDetector {$/;"	C
export	lib/ui/.storybook/main.ts	/^export default config$/;"	C
export	slack/src/services/sourcegraph-client.ts	/^export const intentDetector = new SourcegraphIntentDetectorClient(sourcegraphClient)$/;"	C
export	vscode/.storybook/main.ts	/^export default config$/;"	C
export	vscode/src/chat/protocol.ts	/^export const unauthenticatedStatus = {$/;"	C
export	vscode/src/completions/context-embeddings.ts	/^export function getContextFromEmbeddings(options: Options): ReferenceSnippet[] {$/;"	C
export	vscode/src/my-cody/InputMenu.ts	/^export async function showPromptCommandInput(): Promise<string | void> {$/;"	C
export	vscode/src/services/AuthMenus.ts	/^export const LoginMenuOptionItems = [$/;"	C
export	vscode/src/services/LocalAppFsPaths.ts	/^export interface AppJson {$/;"	C
export	web/src/settings/useConfig.ts	/^export type WebConfiguration = ClientInit['config']$/;"	C
express	completions-review-tool/server.js	/^const express = require('express')$/;"	C
express	vscode/package.json	/^    "express": "^4.18.2",$/;"	s	object:devDependencies
extPath	vscode/src/services/DecorationProvider.ts	/^        private extPath: string,$/;"	p	class:DecorationProvider
extends	.stylelintrc.json	/^  "extends": ["stylelint-config-standard", "stylelint-config-prettier"],$/;"	a
extends	agent/.eslintrc.json	/^  "extends": "..\/.eslintrc.js",$/;"	s
extends	agent/tsconfig.json	/^  "extends": "..\/tsconfig.base.json",$/;"	s
extends	cli/.eslintrc.json	/^  "extends": "..\/.eslintrc.js",$/;"	s
extends	cli/tsconfig.json	/^  "extends": "..\/tsconfig.base.json",$/;"	s
extends	completions-review-tool/.eslintrc.json	/^  "extends": "..\/.eslintrc.js",$/;"	s
extends	completions-review-tool/tsconfig.json	/^  "extends": "..\/tsconfig.base.json",$/;"	s
extends	lib/shared/.eslintrc.json	/^  "extends": "..\/..\/.eslintrc.js",$/;"	s
extends	lib/shared/tsconfig.json	/^  "extends": "..\/..\/tsconfig.base.json",$/;"	s
extends	lib/ui/.eslintrc.json	/^  "extends": "..\/..\/.eslintrc.js",$/;"	s
extends	lib/ui/tsconfig.json	/^  "extends": "..\/..\/tsconfig.base.json",$/;"	s
extends	renovate.json	/^  "extends": ["local>sourcegraph\/renovate-config"]$/;"	a
extends	slack/.eslintrc.json	/^  "extends": "..\/.eslintrc.js",$/;"	s
extends	slack/tsconfig.json	/^  "extends": "..\/tsconfig.base.json",$/;"	s
extends	tsconfig.base.json	/^  "extends": "@sourcegraph\/tsconfig",$/;"	s
extends	tsconfig.json	/^  "extends": ".\/tsconfig.base.json",$/;"	s
extends	vscode/.eslintrc.json	/^  "extends": "..\/.eslintrc.js",$/;"	s
extends	vscode/scripts/tsconfig.json	/^  "extends": "..\/..\/tsconfig.base.json",$/;"	s
extends	vscode/test/completions/tsconfig.json	/^  "extends": "..\/..\/tsconfig.json",$/;"	s
extends	vscode/test/integration/tsconfig.json	/^  "extends": "..\/..\/tsconfig.json",$/;"	s
extends	vscode/tsconfig.json	/^  "extends": "..\/tsconfig.base.json",$/;"	s
extends	web/.eslintrc.json	/^  "extends": "..\/.eslintrc.js",$/;"	s
extends	web/tsconfig.json	/^  "extends": "..\/tsconfig.base.json",$/;"	s
extension	lib/shared/src/chat/recipes/context-search.ts	/^            const extension = getFileExtension(file.fileName)$/;"	C	method:ContextSearch.displaySearchResults
extension	lib/shared/src/chat/recipes/generate-docstring.ts	/^        const extension = getFileExtension(selection.fileName)$/;"	C	method:GenerateDocstring.getInteraction
extension	lib/shared/src/chat/recipes/generate-test.ts	/^        const extension = getFileExtension(selection.fileName)$/;"	C	method:GenerateTest.getInteraction
extension	lib/shared/src/chat/recipes/improve-variable-names.ts	/^        const extension = getFileExtension(selection.fileName)$/;"	C	method:ImproveVariableNames.getInteraction
extensionDetails	lib/shared/src/telemetry/EventLogger.ts	/^            extensionDetails: this.extensionDetails,$/;"	C	method:EventLogger.log
extensionDetails	lib/shared/src/telemetry/EventLogger.ts	/^        private extensionDetails: ExtensionDetails,$/;"	p	class:EventLogger
extensionDetails	vscode/src/services/EventLogger.ts	/^const extensionDetails: ExtensionDetails = { ide: 'VSCode', ideExtensionType: 'Cody' }$/;"	C
extensionDevelopmentPath	vscode/test/e2e/helpers.ts	/^            const extensionDevelopmentPath = codyRoot$/;"	C
extensionDevelopmentPath	vscode/test/integration/main.ts	/^    const extensionDevelopmentPath = vscodeCodyRoot$/;"	C	function:main
extensionPath	vscode/src/chat/ChatViewProvider.ts	/^        const extensionPath = vscode.Uri.file(this.extensionPath)$/;"	C
extensionPath	vscode/src/my-cody/MyPromptController.ts	/^        const extensionPath = this.context.extensionPath$/;"	C	method:MyPromptController.addJSONFile
extensionPath	vscode/src/services/InlineAssist.ts	/^    const extensionPath = vscode.Uri.file(extPath)$/;"	C	function:getIconPath
extensionTestsPath	vscode/test/integration/main.ts	/^    const extensionTestsPath = path.resolve(vscodeCodyRoot, 'dist', 'tsc', 'test', 'integration'/;"	C	function:main
extensionVersion	vscode/src/chat/protocol.ts	/^    extensionVersion: string$/;"	p	interface:LocalEnv
extensionVersion	vscode/src/services/LocalAppDetector.ts	/^    extensionVersion: version,$/;"	C
extensions	vscode/.eslintrc.json	/^    "react\/jsx-filename-extension": [1, { "extensions": [".ts", ".tsx"] }],$/;"	a	object:rules.react/jsx-filename-extension.1
extensions	web/.eslintrc.json	/^    "react\/jsx-filename-extension": [1, { "extensions": [".ts", ".tsx"] }],$/;"	a	object:rules.react/jsx-filename-extension.1
extensionsDirectory	vscode/test/e2e/helpers.ts	/^            const extensionsDirectory = mkdtempSync(path.join(tmpdir(), 'cody-vsce'))$/;"	C
extraContext	lib/shared/src/chat/recipes/inline-chat.ts	/^        const extraContext = await codebaseContext.getContextMessages(text, {$/;"	C	method:InlineChat.getContextMessages
extractDataOrError	lib/shared/src/sourcegraph-api/graphql/client.ts	/^                        extractDataOrError(response, data => {})$/;"	C	method:SourcegraphGraphQLAPIClient.isCodyEnabled
extractDataOrError	lib/shared/src/sourcegraph-api/graphql/client.ts	/^function extractDataOrError<T, R>(response: APIResponse<T> | Error, extract: (data: T) => R): R /;"	f
extractFromCodeBlock	vscode/src/completions/text-processing.ts	/^export function extractFromCodeBlock(completion: string): string {$/;"	f
failedSize	vscode/src/non-stop/TaskViewProvider.ts	/^        const failedSize = this.failed.size$/;"	C
failedSize	vscode/src/non-stop/TaskViewProvider.ts	/^        let ready = tasksSize - failedSize$/;"	v
fallbackPolling	tsconfig.base.json	/^    "fallbackPolling": "dynamicPriority"$/;"	s	object:watchOptions
fast	lib/shared/src/sourcegraph-api/completions/types.ts	/^    fast?: boolean$/;"	p	interface:CompletionParameters
fastChatModel	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    fastChatModel?: string$/;"	p	interface:CodyLLMSiteConfiguration
fastChatModelMaxTokens	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    fastChatModelMaxTokens?: number$/;"	p	interface:CodyLLMSiteConfiguration
fastFilesExist	vscode/src/chat/fastFileFinder.ts	/^export async function fastFilesExist($/;"	f
fetchAPINinjas	lib/shared/src/plugins/built-in/lib/fetch-api-ninjas.ts	/^export const fetchAPINinjas = (url: string, apiKey: string): Promise<any> =>$/;"	C
fetchAndSaveEmbeddings	vscode/src/completions/context-embeddings.ts	/^async function fetchAndSaveEmbeddings(options: FetchEmbeddingsOptions): Promise<void> {$/;"	f
fetchFileContent	slack/src/services/github-client.ts	/^export async function fetchFileContent(options: FetchFileContentOptions) {$/;"	f
fetchFileMatches	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    private async fetchFileMatches($/;"	m	class:LocalKeywordContextFetcher
fetchFileStats	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    private async fetchFileStats($/;"	m	class:LocalKeywordContextFetcher
fetchFilesDuration	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const fetchFilesDuration = performance.now() - fetchFilesStart$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
fetchFilesStart	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const fetchFilesStart = performance.now()$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
fetchKeywordFiles	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    private async fetchKeywordFiles($/;"	m	class:LocalKeywordContextFetcher
fetchRepositoryNames	lib/shared/src/chat/useClient.ts	/^    const fetchRepositoryNames = useCallback($/;"	C
fetchRepositoryNames	lib/shared/src/chat/useClient.ts	/^    fetchRepositoryNames: (count: number) => Promise<string[]>$/;"	p	interface:CodyClient
fetchURL	lib/shared/src/plugins/built-in/url-reader.ts	/^async function fetchURL(url: string): Promise<PluginFunctionOutput> {$/;"	f
file	lib/shared/src/chat/recipes/context-search.ts	/^        for (const file of resultContext.results) {$/;"	C	method:ContextSearch.displaySearchResults
file	lib/shared/src/chat/recipes/my-prompt.ts	/^    for (const file of filesInDir) {$/;"	C	function:populateVscodeDirContextMessage
file	lib/shared/src/codebase-context/messages.ts	/^    file?: ContextFile$/;"	p	interface:ContextMessage
file	vscode/src/non-stop/FixupCodeLenses.ts	/^        const file = this.files.maybeFileForUri(document.uri)$/;"	C
file	vscode/src/non-stop/FixupController.ts	/^            const file = this.files.maybeForUri(editor.document.uri)$/;"	C
file	vscode/src/non-stop/FixupController.ts	/^        for (const [file, editors] of editorsByFile.entries()) {$/;"	C
file	vscode/src/non-stop/FixupDocumentEditObserver.ts	/^        const file = this.provider_.maybeFileForUri(event.document.uri)$/;"	C	method:FixupDocumentEditObserver.textDocumentChanged
file	vscode/src/non-stop/FixupFileObserver.ts	/^            const file = this.uriToFile_.get(oldUri)$/;"	C	method:FixupFileObserver.didRenameFiles
file	vscode/src/non-stop/FixupFileObserver.ts	/^            const file = this.uriToFile_.get(uri)$/;"	C	method:FixupFileObserver.didDeleteFiles
file	vscode/src/rg.ts	/^        for (const file of files) {$/;"	C	function:getRgPath
file	vscode/test/integration/index.ts	/^            for (const file of files) {$/;"	C	function:run
fileContent	completions-review-tool/src/models/completions.server.ts	/^    const fileContent = fs.readFileSync(filePath, 'utf-8')$/;"	C
fileContent	lib/shared/src/chat/recipes/context-search.ts	/^            const fileContent = this.sanitizeContent(file.content)$/;"	C	method:ContextSearch.displaySearchResults
fileContent	lib/shared/src/chat/recipes/my-prompt.ts	/^            const fileContent = await vscode.workspace.openTextDocument(doc.uri)$/;"	C	method:MyPrompt.getEditorOpenTabsContext
fileContent	lib/shared/src/chat/recipes/my-prompt.ts	/^            const fileContent = await vscode.workspace.openTextDocument(fileUri)$/;"	C	function:populateVscodeDirContextMessage
fileContent	vscode/src/non-stop/FixupContentStore.ts	/^type fileContent = string$/;"	a
fileContext	lib/shared/src/chat/recipes/my-prompt.ts	/^            const fileContext = await MyPrompt.getEditorDirContext(isContextRequired.directoryPa/;"	C	method:MyPrompt.getContextMessages
fileContext	lib/shared/src/chat/recipes/my-prompt.ts	/^            const fileContext = await MyPrompt.getFilePathContext(isContextRequired.filePath)$/;"	C	method:MyPrompt.getContextMessages
fileCounts	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                    const fileCounts: { [filename: string]: number } = {}$/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
fileCounts	vscode/src/local-context/local-keyword-context-fetcher.ts	/^            const fileCounts = termFileCountsArr[i].fileCounts$/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
fileExistFunc	vscode/src/chat/ChatViewProvider.ts	/^                    const fileExistFunc = (filePaths: string[]): Promise<{ [filePath: string]: b/;"	C
fileExt	lib/shared/src/chat/recipes/my-prompt.ts	/^                const fileExt = currentFileName ? getFileExtension(currentFileName) : '*'$/;"	C	method:MyPrompt.getEditorDirContext
fileExtRipgrepParams	vscode/src/local-context/local-keyword-context-fetcher.ts	/^const fileExtRipgrepParams = [$/;"	C
fileMatches	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const fileMatches = await fileMatchesPromise$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
fileMatchesPromise	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const fileMatchesPromise = this.fetchFileMatches(query, rootPath)$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
fileName	lib/shared/src/chat/recipes/my-prompt.ts	/^            const fileName = vscode.workspace.asRelativePath(doc.uri.fsPath)$/;"	C	method:MyPrompt.getEditorOpenTabsContext
fileName	lib/shared/src/chat/recipes/my-prompt.ts	/^            const fileName = vscode.workspace.asRelativePath(packageJsonUri.fsPath)$/;"	C	method:MyPrompt.getPackageJsonContext
fileName	lib/shared/src/chat/recipes/my-prompt.ts	/^        const fileName = vscode.workspace.asRelativePath(filePath)$/;"	C	method:MyPrompt.getFilePathContext
fileName	lib/shared/src/chat/recipes/my-prompt.ts	/^        const fileName = vscode.workspace.asRelativePath(fileUri.fsPath)$/;"	C	function:populateVscodeDirContextMessage
fileName	lib/shared/src/chat/recipes/non-stop.ts	/^        const { instruction, fileName, precedingText, selectedText, followingText } = taskParame/;"	C	method:NonStop.getInteraction
fileName	lib/shared/src/chat/transcript/index.ts	/^                                const { fileName } = message as any as OldContextMessage$/;"	C	method:Transcript.fromJSON
fileName	lib/shared/src/codebase-context/messages.ts	/^    fileName: string$/;"	p	interface:ContextFile
fileName	lib/shared/src/codebase-context/messages.ts	/^    fileName?: string$/;"	p	interface:OldContextMessage
fileName	lib/shared/src/editor/index.ts	/^    fileName: string$/;"	p	interface:ActiveTextEditorSelection
fileName	lib/shared/src/editor/index.ts	/^    fileName: string$/;"	p	interface:ActiveTextEditorVisibleContent
fileName	lib/shared/src/local-context/index.ts	/^    fileName: string$/;"	p	interface:ContextResult
fileName	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    fileName: string$/;"	p	interface:EmbeddingsSearchResult
fileName	vscode/src/completions/context-local.ts	/^    fileName: string$/;"	p	interface:JaccardMatchWithFilename
fileName	vscode/src/completions/context.ts	/^    fileName: string$/;"	p	interface:ReferenceSnippet
fileName	vscode/src/completions/index.ts	/^            fileName: path.normalize(vscode.workspace.asRelativePath(document.fileName ?? '')),$/;"	C
fileName	vscode/src/completions/providers/provider.ts	/^    fileName: string$/;"	p	interface:ProviderOptions
fileName	vscode/src/editor/vscode-editor.ts	/^            fileName: vscode.workspace.asRelativePath(activeEditor.document.uri.fsPath),$/;"	C	method:VSCodeEditor.getActiveTextEditorVisibleContent
fileName	vscode/src/editor/vscode-editor.ts	/^    public get fileName(): string {$/;"	m	class:VSCodeEditor
fileName	vscode/src/local-context/filename-context-fetcher.ts	/^            for (const fileName of remainingFiles) {$/;"	C	method:FilenameContextFetcher.getContext
fileName	vscode/src/my-cody/MyToolsProvider.ts	/^                    const fileName = getFileNameFromPath(selectedFile[0].path)$/;"	C	method:MyToolsProvider.runFileSystemCommand
fileName	vscode/src/my-cody/helper.ts	/^    const fileName = '.vscode\/cody.json'$/;"	C	function:createFileWatch
fileName	vscode/src/non-stop/FixupContentStore.ts	/^type fileName = string$/;"	a
fileName	vscode/src/non-stop/FixupFile.ts	/^    public get fileName(): string {$/;"	m	class:FixupFile
fileName	vscode/src/non-stop/TaskViewProvider.ts	/^type fileName = string$/;"	a
fileName	vscode/src/non-stop/utils.test.ts	/^        const fileName = 'file'$/;"	C
fileName	vscode/src/non-stop/utils.test.ts	/^        const fileName = 'file.txt'$/;"	C
fileNameLower	vscode/src/local-context/filename-context-fetcher.ts	/^                const fileNameLower = fileName.toLocaleLowerCase()$/;"	C	method:FilenameContextFetcher.getContext
filePath	agent/src/protocol.ts	/^    filePath: string$/;"	p	interface:TextDocument
filePath	completions-review-tool/src/models/completions.server.ts	/^    const filePath = path.join(dataDir, file)$/;"	C
filePath	lib/shared/src/chat/context.ts	/^    filePath?: string$/;"	p	interface:ChatContextStatus
filePath	lib/shared/src/chat/recipes/my-prompt.ts	/^    filePath?: string$/;"	p	interface:CodyPromptContext
filePath	lib/shared/src/codebase-context/index.ts	/^                const { content, filePath, repoName, revision } = result$/;"	C	method:CodebaseContext.getUnifiedContextMessages
filePath	lib/shared/src/editor/index.ts	/^    filePath: string$/;"	p	interface:ActiveTextEditor
filePath	lib/shared/src/hallucinations-detector/index.ts	/^        const exists = filePathsExist[filePath]$/;"	C	function:detectTokens
filePath	lib/shared/src/hallucinations-detector/index.ts	/^    for (const [filePath, fullMatches] of Object.entries(filePathToFullMatch)) {$/;"	C	function:detectTokens
filePath	lib/shared/src/unified-context/index.ts	/^    filePath: string$/;"	p	interface:FileChunkContext
filePath	vscode/src/chat/fastFileFinder.ts	/^        for (const filePath of [...unvalidatedPaths]) {$/;"	C
filePath	vscode/src/chat/fastFileFinder.ts	/^    for (const filePath of filePaths) {$/;"	C
filePath	vscode/src/my-cody/MyToolsProvider.ts	/^                    const filePath = selectedFile[0].path$/;"	C	method:MyToolsProvider.runFileSystemCommand
filePath	vscode/src/non-stop/FixupContentStore.ts	/^        for (const [filePath, tasks] of this.tasksByFilePath) {$/;"	C
filePath	vscode/src/non-stop/utils.test.ts	/^        const filePath = '\/path\/to\/file.txt'$/;"	C
filePath	vscode/src/non-stop/utils.test.ts	/^        const filePath = 'file'$/;"	C
filePath	vscode/src/non-stop/utils.test.ts	/^        const filePath = 'file.txt'$/;"	C
filePathCharacters	lib/shared/src/hallucinations-detector/index.ts	/^const filePathCharacters = '[\\\\@\\\\*\\\\w\\\\\/\\\\._-]'$/;"	C
filePathContains	vscode/src/chat/fastFileFinder.ts	/^export function filePathContains(container: string, contained: string): boolean {$/;"	f
filePathRegexp	lib/shared/src/hallucinations-detector/index.ts	/^const filePathRegexp = new RegExp(filePathRegexpParts.join(''), 'g')$/;"	C
filePathRegexpParts	lib/shared/src/hallucinations-detector/index.ts	/^const filePathRegexpParts = [$/;"	C
filePathToFullMatch	lib/shared/src/hallucinations-detector/index.ts	/^    const filePathToFullMatch: { [filePath: string]: Set<string> } = {}$/;"	C	function:detectTokens
filePathsExist	lib/shared/src/hallucinations-detector/index.ts	/^    const filePathsExist = await filesExist([...Object.keys(filePathToFullMatch)])$/;"	C	function:detectTokens
filePathsExist	vscode/src/chat/fastFileFinder.ts	/^    const filePathsExist: { [filePath: string]: boolean } = {}$/;"	C
fileRootPathCharacters	lib/shared/src/hallucinations-detector/index.ts	/^const fileRootPathCharacters = '[\\\\@\\\\*\\\\w\\\\._-]'$/;"	C
fileSize	lib/shared/src/chat/recipes/my-prompt.ts	/^        const fileSize = await vscode.workspace.fs.stat(fileUri)$/;"	C	function:populateVscodeDirContextMessage
fileStats	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const fileStats = await fileStatsPromise$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
fileStatsPromise	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const fileStatsPromise = this.fetchFileStats(query, rootPath)$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
fileTasks	vscode/src/non-stop/FixupDecorator.ts	/^        let fileTasks = this.decorations_.get(task.fixupFile)$/;"	v
fileTermCounts	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const fileTermCounts: { [filename: string]: { [stem: string]: number } } = {}$/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
fileTermCounts	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const fileTermCounts: {$/;"	C	method:LocalKeywordContextFetcher.fetchFileStats
fileTermCounts	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const { fileTermCounts, termTotalFiles, totalFiles } = fileMatches$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
fileToRemove	vscode/src/my-cody/MyToolsProvider.ts	/^                const fileToRemove = await getFileToRemove(Array.from(this.tools.keys()))$/;"	C	method:MyToolsProvider.runFileSystemCommand
fileType	vscode/src/chat/ChatViewProvider.ts	/^            const fileType = title === 'add-workspace-file' ? 'workspace' : 'user'$/;"	C
fileType	vscode/src/my-cody/MyPromptController.ts	/^            const fileType = await showRecipeTypeQuickPick(selected, this.builder.promptSize)$/;"	C	method:MyPromptController.menu
fileTypeActions	vscode/src/my-cody/MyPromptController.ts	/^    private async fileTypeActions(action: string, fileType: CodyPromptType): Promise<void> {$/;"	m	class:MyPromptController
fileUri	lib/shared/src/chat/recipes/context-search.ts	/^                const fileUri = vscode.Uri.joinPath(vscode.Uri.file(wsRootPath), file.fileName)$/;"	C	method:ContextSearch.displaySearchResults
fileUri	lib/shared/src/chat/recipes/inline-touch.ts	/^        const fileUri = vscode.Uri.file(newFsPath)$/;"	C
fileUri	lib/shared/src/chat/recipes/my-prompt.ts	/^        const fileUri = vscode.Uri.file(filePath)$/;"	C	method:MyPrompt.getFilePathContext
fileUri	lib/shared/src/chat/recipes/my-prompt.ts	/^        const fileUri = vscode.Uri.joinPath(dirUri, file[0])$/;"	C	function:populateVscodeDirContextMessage
fileUri	lib/shared/src/hallucinations-detector/index.ts	/^        const fileUri = `vscode:\/\/file${workspaceRootPath}\/${filePath}`$/;"	C	function:getHighlightedTokenHTML
fileUri	vscode/src/my-cody/MyPromptController.ts	/^        const fileUri = constructFileUri(filePath, this.tools.getUserInfo()?.workspaceRoot)$/;"	C	method:MyPromptController.open
fileUri	vscode/src/services/DecorationProvider.ts	/^        private fileUri: vscode.Uri$/;"	p	class:DecorationProvider
filename	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                const b = fileStats[filename].bytesSearched$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
filename	vscode/src/local-context/local-keyword-context-fetcher.ts	/^            for (const [filename, count] of Object.entries(fileCounts)) {$/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
filename	vscode/test/completions/run-code-completions-on-dataset.ts	/^    const filename = path.join(ENVIRONMENT_CONFIG.OUTPUT_PATH, `completions-${timestamp}.json`)$/;"	C	function:generateCompletionsForDataset
filenameFragments	vscode/src/local-context/filename-context-fetcher.ts	/^        const filenameFragments = await new Promise<string[]>((resolve, reject) => {$/;"	C	method:FilenameContextFetcher.queryToFileFragments
filenameFragments	vscode/src/local-context/filename-context-fetcher.ts	/^        const filenameFragments = await this.queryToFileFragments(query)$/;"	C	method:FilenameContextFetcher.getContext
filenameResults	lib/shared/src/codebase-context/index.ts	/^            const [keywordResults, filenameResults] = await Promise.all([keywordResultsPromise, /;"	C	method:CodebaseContext.getLocalContextMessages
filenameResultsPromise	lib/shared/src/codebase-context/index.ts	/^            const filenameResultsPromise = this.getFilenameSearchResults(query, options)$/;"	C	method:CodebaseContext.getLocalContextMessages
filenames	lib/shared/src/codebase-context/index.ts	/^        private filenames: FilenameContextFetcher | null,$/;"	p	class:CodebaseContext
filenamesWithScores	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const filenamesWithScores = Object.entries(fileTermCounts)$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
files	.eslintrc.js	/^      files: '*.story.tsx',$/;"	p	variable:anonymousObjectc892c5c20205
files	.eslintrc.js	/^      files: ['*.d.ts'],$/;"	p	variable:anonymousObjectc892c5c20105
files	.eslintrc.js	/^      files: ['vitest.workspace.js', 'vite.config.ts', 'vitest.config.ts', 'vitest.config.ts', '/;"	p	variable:anonymousObjectc892c5c20305
files	cli/package.json	/^  "files": [$/;"	a
files	lib/shared/package.json	/^  "files": [$/;"	a
files	lib/shared/src/chat/recipes/my-prompt.ts	/^        const files = openTabs.flatMap(group => group.tabs.map(tab => tab.input)) as vscode.TabI/;"	C	method:MyPrompt.getEditorOpenTabsContext
files	lib/shared/src/codebase-context/rerank.ts	/^    const files: { filename: string; explanation: string }[] = items.map((item: any) => ({$/;"	C	function:parseXml
files	lib/ui/package.json	/^  "files": [$/;"	a
files	node_modules/autopreview/package.json	/^  "files": [$/;"	a
files	tsconfig.json	/^  "files": [],$/;"	a
files	vscode/src/completions/context-local.ts	/^    const files = await getRelevantFiles(document, history)$/;"	C	function:getContextFromCurrentEditor
files	vscode/src/completions/context-local.ts	/^    const files: FileContents[] = []$/;"	C	function:getRelevantFiles
files	vscode/src/non-stop/FixupContentStore.ts	/^        const files = this.tasksByFilePath.get(fileName)$/;"	C
files	vscode/src/rg.ts	/^        const files = await new Promise<string[]>((resolve, reject) => {$/;"	C	function:getRgPath
files.exclude	.vscode/settings.json	/^  "files.exclude": {$/;"	o
filesExistMap	vscode/test/integration/local-search.test.ts	/^        const filesExistMap = await fastFilesExist(rgPath, workspaceFolders[0].uri.fsPath, [$/;"	C
filesInDir	lib/shared/src/chat/recipes/my-prompt.ts	/^                const filesInDir = (await vscode.workspace.fs.readDirectory(dirUri)).filter($/;"	C	method:MyPrompt.getEditorDirContext
filesInDir	lib/shared/src/chat/recipes/my-prompt.ts	/^            const filesInDir = await getFirstNFilesFromDir(dirUri, 10)$/;"	C	method:MyPrompt.getEditorDirContext
filesSearched	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const termFileCountsArr: { fileCounts: { [filename: string]: number }; filesSearched: nu/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
filesSearched	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        for (const { filesSearched } of termFileCountsArr) {$/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
filesSectionIndex	slack/src/slack/message-interaction.ts	/^        const filesSectionIndex = textWithoutFilters.lastIndexOf('*Files used*​')$/;"	C	function:cleanupMessageForPrompt
filesnamesWithScores	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const filesnamesWithScores = await this.fetchKeywordFiles(rootPath, query)$/;"	C	method:LocalKeywordContextFetcher.getContext
filter	lib/shared/src/plugins/built-in/github-issues.ts	/^    let filter = `org:${org ?? defaultOrg}`$/;"	v
filterCompletions	vscode/src/completions/index.ts	/^function filterCompletions(completions: Completion[]): Completion[] {$/;"	f
filtered	vscode/src/my-cody/MyPromptController.ts	/^        const filtered = new Map<string, CodyPrompt>()$/;"	C	method:MyPromptController.save
filteredArgs	vscode/src/my-cody/MyToolsProvider.ts	/^        const filteredArgs = args.map(arg => arg.replace(\/^~\\\/\/, homeDir))$/;"	C	method:MyToolsProvider.runCommand
filteredCommand	vscode/src/my-cody/MyToolsProvider.ts	/^        const filteredCommand = command.replace(\/(\\s~\\\/)\/g, ` ${homeDir}`)$/;"	C	method:MyToolsProvider.exeCommand
filteredHumanText	slack/src/slack/message-interaction.ts	/^    const filteredHumanText = truncateText(text, MAX_HUMAN_INPUT_TOKENS)$/;"	C	function:getSlackInteraction
filteredWords	vscode/src/completions/bestJaccardMatch.ts	/^    const filteredWords = winkUtils.tokens.removeWords(words)$/;"	C	function:getWords
find	vscode/src/my-cody/MyPromptController.ts	/^    public find(id: string): string {$/;"	m	class:MyPromptController
findFilePaths	lib/shared/src/hallucinations-detector/index.ts	/^export function findFilePaths(line: string): { fullMatch: string; pathMatch: string }[] {$/;"	f
findSubstringPosition	vscode/test/completions/utils.ts	/^export function findSubstringPosition(text: string, substring: string): vscode.Position | null {$/;"	f
finishedEating	lib/shared/src/chat/bot-response-multiplexer.test.ts	/^        let finishedEating = () => {}$/;"	v
firstComment	vscode/src/services/InlineController.ts	/^        const firstComment = this.thread.comments[0]$/;"	C
firstComment	vscode/src/services/InlineController.ts	/^        const firstComment = thread.comments[0]$/;"	C
firstInteraction	lib/shared/src/chat/recipes/recipe.ts	/^    firstInteraction: boolean$/;"	p	interface:RecipeContext
firstInteraction	lib/shared/src/chat/transcript/transcript.test.ts	/^        const firstInteraction = await chatQuestionRecipe.getInteraction($/;"	C
firstNewLineIndex	vscode/src/completions/multiline.ts	/^    const firstNewLineIndex = suffix.indexOf('\\n') + 1$/;"	C	function:shouldIncludeClosingLine
firstNonEmptySuffixLinePart	vscode/src/completions/text-processing.ts	/^    const firstNonEmptySuffixLinePart = getFirstNCharsPreservingLeadingSpaces($/;"	C	function:trimUntilSuffix
fixBadCompletionStart	vscode/src/completions/text-processing.ts	/^export function fixBadCompletionStart(completion: string): string {$/;"	f
fixOpenMarkdownCodeBlock	lib/shared/src/chat/viewHelpers.ts	/^function fixOpenMarkdownCodeBlock(text: string): string {$/;"	f
fixup	vscode/src/main.ts	/^    const fixup = new FixupController()$/;"	C
fixupController	vscode/src/test-support.ts	/^    public fixupController = new Rendezvous<FixupController>()$/;"	p	class:TestSupport
fixupFile	vscode/src/non-stop/FixupController.ts	/^        const fixupFile = this.files.forUri(documentUri)$/;"	C
fixupFile	vscode/src/non-stop/FixupTask.ts	/^        public readonly fixupFile: FixupFile,$/;"	p	class:FixupTask
fixupInProgress	vscode/src/services/InlineController.ts	/^        const fixupInProgress = this.currentTaskId.length > 0$/;"	C
fixupTaskList	vscode/src/non-stop/utils.ts	/^export const fixupTaskList: CodyTaskList = {$/;"	C
fixupTasks	vscode/src/test-support.ts	/^    public async fixupTasks(): Promise<FixupTask[]> {$/;"	m	class:TestSupport
fixups	lib/shared/src/editor/index.ts	/^    fixups: VsCodeFixupController$/;"	p	interface:ActiveTextEditorViewControllers
fixups	vscode/src/main.ts	/^    const controllers = { inline: commentController, fixups: fixup, prompt }$/;"	C
fixups	vscode/test/integration/task-controller.test.ts	/^        const fixups = await getFixupController()$/;"	C
fixups	vscode/test/integration/task-controller.test.ts	/^    const fixups = await getExtensionAPI().exports.testing?.fixupController.get()$/;"	C	function:getFixupController
followingText	lib/shared/src/chat/recipes/non-stop.ts	/^        const { instruction, fileName, precedingText, selectedText, followingText } = taskParame/;"	C	method:NonStop.getInteraction
followingText	lib/shared/src/editor/index.ts	/^    followingText: string$/;"	p	interface:ActiveTextEditorSelection
followingText	vscode/src/editor/vscode-editor.ts	/^        const followingText = activeEditor.document.getText($/;"	C	method:VSCodeEditor.createActiveTextEditorSelection
followingText	vscode/src/non-stop/FixupController.ts	/^        const followingText = document.getText($/;"	C
followingText	vscode/src/services/InlineController.ts	/^        const followingText = activeDocument.getText($/;"	C
font	lib/icons/package.json	/^    "font": "svgtofont --sources .\/svg-outlined --output .\/font && rm font\/*.{eot,svg}"$/;"	s	object:scripts
fontCharacter	vscode/package.json	/^          "fontCharacter": "\\\\0041"$/;"	s	object:contributes.icons.cody-logo.default
fontCharacter	vscode/package.json	/^          "fontCharacter": "\\\\0042"$/;"	s	object:contributes.icons.cody-logo-heavy.default
fontPath	vscode/package.json	/^          "fontPath": "dist\/webviews\/assets\/cody-icons.woff",$/;"	s	object:contributes.icons.cody-logo-heavy.default
fontPath	vscode/package.json	/^          "fontPath": "dist\/webviews\/assets\/cody-icons.woff",$/;"	s	object:contributes.icons.cody-logo.default
foodPromise	lib/shared/src/chat/bot-response-multiplexer.test.ts	/^        const foodPromise: Promise<void> = new Promise(resolve => {$/;"	C
foodTopic	lib/shared/src/chat/bot-response-multiplexer.test.ts	/^        const foodTopic: string[] = []$/;"	C
forUri	vscode/src/non-stop/FixupFileObserver.ts	/^    public forUri(uri: vscode.Uri): FixupFile {$/;"	m	class:FixupFileObserver
forceRead	vscode/src/completions/logger.ts	/^        const { suggestedAt, suggestionLoggedAt, startedAt, params, forceRead } = completionEven/;"	C	function:logSuggestionEvent
forceRead	vscode/src/completions/logger.ts	/^    forceRead: boolean$/;"	p	interface:CompletionEvent
format	package.json	/^    "format": "prettier '**\/{*.{js?(on),ts?(x),md,scss},.*.js?(on)}' --list-different --config /;"	s	object:scripts
format:check	package.json	/^    "format:check": "prettier '**\/{*.{js?(on),ts?(x),md,scss},.*.js?(on)}' --config .prettierrc/;"	s	object:scripts
formatURL	vscode/src/services/AuthProvider.ts	/^function formatURL(uri: string): string | null {$/;"	f
foundIndex	vscode/src/completions/history.ts	/^        const foundIndex = this.history.findIndex($/;"	C
frame	vscode/test/e2e/helpers.ts	/^        for (const frame of page.frames()) {$/;"	C	function:getCodySidebar
frequencyCounter	vscode/src/completions/bestJaccardMatch.ts	/^    const frequencyCounter = new Map<string, number>()$/;"	C	function:getWords
from	agent/src/editor.ts	/^        const from = offsets.offset(document.selection.start)$/;"	C
fromJSON	lib/shared/src/chat/transcript/index.ts	/^    public static fromJSON(json: TranscriptJSON): Transcript {$/;"	m	class:Transcript
fullCommand	vscode/src/my-cody/MyPromptController.ts	/^        const fullCommand = this.myPromptInProgress.context?.command$/;"	C	method:MyPromptController.getCommandOutput
fullCommand	vscode/src/my-cody/MyToolsProvider.ts	/^        const fullCommand = `${command} ${args.join(' ')}`$/;"	C	method:MyToolsProvider.runCommand
fullConfig	lib/shared/src/chat/client.ts	/^    const fullConfig = { debugEnable: false, ...config }$/;"	C	function:createClient
fullContext	lib/shared/src/chat/transcript/interaction.ts	/^        private fullContext: Promise<ContextMessage[]>,$/;"	p	class:Interaction
fullContext	lib/shared/src/chat/transcript/interaction.ts	/^    fullContext: ContextMessage[]$/;"	p	interface:InteractionJSON
fullMatch	lib/shared/src/hallucinations-detector/index.test.ts	/^            output: { pathMatch: string; fullMatch: string }[]$/;"	C
fullMatch	lib/shared/src/hallucinations-detector/index.ts	/^                    for (const { fullMatch, pathMatch } of findFilePaths(line)) {$/;"	C	function:detectTokens
fullMatch	lib/shared/src/hallucinations-detector/index.ts	/^        const fullMatch = m[0]$/;"	C
fullMatch	lib/shared/src/hallucinations-detector/index.ts	/^        for (const fullMatch of fullMatches) {$/;"	C	function:detectTokens
fullMatches	lib/shared/src/hallucinations-detector/index.ts	/^    for (const [filePath, fullMatches] of Object.entries(filePathToFullMatch)) {$/;"	C	function:detectTokens
function-disallowed-list	.stylelintrc.json	/^    "function-disallowed-list": ["rgb", "hsl"],$/;"	a	object:rules
future	completions-review-tool/remix.config.js	/^  future: {$/;"	p	property:module.exports
genRepos	lib/shared/src/guardrails/index.test.ts	/^const genRepos = (count: number) => {$/;"	C
generate:completions	vscode/package.json	/^    "generate:completions": "OUTFILE=\/tmp\/run-code-completions-on-dataset.js && esbuild .\/tes/;"	s	object:scripts
generateCommitMessage	cli/src/commands/commit/command.ts	/^async function generateCommitMessage($/;"	f
generateCompletions	vscode/src/completions/providers/anthropic.ts	/^    public async generateCompletions(abortSignal: AbortSignal, snippets: ReferenceSnippet[]): Pr/;"	m	class:AnthropicProvider
generateCompletions	vscode/src/completions/providers/provider.ts	/^    public abstract generateCompletions(abortSignal: AbortSignal, snippets: ReferenceSnippet[]):/;"	m	class:Provider
generateCompletions	vscode/src/completions/providers/unstable-codegen.ts	/^    public async generateCompletions(abortSignal: AbortSignal, snippets: ReferenceSnippet[]): Pr/;"	m	class:UnstableCodeGenProvider
generateCompletions	vscode/src/completions/providers/unstable-huggingface.ts	/^    public async generateCompletions(abortSignal: AbortSignal): Promise<Completion[]> {$/;"	m	class:UnstableHuggingFaceProvider
generateCompletions	vscode/src/completions/request-manager.test.ts	/^    public generateCompletions(): Promise<Completion[]> {$/;"	m	class:MockProvider
generateCompletionsForDataset	vscode/test/completions/run-code-completions-on-dataset.ts	/^async function generateCompletionsForDataset(codeSamples: string[]): Promise<void> {$/;"	f
generateLongTranscript	lib/shared/src/chat/transcript/transcript.test.ts	/^async function generateLongTranscript(): Promise<{ transcript: Transcript; tokensPerInteraction:/;"	f
get	lib/shared/src/editor/index.ts	/^    get(type?: string): Promise<string | null>$/;"	m	interface:VsCodeMyPromptController
get	vscode/src/completions/cache.ts	/^    public get(prefix: string, trim: boolean = true): CachedCompletions | undefined {$/;"	m	class:CompletionsCache
get	vscode/src/configuration.ts	/^    get<T>(section: (typeof CONFIG_KEY)[ConfigKeys], defaultValue?: T): T$/;"	m	interface:ConfigGetter
get	vscode/src/my-cody/CustomRecipesBuilder.ts	/^    public async get(): Promise<MyPrompts> {$/;"	m	class:CustomRecipesBuilder
get	vscode/src/my-cody/MyPromptController.ts	/^    public async get(type?: string, id?: string): Promise<string | null> {$/;"	m	class:MyPromptController
get	vscode/src/services/LocalStorageProvider.ts	/^    public get(key: string): string | null {$/;"	m	class:LocalStorage
get	vscode/src/services/SecretStorageProvider.ts	/^    get(key: string): Promise<string | undefined>$/;"	m	interface:SecretStorage
get	vscode/src/services/SecretStorageProvider.ts	/^    public async get(key: string): Promise<string | undefined> {$/;"	m	class:InMemorySecretStorage
get	vscode/src/services/SecretStorageProvider.ts	/^    public async get(key: string): Promise<string | undefined> {$/;"	m	class:VSCodeSecretStorage
get	vscode/src/test-support.ts	/^    public get(): Promise<T> {$/;"	m	class:Rendezvous
getAccessToken	vscode/src/services/SecretStorageProvider.ts	/^export async function getAccessToken(secretStorage: SecretStorage): Promise<string | null> {$/;"	f
getActiveFilePath	node_modules/autopreview/index.template.js	/^export function getActiveFilePath() {$/;"	f
getActiveTextEditor	lib/shared/src/editor/index.ts	/^    getActiveTextEditor(): ActiveTextEditor | null$/;"	m	interface:Editor
getActiveTextEditor	lib/shared/src/editor/index.ts	/^    public getActiveTextEditor(): ActiveTextEditor | null {$/;"	m	class:NoopEditor
getActiveTextEditor	vscode/src/editor/vscode-editor.ts	/^    public getActiveTextEditor(): ActiveTextEditor | null {$/;"	m	class:VSCodeEditor
getActiveTextEditorInstance	vscode/src/editor/vscode-editor.ts	/^    private getActiveTextEditorInstance(): vscode.TextEditor | null {$/;"	m	class:VSCodeEditor
getActiveTextEditorSelection	lib/shared/src/editor/index.ts	/^    getActiveTextEditorSelection(): ActiveTextEditorSelection | null$/;"	m	interface:Editor
getActiveTextEditorSelection	lib/shared/src/editor/index.ts	/^    public getActiveTextEditorSelection(): ActiveTextEditorSelection | null {$/;"	m	class:NoopEditor
getActiveTextEditorSelection	vscode/src/editor/vscode-editor.ts	/^    public getActiveTextEditorSelection(): ActiveTextEditorSelection | null {$/;"	m	class:VSCodeEditor
getActiveTextEditorSelectionOrEntireFile	lib/shared/src/editor/index.ts	/^    getActiveTextEditorSelectionOrEntireFile(): ActiveTextEditorSelection | null$/;"	m	interface:Editor
getActiveTextEditorSelectionOrEntireFile	lib/shared/src/editor/index.ts	/^    public getActiveTextEditorSelectionOrEntireFile(): ActiveTextEditorSelection | null {$/;"	m	class:NoopEditor
getActiveTextEditorSelectionOrEntireFile	vscode/src/editor/vscode-editor.ts	/^    public getActiveTextEditorSelectionOrEntireFile(): ActiveTextEditorSelection | null {$/;"	m	class:VSCodeEditor
getActiveTextEditorVisibleContent	lib/shared/src/editor/index.ts	/^    getActiveTextEditorVisibleContent(): ActiveTextEditorVisibleContent | null$/;"	m	interface:Editor
getActiveTextEditorVisibleContent	lib/shared/src/editor/index.ts	/^    public getActiveTextEditorVisibleContent(): ActiveTextEditorVisibleContent | null {$/;"	m	class:NoopEditor
getActiveTextEditorVisibleContent	vscode/src/editor/vscode-editor.ts	/^    public getActiveTextEditorVisibleContent(): ActiveTextEditorVisibleContent | null {$/;"	m	class:VSCodeEditor
getAnonymousUserID	vscode/src/services/LocalStorageProvider.ts	/^    public getAnonymousUserID(): string | null {$/;"	m	class:LocalStorage
getApplyLens	vscode/src/non-stop/codelenses.ts	/^function getApplyLens(codeLensRange: vscode.Range, id: string): vscode.CodeLens {$/;"	f
getApplyingLens	vscode/src/non-stop/codelenses.ts	/^function getApplyingLens(codeLensRange: vscode.Range): vscode.CodeLens {$/;"	f
getAskingLens	vscode/src/non-stop/codelenses.ts	/^function getAskingLens(codeLensRange: vscode.Range): vscode.CodeLens {$/;"	f
getAssistantMessage	lib/shared/src/chat/transcript/interaction.ts	/^    public getAssistantMessage(): InteractionMessage {$/;"	m	class:Interaction
getCancelLens	vscode/src/non-stop/codelenses.ts	/^function getCancelLens(codeLensRange: vscode.Range, id: string): vscode.CodeLens {$/;"	f
getChatHistory	vscode/src/services/LocalStorageProvider.ts	/^    public getChatHistory(): UserLocalHistory | null {$/;"	m	class:LocalStorage
getChatViewProvider	vscode/test/integration/chat.test.ts	/^async function getChatViewProvider(): Promise<ChatViewProvider> {$/;"	f
getClient	cli/src/client/index.ts	/^export async function getClient({ codebase, endpoint, context: contextType, debug }: GlobalOptio/;"	f
getCodebase	lib/shared/src/codebase-context/index.ts	/^    public getCodebase(): string | undefined {$/;"	m	class:CodebaseContext
getCodebaseContext	vscode/src/chat/ChatViewProvider.ts	/^export async function getCodebaseContext($/;"	f
getCodyContext	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    getCodyContext: GetCodyContextResult[]$/;"	p	interface:GetCodyContextResponse
getCodyLLMConfiguration	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    public async getCodyLLMConfiguration(): Promise<undefined | CodyLLMSiteConfiguration | Error/;"	m	class:SourcegraphGraphQLAPIClient
getCodySidebar	vscode/test/e2e/helpers.ts	/^export async function getCodySidebar(page: Page): Promise<Frame> {$/;"	f
getCommandOutput	vscode/src/my-cody/MyPromptController.ts	/^    public async getCommandOutput(): Promise<string | null> {$/;"	m	class:MyPromptController
getCompletion	cli/src/client/completions.ts	/^export async function getCompletion($/;"	f
getCompletionWithContext	cli/src/client/completions.ts	/^export async function getCompletionWithContext($/;"	f
getCompletions	completions-review-tool/src/models/completions.server.ts	/^export function getCompletions(): Promise<CodeToCompletions> {$/;"	f
getCompletionsClient	slack/src/services/stream-completions.ts	/^function getCompletionsClient() {$/;"	f
getComponents	node_modules/autopreview/Autopreview.js	/^  async getComponents() {$/;"	m	class:AutoPreview
getConfigFromPackageJson	vscode/src/configuration-keys.ts	/^function getConfigFromPackageJson(): ConfigurationKeysMap {$/;"	f
getConfiguration	vscode/src/configuration.ts	/^export function getConfiguration(config: ConfigGetter): Configuration {$/;"	f
getContext	cli/src/client/context.ts	/^    public getContext() {$/;"	m	class:LocalKeywordContextFetcherMock
getContext	lib/shared/src/local-context/index.ts	/^    getContext(query: string, numResults: number): Promise<ContextResult[]>$/;"	m	interface:FilenameContextFetcher
getContext	lib/shared/src/local-context/index.ts	/^    getContext(query: string, numResults: number): Promise<ContextResult[]>$/;"	m	interface:KeywordContextFetcher
getContext	lib/shared/src/unified-context/client.ts	/^    public async getContext($/;"	m	class:UnifiedContextFetcherClient
getContext	lib/shared/src/unified-context/index.ts	/^    getContext($/;"	m	interface:UnifiedContextFetcher
getContext	slack/src/services/codebase-context.ts	/^    public getContext() {$/;"	m	class:LocalKeywordContextFetcherMock
getContext	vscode/src/completions/context.ts	/^export async function getContext(options: GetContextOptions): Promise<GetContextResult> {$/;"	f
getContext	vscode/src/local-context/filename-context-fetcher.ts	/^    public async getContext(query: string, numResults: number): Promise<ContextResult[]> {$/;"	m	class:FilenameContextFetcher
getContext	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    public async getContext(query: string, numResults: number): Promise<ContextResult[]> {$/;"	m	class:LocalKeywordContextFetcher
getContextFromCurrentEditor	vscode/src/completions/context-local.ts	/^export async function getContextFromCurrentEditor(options: Options): Promise<ReferenceSnippet[]>/;"	f
getContextFromEmbeddings	vscode/src/completions/context-embeddings.ts	/^export function getContextFromEmbeddings(options: Options): ReferenceSnippet[] {$/;"	C
getContextFromEmbeddings	vscode/src/completions/context.ts	/^    const embeddingsMatches = isEmbeddingsContextEnabled ? getContextFromEmbeddings(options) : [/;"	C	function:getContext
getContextMessageWithResponse	lib/shared/src/codebase-context/messages.ts	/^export function getContextMessageWithResponse($/;"	f
getContextMessages	cli/src/client/interactions.ts	/^async function getContextMessages($/;"	f
getContextMessages	lib/shared/src/chat/recipes/chat-question.ts	/^    private async getContextMessages($/;"	m	class:ChatQuestion
getContextMessages	lib/shared/src/chat/recipes/fixup.ts	/^    private async getContextMessages(text: string, codebaseContext: CodebaseContext): Promise<Co/;"	m	class:Fixup
getContextMessages	lib/shared/src/chat/recipes/inline-chat.ts	/^    private async getContextMessages($/;"	m	class:InlineChat
getContextMessages	lib/shared/src/chat/recipes/my-prompt.ts	/^    private async getContextMessages($/;"	m	class:MyPrompt
getContextMessages	lib/shared/src/chat/recipes/next-questions.ts	/^    private async getContextMessages($/;"	m	class:NextQuestions
getContextMessages	lib/shared/src/chat/recipes/non-stop.ts	/^    private async getContextMessages(text: string, codebaseContext: CodebaseContext): Promise<Co/;"	m	class:NonStop
getContextMessages	lib/shared/src/codebase-context/index.ts	/^    public async getContextMessages(query: string, options: ContextSearchOptions): Promise<Conte/;"	m	class:CodebaseContext
getContextMessagesFromSelection	lib/shared/src/chat/recipes/helpers.ts	/^export async function getContextMessagesFromSelection($/;"	f
getCurrentDirContext	lib/shared/src/chat/recipes/my-prompt.ts	/^    public static async getCurrentDirContext(isTestRequest: boolean): Promise<ContextMessage[]> /;"	m	class:MyPrompt
getCurrentDirPath	lib/shared/src/chat/recipes/my-prompt.ts	/^const getCurrentDirPath = (filePath: string): string => filePath?.replace(\/\\\/[^\/]+$\/, '')$/;"	C
getCurrentDocContext	vscode/src/completions/document.ts	/^export function getCurrentDocContext($/;"	f
getCurrentUserId	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    public async getCurrentUserId(): Promise<string | Error> {$/;"	m	class:SourcegraphGraphQLAPIClient
getCurrentUserIdAndVerifiedEmail	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    public async getCurrentUserIdAndVerifiedEmail(): Promise<{ id: string; hasVerifiedEmail: boo/;"	m	class:SourcegraphGraphQLAPIClient
getDiffLens	vscode/src/non-stop/codelenses.ts	/^function getDiffLens(codeLensRange: vscode.Range, id: string): vscode.CodeLens {$/;"	f
getDiffToCommit	cli/src/gitHelpers/index.ts	/^    getDiffToCommit(options: { cwd: string; stagedOnly: boolean }): Promise<string>$/;"	m	interface:GitHelpers
getDiscardLens	vscode/src/non-stop/codelenses.ts	/^function getDiscardLens(codeLensRange: vscode.Range, id: string): vscode.CodeLens {$/;"	f
getDocuments	slack/src/services/local-vector-store.ts	/^async function getDocuments() {$/;"	f
getEditorContext	lib/shared/src/chat/recipes/chat-question.ts	/^    public static getEditorContext(editor: Editor): ContextMessage[] {$/;"	m	class:ChatQuestion
getEditorContext	lib/shared/src/chat/recipes/next-questions.ts	/^    private getEditorContext(editor: Editor): ContextMessage[] {$/;"	m	class:NextQuestions
getEditorDirContext	lib/shared/src/chat/recipes/my-prompt.ts	/^    public static async getEditorDirContext($/;"	m	class:MyPrompt
getEditorOpenTabsContext	lib/shared/src/chat/recipes/my-prompt.ts	/^    public static async getEditorOpenTabsContext(dirPath?: string): Promise<ContextMessage[]> {$/;"	m	class:MyPrompt
getEditorSelectionContext	lib/shared/src/chat/recipes/chat-question.ts	/^    public static getEditorSelectionContext(selection: ActiveTextEditorSelection): ContextMessag/;"	m	class:ChatQuestion
getEditorTabSize	vscode/src/completions/text-processing.ts	/^export function getEditorTabSize(): number {$/;"	f
getEmbeddingSearchErrors	lib/shared/src/codebase-context/index.ts	/^    public getEmbeddingSearchErrors(): string {$/;"	m	class:CodebaseContext
getEmbeddingSearchResults	lib/shared/src/codebase-context/index.ts	/^    private async getEmbeddingSearchResults($/;"	m	class:CodebaseContext
getEmbeddingsContextMessages	lib/shared/src/codebase-context/index.ts	/^    private async getEmbeddingsContextMessages($/;"	m	class:CodebaseContext
getEnabledPlugins	vscode/src/services/LocalStorageProvider.ts	/^    public getEnabledPlugins(): string[] | null {$/;"	m	class:LocalStorage
getEndpoint	vscode/src/services/LocalStorageProvider.ts	/^    public getEndpoint(): string | null {$/;"	m	class:LocalStorage
getEndpointHistory	vscode/src/services/LocalStorageProvider.ts	/^    public getEndpointHistory(): string[] | null {$/;"	m	class:LocalStorage
getErrorLens	vscode/src/non-stop/codelenses.ts	/^function getErrorLens(codeLensRange: vscode.Range): vscode.CodeLens {$/;"	f
getErrorLenses	vscode/src/services/CodeLensProvider.ts	/^function getErrorLenses(id: string, codeLensRange: vscode.Range): vscode.CodeLens[] {$/;"	f
getEventTs	slack/src/slack/helpers.ts	/^export function getEventTs(event: KnownEventFromType<'app_mention'> | KnownEventFromType<'messag/;"	f
getExtension	lib/shared/src/prompt/templates.ts	/^function getExtension(filePath: string): string {$/;"	f
getFileExtension	lib/shared/src/chat/recipes/helpers.ts	/^export function getFileExtension(fileName: string): string {$/;"	C	function:getContextMessagesFromSelection
getFileExtension	lib/shared/src/chat/recipes/my-prompt.ts	/^                const fileExt = currentFileName ? getFileExtension(currentFileName) : '*'$/;"	C	method:MyPrompt.getEditorDirContext
getFileNameAfterLastDash	vscode/src/non-stop/utils.ts	/^export function getFileNameAfterLastDash(filePath: string): string {$/;"	f
getFileNameFromPath	vscode/src/my-cody/helper.ts	/^export function getFileNameFromPath(path: string): string | undefined {$/;"	f
getFilePathContext	lib/shared/src/chat/recipes/my-prompt.ts	/^    public static async getFilePathContext(filePath: string): Promise<ContextMessage[]> {$/;"	m	class:MyPrompt
getFileToRemove	vscode/src/my-cody/helper.ts	/^export async function getFileToRemove(keys: string[]): Promise<string | undefined> {$/;"	f
getFilenameSearchResults	lib/shared/src/codebase-context/index.ts	/^    private async getFilenameSearchResults(query: string, options: ContextSearchOptions): Promis/;"	m	class:CodebaseContext
getFilenames	vscode/src/local-context/filename-context-fetcher.ts	/^    private async getFilenames(rootPath: string, filenameFragments: string[], maxDepth: number):/;"	m	class:FilenameContextFetcher
getFirstNCharsPreservingLeadingSpaces	vscode/src/completions/text-processing.ts	/^function getFirstNCharsPreservingLeadingSpaces(value: string, charsNumber: number): string {$/;"	f
getFirstNFilesFromDir	lib/shared/src/chat/recipes/my-prompt.ts	/^const getFirstNFilesFromDir = async (dirUri: vscode.Uri, n: number): Promise<[string, vscode.Fil/;"	C
getFixupController	vscode/test/integration/task-controller.test.ts	/^async function getFixupController(): Promise<FixupController> {$/;"	f
getFixupTasks	vscode/test/integration/helpers.ts	/^export async function getFixupTasks(): Promise<FixupTask[]> {$/;"	f
getFullConfig	vscode/src/configuration.ts	/^export const getFullConfig = async ($/;"	C
getFullContext	lib/shared/src/chat/transcript/interaction.ts	/^    public async getFullContext(): Promise<ContextMessage[]> {$/;"	m	class:Interaction
getHeadAndTail	vscode/src/completions/text-processing.ts	/^export function getHeadAndTail(s: string): PrefixComponents {$/;"	f
getHighlightedTokenHTML	lib/shared/src/hallucinations-detector/index.ts	/^function getHighlightedTokenHTML(token: HighlightedToken, workspaceRootPath?: string): string {$/;"	f
getHumanDisplayText	lib/shared/src/chat/recipes/my-prompt.ts	/^    private getHumanDisplayText(humanChatInput: string, fileName: string): string {$/;"	m	class:MyPrompt
getHumanMessage	lib/shared/src/chat/transcript/interaction.ts	/^    public getHumanMessage(): InteractionMessage {$/;"	m	class:Interaction
getIDs	vscode/src/my-cody/CustomRecipesBuilder.ts	/^    public getIDs(): string[] {$/;"	m	class:CustomRecipesBuilder
getIconPath	vscode/src/services/InlineAssist.ts	/^export function getIconPath(speaker: string, extPath: string): vscode.Uri {$/;"	f
getInlineAcceptLens	vscode/src/services/CodeLensProvider.ts	/^function getInlineAcceptLens(id: string, codeLensRange: vscode.Range): vscode.CodeLens {$/;"	f
getInlineCloseLens	vscode/src/services/CodeLensProvider.ts	/^function getInlineCloseLens(id: string, codeLensRange: vscode.Range): vscode.CodeLens {$/;"	f
getInlineUndoLens	vscode/src/services/CodeLensProvider.ts	/^function getInlineUndoLens(id: string, codeLensRange: vscode.Range): vscode.CodeLens {$/;"	f
getInteraction	lib/shared/src/chat/recipes/chat-question.ts	/^    public async getInteraction(humanChatInput: string, context: RecipeContext): Promise<Interac/;"	m	class:ChatQuestion
getInteraction	lib/shared/src/chat/recipes/context-search.ts	/^    public async getInteraction(humanChatInput: string, context: RecipeContext): Promise<Interac/;"	m	class:ContextSearch
getInteraction	lib/shared/src/chat/recipes/explain-code-detailed.ts	/^    public async getInteraction(_humanChatInput: string, context: RecipeContext): Promise<Intera/;"	m	class:ExplainCodeDetailed
getInteraction	lib/shared/src/chat/recipes/explain-code-high-level.ts	/^    public async getInteraction(_humanChatInput: string, context: RecipeContext): Promise<Intera/;"	m	class:ExplainCodeHighLevel
getInteraction	lib/shared/src/chat/recipes/find-code-smells.ts	/^    public async getInteraction(_humanChatInput: string, context: RecipeContext): Promise<Intera/;"	m	class:FindCodeSmells
getInteraction	lib/shared/src/chat/recipes/fixup.ts	/^    public async getInteraction(humanChatInput: string, context: RecipeContext): Promise<Interac/;"	m	class:Fixup
getInteraction	lib/shared/src/chat/recipes/generate-docstring.ts	/^    public async getInteraction(_humanChatInput: string, context: RecipeContext): Promise<Intera/;"	m	class:GenerateDocstring
getInteraction	lib/shared/src/chat/recipes/generate-pr-description.ts	/^    public async getInteraction(_humanChatInput: string, context: RecipeContext): Promise<Intera/;"	m	class:PrDescription
getInteraction	lib/shared/src/chat/recipes/generate-release-notes.ts	/^    public async getInteraction(_humanChatInput: string, context: RecipeContext): Promise<Intera/;"	m	class:ReleaseNotes
getInteraction	lib/shared/src/chat/recipes/generate-test.ts	/^    public async getInteraction(_humanChatInput: string, context: RecipeContext): Promise<Intera/;"	m	class:GenerateTest
getInteraction	lib/shared/src/chat/recipes/git-log.ts	/^    public async getInteraction(_humanChatInput: string, context: RecipeContext): Promise<Intera/;"	m	class:GitHistory
getInteraction	lib/shared/src/chat/recipes/improve-variable-names.ts	/^    public async getInteraction(_humanChatInput: string, context: RecipeContext): Promise<Intera/;"	m	class:ImproveVariableNames
getInteraction	lib/shared/src/chat/recipes/inline-chat.ts	/^    public async getInteraction(humanChatInput: string, context: RecipeContext): Promise<Interac/;"	m	class:InlineChat
getInteraction	lib/shared/src/chat/recipes/my-prompt.ts	/^    public async getInteraction(humanChatInput: string, context: RecipeContext): Promise<Interac/;"	m	class:MyPrompt
getInteraction	lib/shared/src/chat/recipes/next-questions.ts	/^    public async getInteraction(humanChatInput: string, context: RecipeContext): Promise<Interac/;"	m	class:NextQuestions
getInteraction	lib/shared/src/chat/recipes/non-stop.ts	/^    public async getInteraction(taskId: string, context: RecipeContext): Promise<Interaction | n/;"	m	class:NonStop
getInteraction	lib/shared/src/chat/recipes/recipe.ts	/^    getInteraction(humanChatInput: string, context: RecipeContext): Promise<Interaction | null>$/;"	m	interface:Recipe
getInteraction	lib/shared/src/chat/recipes/translate.ts	/^    public async getInteraction(_humanChatInput: string, context: RecipeContext): Promise<Intera/;"	m	class:TranslateToLanguage
getItemLabel	vscode/src/services/AuthMenus.ts	/^function getItemLabel(uri: string, current: boolean): string {$/;"	f
getKeywordSearchResults	lib/shared/src/codebase-context/index.ts	/^    private async getKeywordSearchResults(query: string, options: ContextSearchOptions): Promise/;"	m	class:CodebaseContext
getLanguageConfig	vscode/src/completions/multiline.ts	/^function getLanguageConfig(languageId: string): LanguageConfig | null {$/;"	f
getLastInteraction	lib/shared/src/chat/transcript/index.ts	/^    public getLastInteraction(): Interaction | null {$/;"	m	class:Transcript
getLastInteractionWithContextIndex	lib/shared/src/chat/transcript/index.ts	/^    private async getLastInteractionWithContextIndex(): Promise<number> {$/;"	m	class:Transcript
getLenses	vscode/src/services/CodeLensProvider.ts	/^function getLenses(id: string, codeLensRange: vscode.Range, isPending: boolean): vscode.CodeLens/;"	f
getLensesForTask	vscode/src/non-stop/codelenses.ts	/^export function getLensesForTask(task: FixupTask): vscode.CodeLens[] {$/;"	f
getLocalContextMessages	lib/shared/src/codebase-context/index.ts	/^    private async getLocalContextMessages(query: string, options: ContextSearchOptions): Promise/;"	m	class:CodebaseContext
getModule	node_modules/autopreview/Autopreview.js	/^  async getModule() {$/;"	m	class:AutoPreview
getMultiRepoPreamble	lib/shared/src/chat/preamble.ts	/^export function getMultiRepoPreamble(codebases: string[], customPreamble?: Preamble): Message[] /;"	f
getMyPrompts	vscode/src/my-cody/MyPromptController.ts	/^    public getMyPrompts(): MyPrompts {$/;"	m	class:MyPromptController
getNormalizedLanguageName	lib/shared/src/chat/recipes/helpers.ts	/^export function getNormalizedLanguageName(extension: string): string {$/;"	C
getOtherCommitMessages	cli/src/gitHelpers/index.ts	/^    getOtherCommitMessages(options: { cwd: string }): Promise<string[]>$/;"	m	interface:GitHelpers
getPackageJsonContext	lib/shared/src/chat/recipes/my-prompt.ts	/^    public static async getPackageJsonContext(filePath?: string): Promise<ContextMessage[]> {$/;"	m	class:MyPrompt
getParentDirName	lib/shared/src/chat/recipes/my-prompt.ts	/^const getParentDirName = (dirPath: string): string => {$/;"	C
getPreamble	cli/src/client/preamble.ts	/^export function getPreamble(codebase: string | undefined): Message[] {$/;"	f
getPreamble	lib/shared/src/chat/preamble.ts	/^export function getPreamble(codebase: string | undefined, customPreamble?: Preamble): Message[] /;"	f
getPromptForLastInteraction	lib/shared/src/chat/transcript/index.ts	/^    public async getPromptForLastInteraction($/;"	m	class:Transcript
getPromptList	vscode/src/my-cody/MyPromptController.ts	/^    public getPromptList(): string[] {$/;"	m	class:MyPromptController
getPromptsFromFileSystem	vscode/src/my-cody/CustomRecipesBuilder.ts	/^    private async getPromptsFromFileSystem(type: CodyPromptType): Promise<string | null> {$/;"	m	class:CustomRecipesBuilder
getReadyLens	vscode/src/non-stop/codelenses.ts	/^function getReadyLens(codeLensRange: vscode.Range, id: string): vscode.CodeLens {$/;"	f
getRecipe	lib/shared/src/chat/recipes/agent-recipes.ts	/^export function getRecipe(id: RecipeID): Recipe | undefined {$/;"	f
getRecipe	lib/shared/src/chat/recipes/browser-recipes.ts	/^export function getRecipe(id: RecipeID): Recipe | undefined {$/;"	f
getRecipe	vscode/src/chat/recipes.ts	/^export function getRecipe(id: RecipeID): Recipe | undefined {$/;"	f
getRelevantFiles	vscode/src/completions/context-local.ts	/^async function getRelevantFiles(currentDocument: vscode.TextDocument, history: History): Promise/;"	f
getRepoId	cli/src/client/context.ts	/^const getRepoId = async (client: SourcegraphGraphQLAPIClient, codebase: string) => {$/;"	C
getRepoId	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    public async getRepoId(repoName: string): Promise<string | Error> {$/;"	m	class:SourcegraphGraphQLAPIClient
getRepoId	slack/src/services/codebase-context.ts	/^const getRepoId = memoize(async (codebase: string) => {$/;"	C
getRepoIdIfEmbeddingExists	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    public async getRepoIdIfEmbeddingExists(repoName: string): Promise<string | null | Error> {$/;"	m	class:SourcegraphGraphQLAPIClient
getRepoIds	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    public async getRepoIds(names: string[]): Promise<{ id: string; name: string }[] | Error> {$/;"	m	class:SourcegraphGraphQLAPIClient
getRepoNames	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    public async getRepoNames(first: number): Promise<string[] | Error> {$/;"	m	class:SourcegraphGraphQLAPIClient
getRerankWithLog	vscode/src/logged-rerank.ts	/^export function getRerankWithLog($/;"	f
getReranker	vscode/src/test-support.ts	/^    public getReranker(): Reranker {$/;"	m	class:TestSupport
getRgPath	vscode/src/rg.ts	/^export async function getRgPath(extensionPath: string): Promise<string> {$/;"	f
getSearchContext	cli/src/client/context.ts	/^    public getSearchContext() {$/;"	m	class:LocalKeywordContextFetcherMock
getSearchContext	lib/shared/src/local-context/index.ts	/^    getSearchContext(query: string, numResults: number): Promise<ContextResult[]>$/;"	m	interface:KeywordContextFetcher
getSearchContext	slack/src/services/codebase-context.ts	/^    public getSearchContext() {$/;"	m	class:LocalKeywordContextFetcherMock
getSearchContext	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    public async getSearchContext(query: string, numResults: number): Promise<ContextResult[]> {$/;"	m	class:LocalKeywordContextFetcher
getSearchResults	lib/shared/src/codebase-context/index.ts	/^    public async getSearchResults($/;"	m	class:CodebaseContext
getSingleLineRange	vscode/src/services/InlineAssist.ts	/^export function getSingleLineRange(line: number): vscode.Range {$/;"	f
getSiteHasCodyEnabled	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    public async getSiteHasCodyEnabled(): Promise<boolean | Error> {$/;"	m	class:SourcegraphGraphQLAPIClient
getSiteHasIsCodyEnabledField	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    public async getSiteHasIsCodyEnabledField(): Promise<boolean | Error> {$/;"	m	class:SourcegraphGraphQLAPIClient
getSiteVersion	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    public async getSiteVersion(): Promise<string | Error> {$/;"	m	class:SourcegraphGraphQLAPIClient
getSlackChannelName	slack/src/slack/helpers.ts	/^export async function getSlackChannelName(channel: string) {$/;"	f
getSlackInteraction	slack/src/slack/message-interaction.ts	/^export function getSlackInteraction(humanText: string, assistantText: string = ''): SlackInterac/;"	f
getSlackPreamble	slack/src/slack/preamble.ts	/^function getSlackPreamble(): Message[] {$/;"	f
getState	vscode/webviews/utils/VSCodeApi.ts	/^    getState: () => unknown$/;"	p	interface:VSCodeApi
getSurroundingText	lib/shared/src/plugins/built-in/confluence.ts	/^function getSurroundingText(paragraph: string, blurb: string): string {$/;"	f
getTarget	vscode/src/rg.ts	/^async function getTarget(): Promise<string> {$/;"	f
getTaskRecipeData	lib/shared/src/editor/index.ts	/^    getTaskRecipeData(taskId: string): Promise<$/;"	m	interface:VsCodeFixupController
getTerminalOutputContext	lib/shared/src/chat/recipes/my-prompt.ts	/^    public static getTerminalOutputContext(output: string): ContextMessage[] {$/;"	m	class:MyPrompt
getThreadMessages	slack/src/slack/helpers.ts	/^export async function getThreadMessages(channel: string, thread_ts: string) {$/;"	f
getTranscriptInteraction	slack/src/slack/message-interaction.ts	/^    public getTranscriptInteraction() {$/;"	m	class:SlackInteraction
getUnifiedContextMessages	lib/shared/src/codebase-context/index.ts	/^    private async getUnifiedContextMessages(query: string, options: ContextSearchOptions): Promi/;"	m	class:CodebaseContext
getUserInfo	vscode/src/my-cody/MyToolsProvider.ts	/^    public getUserInfo(): { homeDir: string; workspaceRoot?: string; currentFilePath?: string } /;"	m	class:MyToolsProvider
getVSCodeAPI	vscode/webviews/utils/VSCodeApi.ts	/^export function getVSCodeAPI(): VSCodeWrapper {$/;"	f
getVectorStore	slack/src/services/local-vector-store.ts	/^export async function getVectorStore() {$/;"	f
getWaitingLens	vscode/src/non-stop/codelenses.ts	/^function getWaitingLens(codeLensRange: vscode.Range): vscode.CodeLens {$/;"	f
getWords	vscode/src/completions/bestJaccardMatch.ts	/^export function getWords(s: string): Map<string, number> {$/;"	f
getWorkspaceRootPath	lib/shared/src/editor/index.ts	/^    getWorkspaceRootPath(): string | null$/;"	m	interface:Editor
getWorkspaceRootPath	lib/shared/src/editor/index.ts	/^    public getWorkspaceRootPath(): string | null {$/;"	m	class:NoopEditor
getWorkspaceRootPath	vscode/src/editor/vscode-editor.ts	/^    public getWorkspaceRootPath(): string | null {$/;"	m	class:VSCodeEditor
gitCommand	vscode/src/chat/ChatViewProvider.ts	/^    const gitCommand = spawnSync('git', ['remote', 'get-url', 'origin'], { cwd: workspaceRoot })$/;"	C	function:getCodebaseContext
gitCommit	lib/shared/src/chat/recipes/generate-pr-description.ts	/^        const gitCommit = spawnSync('git', ['log', `--author=<${email}>`, 'origin\/HEAD..HEAD', /;"	C	method:PrDescription.getInteraction
gitCommitOutput	lib/shared/src/chat/recipes/generate-pr-description.ts	/^        const gitCommitOutput = gitCommit.stdout.toString().trim()$/;"	C	method:PrDescription.getInteraction
gitDir	cli/src/gitHelpers/index.ts	/^    gitDir(options: { cwd: string }): Promise<string>$/;"	m	interface:GitHelpers
gitHelpers	cli/src/commands/commit/command.ts	/^    gitHelpers: GitHelpers$/;"	p	interface:CommitEnvironment
gitLogCommand	lib/shared/src/chat/recipes/generate-release-notes.ts	/^        const gitLogCommand = spawnSync('git', ['--no-pager', ...gitArgs], { cwd: dirPath })$/;"	C	method:ReleaseNotes.getInteraction
gitLogCommand	lib/shared/src/chat/recipes/git-log.ts	/^        const gitLogCommand = spawnSync('git', ['--no-pager', ...gitArgs], { cwd: dirPath })$/;"	C	method:GitHistory.getInteraction
gitLogOutput	lib/shared/src/chat/recipes/generate-release-notes.ts	/^        const gitLogOutput = gitLogCommand.stdout.toString().trim()$/;"	C	method:ReleaseNotes.getInteraction
gitLogOutput	lib/shared/src/chat/recipes/git-log.ts	/^        const gitLogOutput = gitLogCommand.stdout.toString().trim()$/;"	C	method:GitHistory.getInteraction
gitOutput	vscode/src/chat/ChatViewProvider.ts	/^    const gitOutput = gitCommand.stdout.toString().trim()$/;"	C	function:getCodebaseContext
gitTagCommand	lib/shared/src/chat/recipes/generate-release-notes.ts	/^        const gitTagCommand = spawnSync('git', ['tag', '--sort=-creatordate'], { cwd: dirPath })$/;"	C	method:ReleaseNotes.getInteraction
gitTagOutput	lib/shared/src/chat/recipes/generate-release-notes.ts	/^        const gitTagOutput = gitTagCommand.stdout.toString().trim()$/;"	C	method:ReleaseNotes.getInteraction
github	vscode/package.json	/^            "github": {$/;"	o	object:contributes.configuration.properties.cody.plugins.config.properties
githubIssuesPlugin	lib/shared/src/plugins/built-in/github-issues.ts	/^export const githubIssuesPlugin: Plugin = {$/;"	C
githubIssuesPlugin	lib/shared/src/plugins/built-in/index.ts	/^    githubIssuesPlugin,$/;"	C
glob	vscode/package.json	/^    "glob": "^7.2.3",$/;"	s	object:dependencies
globalOptions	cli/src/commands/repl/index.ts	/^    const globalOptions = program.optsWithGlobals<GlobalOptions>()$/;"	C	function:run
gqlAPIClient	lib/shared/src/telemetry/EventLogger.ts	/^    private gqlAPIClient: SourcegraphGraphQLAPIClient$/;"	p	class:EventLogger
graphqlClient	lib/shared/src/chat/client.ts	/^    const graphqlClient = new SourcegraphGraphQLAPIClient(fullConfig)$/;"	C	function:createClient
group	.vscode/tasks.json	/^      "group": {$/;"	o	object:tasks.0
group	lib/ui/.eslintrc.json	/^            "group": ["@sourcegraph\/cody-shared\/*"],$/;"	a	object:rules.no-restricted-imports.1.patterns.0
group	vscode/package.json	/^          "group": "7_cody@0"$/;"	s	object:contributes.menus.view/title.2
group	vscode/package.json	/^          "group": "7_cody@0"$/;"	s	object:contributes.menus.view/title.3
group	vscode/package.json	/^          "group": "7_modification"$/;"	s	object:contributes.menus.editor/context.0
group	vscode/package.json	/^          "group": "8_cody@0"$/;"	s	object:contributes.menus.view/title.9
group	vscode/package.json	/^          "group": "8_cody@1"$/;"	s	object:contributes.menus.view/title.7
group	vscode/package.json	/^          "group": "9_cody@0"$/;"	s	object:contributes.menus.view/title.5
group	vscode/package.json	/^          "group": "9_cody@2"$/;"	s	object:contributes.menus.view/title.4
group	vscode/package.json	/^          "group": "inline"$/;"	s	object:contributes.menus.view/item/context.0
group	vscode/package.json	/^          "group": "inline",$/;"	s	object:contributes.menus.comments/commentThread/context.0
group	vscode/package.json	/^          "group": "inline",$/;"	s	object:contributes.menus.comments/commentThread/context.1
group	vscode/package.json	/^          "group": "inline@1"$/;"	s	object:contributes.menus.view/item/context.2
group	vscode/package.json	/^          "group": "inline@1",$/;"	s	object:contributes.menus.comments/commentThread/title.0
group	vscode/package.json	/^          "group": "inline@2"$/;"	s	object:contributes.menus.view/item/context.1
group	vscode/package.json	/^          "group": "inline@2",$/;"	s	object:contributes.menus.comments/commentThread/title.1
group	vscode/package.json	/^          "group": "inline@3",$/;"	s	object:contributes.menus.comments/commentThread/title.2
group	vscode/package.json	/^          "group": "navigation"$/;"	s	object:contributes.menus.view/title.8
group	vscode/package.json	/^          "group": "navigation",$/;"	s	object:contributes.menus.editor/title.0
group	vscode/package.json	/^          "group": "navigation@1"$/;"	s	object:contributes.menus.view/title.0
group	vscode/package.json	/^          "group": "navigation@2"$/;"	s	object:contributes.menus.view/title.1
group	vscode/package.json	/^          "group": "navigation@3"$/;"	s	object:contributes.menus.view/title.6
group	vscode/package.json	/^        "group": "Cody",$/;"	s	object:contributes.commands.0
group	vscode/package.json	/^        "group": "Cody",$/;"	s	object:contributes.commands.1
group	vscode/package.json	/^        "group": "Cody",$/;"	s	object:contributes.commands.15
group	vscode/package.json	/^        "group": "Cody",$/;"	s	object:contributes.commands.17
group	vscode/package.json	/^        "group": "Cody",$/;"	s	object:contributes.commands.18
groupResultsByFile	lib/shared/src/codebase-context/index.ts	/^function groupResultsByFile(results: EmbeddingsSearchResult[]): { file: ContextFile; results: st/;"	f
guardrails	lib/shared/src/telemetry/EventLogger.ts	/^            guardrails: this.config.experimentalGuardrails,$/;"	C	method:EventLogger.log
guardrails	vscode/src/external-services.ts	/^    const guardrails = new SourcegraphGuardrailsClient(client)$/;"	C	function:configureExternalServices
guardrails	vscode/src/external-services.ts	/^    guardrails: Guardrails$/;"	p	interface:ExternalServices
guardrails	vscode/src/main.ts	/^        guardrails,$/;"	C
guardrailsProvider	vscode/src/main.ts	/^        const guardrailsProvider = new GuardrailsProvider(guardrails, editor)$/;"	C
h	vscode/test/integration/api.test.ts	/^        const h = new History(() => null)$/;"	C
handleCacheHit	vscode/src/completions/index.ts	/^function handleCacheHit($/;"	f
handleHumanMessage	slack/src/mention-handler.ts	/^export async function handleHumanMessage(event: AppMentionEvent, appContext: AppContext): Promis/;"	f
handler	lib/shared/src/plugins/api/types.ts	/^    handler: FunctionHandler$/;"	p	interface:PluginFunction
handshake	agent/src/index.test.ts	/^    public async handshake() {$/;"	m	class:TestClient
hasAppJson	vscode/src/chat/protocol.ts	/^    hasAppJson: boolean$/;"	p	interface:LocalEnv
hasAppJson	vscode/src/services/LocalAppDetector.ts	/^    hasAppJson: false,$/;"	C
hasContext	lib/shared/src/chat/transcript/index.ts	/^            const hasContext = await this.interactions[index].hasContext()$/;"	C	method:Transcript.getLastInteractionWithContextIndex
hasContext	lib/shared/src/chat/transcript/interaction.ts	/^    public async hasContext(): Promise<boolean> {$/;"	m	class:Interaction
hasFinished	vscode/src/log.ts	/^        let hasFinished = false$/;"	v
hasVerifiedEmail	vscode/src/chat/protocol.ts	/^    hasVerifiedEmail: boolean$/;"	p	interface:AuthStatus
hasVerifiedEmail	vscode/src/chat/protocol.ts	/^    hasVerifiedEmail: false,$/;"	C
hasVerifiedEmail	vscode/src/chat/utils.test.ts	/^            hasVerifiedEmail: false,$/;"	C
hasVerifiedEmail	vscode/src/chat/utils.test.ts	/^            hasVerifiedEmail: true,$/;"	C
hasVerifiedEmail	vscode/src/services/AuthProvider.ts	/^            const hasVerifiedEmail = false$/;"	C
head	vscode/src/completions/text-processing.ts	/^    head: TrimmedString$/;"	p	interface:PrefixComponents
headEnd	vscode/src/completions/text-processing.ts	/^    const headEnd = s.indexOf(trimmed)$/;"	C	function:trimSpace
header	agent/src/jsonrpc.ts	/^        const header = Buffer.from(`Content-Length: ${content.byteLength}\\r\\n\\r\\n`, 'utf-8')$/;"	C	method:MessageEncoder.send
headerComponents	vscode/src/completions/docprovider.ts	/^                        const headerComponents = [`${index + 1} \/ ${completions.length}`]$/;"	C
headerName	agent/src/jsonrpc.ts	/^                    const [headerName, headerValue] = entry.split(':').map(_ => _.trim())$/;"	C	method:MessageDecoder._write
headerString	agent/src/jsonrpc.ts	/^                const headerString = this.buffer.toString()$/;"	C	method:MessageDecoder._write
headerValue	agent/src/jsonrpc.ts	/^                    const [headerName, headerValue] = entry.split(':').map(_ => _.trim())$/;"	C	method:MessageDecoder._write
headerize	vscode/src/completions/docprovider.ts	/^function headerize(label: string, width: number): string {$/;"	f
headers	lib/shared/src/sourcegraph-api/completions/nodeClient.ts	/^        const headers = new Headers(this.config.customHeaders as HeadersInit)$/;"	C	method:SourcegraphNodeCompletionsClient.complete
headers	lib/shared/src/sourcegraph-api/graphql/client.ts	/^        const headers = new Headers(this.config.customHeaders as HeadersInit)$/;"	C
headers	vscode/test/fixtures/mock-server.ts	/^    headers: {$/;"	p	interface:MockRequest
headersInstance	lib/shared/src/sourcegraph-api/completions/browserClient.ts	/^        const headersInstance = new Headers(this.config.customHeaders as HeadersInit)$/;"	C	method:SourcegraphBrowserCompletionsClient.stream
here	vscode/src/non-stop/tracked-range.test.ts	/^        const here = pos(line, i - beginningOfLine)$/;"	C	function:show
highlight.js	lib/shared/package.json	/^    "highlight.js": "^10.7.3",$/;"	s	object:dependencies
highlightCodeSafe	lib/shared/src/common/markdown/markdown.ts	/^export const highlightCodeSafe = (code: string, language?: string): string => {$/;"	C
highlightLine	lib/shared/src/hallucinations-detector/index.ts	/^function highlightLine(line: string, tokens: HighlightedToken[], workspaceRootPath?: string): st/;"	f
highlightTokens	lib/shared/src/hallucinations-detector/index.ts	/^export async function highlightTokens($/;"	f
highlightedText	lib/shared/src/hallucinations-detector/index.ts	/^    const highlightedText = markdownTokens$/;"	C	function:highlightTokens
highlightedTokens	lib/shared/src/hallucinations-detector/index.ts	/^    const highlightedTokens: HighlightedToken[] = []$/;"	C	function:detectTokens
history	vscode/src/completions/context-local.ts	/^    const { document, history, prefix, jaccardDistanceWindowSize } = options$/;"	C	function:getContextFromCurrentEditor
history	vscode/src/completions/context-local.ts	/^    history: History$/;"	p	interface:Options
history	vscode/src/completions/context.ts	/^    history: History$/;"	p	interface:GetContextOptions
history	vscode/src/completions/index.ts	/^            history,$/;"	C
history	vscode/src/completions/index.ts	/^    history: History$/;"	p	interface:CodyCompletionItemProviderConfig
history	vscode/src/main.ts	/^    const history = new History()$/;"	C	function:createCompletionsProvider
history	vscode/src/services/AuthMenus.ts	/^    const history =$/;"	C
history	vscode/src/services/AuthMenus.ts	/^    const optionItems = type === 'signout' ? history : [...LoginMenuOptionItems, ...seperator, ./;"	C
history	vscode/src/services/LocalStorageProvider.ts	/^        const history = this.storage.get<UserLocalHistory | null>(this.KEY_LOCAL_HISTORY, null)$/;"	C	method:LocalStorage.getChatHistory
history	vscode/src/services/LocalStorageProvider.ts	/^        const history = this.storage.get<string[] | null>(this.CODY_ENDPOINT_HISTORY, null)$/;"	C	method:LocalStorage.addEndpointHistory
history	vscode/test/completions/run-code-completions-on-dataset.ts	/^    const history = new History()$/;"	C	function:initCompletionsProvider
historySet	vscode/src/services/LocalStorageProvider.ts	/^        const historySet = new Set(history)$/;"	C	method:LocalStorage.addEndpointHistory
historySize	vscode/src/services/AuthMenus.ts	/^    const historySize = historyItems?.length$/;"	C
hnswlib-node	slack/package.json	/^    "hnswlib-node": "^1.4.2",$/;"	s	object:dependencies
homeDir	vscode/src/chat/protocol.ts	/^    homeDir?: string | undefined$/;"	p	interface:LocalEnv
homeDir	vscode/src/my-cody/MyToolsProvider.ts	/^        const homeDir = this.user.homeDir + '\/' || ''$/;"	C	method:MyToolsProvider.exeCommand
homeDir	vscode/src/my-cody/MyToolsProvider.ts	/^        const homeDir = this.user.homeDir + '\/' || ''$/;"	C	method:MyToolsProvider.runCommand
homeDir	vscode/src/services/LocalAppDetector.ts	/^        const homeDir = this.localEnv.homeDir$/;"	C
homeDir	vscode/src/services/LocalAppDetector.ts	/^    homeDir: process.env.HOME,$/;"	C
homePath	vscode/src/my-cody/MyToolsProvider.ts	/^const homePath = os.homedir()$/;"	C
homepage	cli/package.json	/^  "homepage": "https:\/\/cody.dev",$/;"	s
homepage	package.json	/^  "homepage": "https:\/\/cody.dev",$/;"	s
homepage	vscode/package.json	/^  "homepage": "https:\/\/docs.sourcegraph.com\/cody",$/;"	s
host	vscode/src/chat/utils.ts	/^            const host = match[1]$/;"	C	function:convertGitCloneURLToCodebaseName
href	vscode/package.json	/^      "href": "https:\/\/srcgr.ph\/discord",$/;"	s	object:badges.0
html	completions-review-tool/src/styles/global.css	/^html {$/;"	s
html	node_modules/autopreview/css/index.css	/^html,$/;"	s
html	vscode/webviews/index.css	/^html,$/;"	s
html::-webkit-scrollbar	node_modules/autopreview/css/index.css	/^html::-webkit-scrollbar,$/;"	s
html_url	lib/shared/src/plugins/built-in/github-issues.ts	/^    html_url: string$/;"	p	interface:Item
html_url	lib/shared/src/plugins/built-in/github-issues.ts	/^    html_url?: string$/;"	p	interface:User
http	vscode/scripts/mock-server.ts	/^http.createServer((req, res) => {$/;"	C
humanChatInput	agent/src/protocol.ts	/^    humanChatInput: string$/;"	p	interface:ExecuteRecipeParams
humanChatInput	lib/shared/src/chat/client.ts	/^        const humanChatInput = options?.humanChatInput ?? ''$/;"	C	function:createClient
humanChatInput	lib/shared/src/chat/useClient.ts	/^            const { humanChatInput = '', prefilledOptions } = options ?? {}$/;"	C
humanInput	lib/shared/src/chat/recipes/inline-touch.ts	/^        const humanInput = humanChatInput.trim() || (await this.getInstructionFromInput()).trim(/;"	C
humanInput	lib/shared/src/chat/recipes/my-prompt.ts	/^        const humanInput = humanChatInput.trim()$/;"	C	method:MyPrompt.getInteraction
humanInput	vscode/src/services/InlineController.ts	/^        const humanInput = reply.text$/;"	C
humanMessage	cli/src/commands/commit/command.ts	/^    const humanMessage = [$/;"	C	function:generateCommitMessage
humanMessage	lib/shared/src/chat/transcript/index.ts	/^            const humanMessage = PromptMixin.mixInto(interaction.getHumanMessage())$/;"	C	method:Transcript.getPromptForLastInteraction
humanMessage	lib/shared/src/chat/transcript/index.ts	/^        const humanMessage = messages[i - 1]$/;"	C	function:truncatePrompt
humanMessage	lib/shared/src/chat/transcript/interaction.ts	/^        private readonly humanMessage: InteractionMessage,$/;"	p	class:Interaction
humanMessage	lib/shared/src/chat/transcript/interaction.ts	/^    humanMessage: InteractionMessage$/;"	p	interface:InteractionJSON
humanMessage	slack/src/slack/message-interaction.ts	/^        private humanMessage: InteractionMessage,$/;"	p	class:SlackInteraction
humanMessage	vscode/test/integration/recipes.test.ts	/^        const humanMessage = await getTranscript(0)$/;"	C
humanMessage	vscode/test/integration/task-controller.test.ts	/^        const humanMessage = await getTranscript(0)$/;"	C
i	cli/src/commands/commit/command.ts	/^    for (const [i, msg] of otherCommitMessages.entries()) {$/;"	C	function:generateCommitMessage
i	lib/shared/src/chat/transcript/index.ts	/^        const botMessage = messages[i]$/;"	C	function:truncatePrompt
i	lib/shared/src/chat/transcript/index.ts	/^        const humanMessage = messages[i - 1]$/;"	C	function:truncatePrompt
i	lib/shared/src/codebase-context/index.ts	/^        const previousResult = sortedResults[i - 1]$/;"	C	function:mergeConsecutiveResults
i	lib/shared/src/codebase-context/index.ts	/^        const result = sortedResults[i]$/;"	C	function:mergeConsecutiveResults
i	vscode/src/completions/bestJaccardMatch.ts	/^        for (const [wordInThisLine, wordInThisLineCount] of wordsForEachLine[i].entries()) {$/;"	C	function:bestJaccardMatch
i	vscode/src/completions/document.ts	/^        const line = prefixLines[i]$/;"	C
i	vscode/src/completions/document.ts	/^        for (let i = prefixLines.length - 1; i >= 0; i--) {$/;"	v
i	vscode/src/completions/document.ts	/^    for (let i = 0; i < suffixLines.length; i++) {$/;"	v
i	vscode/src/completions/document.ts	/^    for (let i = prefixLines.length - 1; i >= 0; i--) {$/;"	v
i	vscode/src/completions/history.ts	/^            const item = this.history[i]$/;"	C
i	vscode/src/completions/history.ts	/^        for (let i = this.history.length - 1; i >= 0; i--) {$/;"	v
i	vscode/src/completions/multiline.ts	/^        const line = lines[i]$/;"	C	function:shouldIncludeClosingLine
i	vscode/src/local-context/local-keyword-context-fetcher.ts	/^            const fileCounts = termFileCountsArr[i].fileCounts$/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
i	vscode/src/local-context/local-keyword-context-fetcher.ts	/^            const term = queryTerms[i]$/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
i	vscode/src/main.ts	/^            const isFixMode = \/^\\\/f(ix)?\\s\/i.test(comment.text.trimStart())$/;"	C
i	vscode/src/non-stop/FixupDocumentEditObserver.ts	/^    for (const [i, edit] of edits.entries()) {$/;"	C	function:updateEdits
i	vscode/src/non-stop/tracked-range.test.ts	/^        const ch = text[i]$/;"	C	function:show
i	vscode/test/completions/utils.ts	/^        const index = lines[i].indexOf(substring)$/;"	C	function:findSubstringPosition
i	vscode/test/completions/vscode-text-document.ts	/^            const l = lines[i]$/;"	C
i	vscode/test/completions/vscode-text-document.ts	/^            const str = lines[i]$/;"	C
i	vscode/test/completions/vscode-text-document.ts	/^        for (let i = 0; i < lines.length; i++) {$/;"	v
iA	vscode/src/non-stop/diff.ts	/^            const chA = a[iA - 1]$/;"	C	function:longestCommonSubsequence
iB	vscode/src/non-stop/diff.ts	/^            const costDeleteA = program[iB * (lenA + 1) + iA - 1] + 1$/;"	C	function:longestCommonSubsequence
iB	vscode/src/non-stop/diff.ts	/^        const chB = b[iB - 1]$/;"	C	function:longestCommonSubsequence
icon	vscode/package.json	/^          "icon": "cody.svg",$/;"	s	object:contributes.views.cody.1
icon	vscode/package.json	/^          "icon": "resources\/cody.svg"$/;"	s	object:contributes.viewsContainers.activitybar.0
icon	vscode/package.json	/^        "icon": "$(account)"$/;"	s	object:contributes.commands.12
icon	vscode/package.json	/^        "icon": "$(add)"$/;"	s	object:contributes.commands.17
icon	vscode/package.json	/^        "icon": "$(book)"$/;"	s	object:contributes.commands.0
icon	vscode/package.json	/^        "icon": "$(bookmark)"$/;"	s	object:contributes.commands.32
icon	vscode/package.json	/^        "icon": "$(check)"$/;"	s	object:contributes.commands.28
icon	vscode/package.json	/^        "icon": "$(check-all)"$/;"	s	object:contributes.commands.29
icon	vscode/package.json	/^        "icon": "$(check-all)"$/;"	s	object:contributes.commands.30
icon	vscode/package.json	/^        "icon": "$(collapse-all)"$/;"	s	object:contributes.commands.22
icon	vscode/package.json	/^        "icon": "$(diff)"$/;"	s	object:contributes.commands.31
icon	vscode/package.json	/^        "icon": "$(feedback)"$/;"	s	object:contributes.commands.1
icon	vscode/package.json	/^        "icon": "$(file-code)"$/;"	s	object:contributes.commands.27
icon	vscode/package.json	/^        "icon": "$(gear)"$/;"	s	object:contributes.commands.15
icon	vscode/package.json	/^        "icon": "$(list-unordered)"$/;"	s	object:contributes.commands.18
icon	vscode/package.json	/^        "icon": "$(sign-out)"$/;"	s	object:contributes.commands.13
icon	vscode/package.json	/^        "icon": "$(sync~spin)"$/;"	s	object:contributes.commands.21
icon	vscode/package.json	/^        "icon": "$(trash)"$/;"	s	object:contributes.commands.20
icon	vscode/package.json	/^        "icon": "resources\/cody.png",$/;"	s	object:contributes.commands.26
icon	vscode/package.json	/^  "icon": "resources\/cody.png",$/;"	s
icon	vscode/src/non-stop/TaskViewProvider.ts	/^        const icon = fixupTaskList[this.state].icon$/;"	C
icon	vscode/src/services/AuthMenus.ts	/^    const icon = current ? '$(check) ' : ''$/;"	C	function:getItemLabel
iconPath	vscode/src/services/DecorationProvider.ts	/^    private iconPath: vscode.Uri$/;"	p	class:DecorationProvider
icons	vscode/package.json	/^    "icons": {$/;"	o	object:contributes
id	agent/src/jsonrpc.ts	/^        const id = this.id++$/;"	C	method:MessageHandler.request
id	agent/src/jsonrpc.ts	/^    id: Id$/;"	p	interface:RequestMessage
id	agent/src/jsonrpc.ts	/^    id: Id$/;"	p	interface:ResponseMessage
id	agent/src/jsonrpc.ts	/^    private id = 0$/;"	p	class:MessageHandler
id	agent/src/protocol.ts	/^    id: RecipeID$/;"	p	interface:ExecuteRecipeParams
id	agent/src/protocol.ts	/^    id: RecipeID$/;"	p	interface:RecipeInfo
id	lib/shared/src/chat/recipes/chat-question.ts	/^    public id: RecipeID = 'chat-question'$/;"	p	class:ChatQuestion
id	lib/shared/src/chat/recipes/context-search.ts	/^    public id: RecipeID = 'context-search'$/;"	p	class:ContextSearch
id	lib/shared/src/chat/recipes/explain-code-detailed.ts	/^    public id: RecipeID = 'explain-code-detailed'$/;"	p	class:ExplainCodeDetailed
id	lib/shared/src/chat/recipes/explain-code-high-level.ts	/^    public id: RecipeID = 'explain-code-high-level'$/;"	p	class:ExplainCodeHighLevel
id	lib/shared/src/chat/recipes/find-code-smells.ts	/^    public id: RecipeID = 'find-code-smells'$/;"	p	class:FindCodeSmells
id	lib/shared/src/chat/recipes/fixup.ts	/^    public id: RecipeID = 'fixup'$/;"	p	class:Fixup
id	lib/shared/src/chat/recipes/generate-docstring.ts	/^    public id: RecipeID = 'generate-docstring'$/;"	p	class:GenerateDocstring
id	lib/shared/src/chat/recipes/generate-pr-description.ts	/^    public id: RecipeID = 'pr-description'$/;"	p	class:PrDescription
id	lib/shared/src/chat/recipes/generate-release-notes.ts	/^    public id: RecipeID = 'release-notes'$/;"	p	class:ReleaseNotes
id	lib/shared/src/chat/recipes/generate-test.ts	/^    public id: RecipeID = 'generate-unit-test'$/;"	p	class:GenerateTest
id	lib/shared/src/chat/recipes/git-log.ts	/^    public id: RecipeID = 'git-history'$/;"	p	class:GitHistory
id	lib/shared/src/chat/recipes/improve-variable-names.ts	/^    public id: RecipeID = 'improve-variable-names'$/;"	p	class:ImproveVariableNames
id	lib/shared/src/chat/recipes/inline-chat.ts	/^    public id: RecipeID = 'inline-chat'$/;"	p	class:InlineChat
id	lib/shared/src/chat/recipes/inline-touch.ts	/^    public id: RecipeID = 'inline-touch'$/;"	p	class:InlineTouch
id	lib/shared/src/chat/recipes/my-prompt.ts	/^    public id: RecipeID = 'my-prompt'$/;"	p	class:MyPrompt
id	lib/shared/src/chat/recipes/next-questions.ts	/^    public id: RecipeID = 'next-questions'$/;"	p	class:NextQuestions
id	lib/shared/src/chat/recipes/non-stop.ts	/^    public id: RecipeID = 'non-stop'$/;"	p	class:NonStop
id	lib/shared/src/chat/recipes/recipe.ts	/^    id: RecipeID$/;"	p	interface:Recipe
id	lib/shared/src/chat/recipes/translate.ts	/^    public id: RecipeID = 'translate-to-language'$/;"	p	class:TranslateToLanguage
id	lib/shared/src/chat/transcript/index.ts	/^    id: string$/;"	p	interface:TranscriptJSON
id	lib/shared/src/chat/transcript/index.ts	/^    public get id(): string {$/;"	m	class:Transcript
id	node_modules/autopreview/Autopreview.js	/^    this.ws.send(JSON.stringify({ id: Date.now().toString, action, data }));$/;"	p	variable:anonymousObject8c7ec3e20305
id	vscode/package.json	/^            "id": "autocomplete",$/;"	s	object:contributes.walkthroughs.0.steps.4
id	vscode/package.json	/^            "id": "chat",$/;"	s	object:contributes.walkthroughs.0.steps.0
id	vscode/package.json	/^            "id": "explain",$/;"	s	object:contributes.walkthroughs.0.steps.1
id	vscode/package.json	/^            "id": "fixup",$/;"	s	object:contributes.walkthroughs.0.steps.2
id	vscode/package.json	/^            "id": "inline-assist",$/;"	s	object:contributes.walkthroughs.0.steps.3
id	vscode/package.json	/^            "id": "learn-more",$/;"	s	object:contributes.walkthroughs.0.steps.5
id	vscode/package.json	/^          "id": "cody",$/;"	s	object:contributes.viewsContainers.activitybar.0
id	vscode/package.json	/^          "id": "cody.chat",$/;"	s	object:contributes.views.cody.0
id	vscode/package.json	/^          "id": "cody.fixup.tree.view",$/;"	s	object:contributes.views.cody.1
id	vscode/package.json	/^        "id": "cody.fixup.conflictBackground",$/;"	s	object:contributes.colors.0
id	vscode/package.json	/^        "id": "cody.fixup.conflictBorder",$/;"	s	object:contributes.colors.1
id	vscode/package.json	/^        "id": "cody.fixup.conflictedBackground",$/;"	s	object:contributes.colors.2
id	vscode/package.json	/^        "id": "cody.fixup.conflictedBorder",$/;"	s	object:contributes.colors.3
id	vscode/package.json	/^        "id": "cody.fixup.incomingBackground",$/;"	s	object:contributes.colors.4
id	vscode/package.json	/^        "id": "cody.fixup.incomingBorder",$/;"	s	object:contributes.colors.5
id	vscode/package.json	/^        "id": "cody.submenu"$/;"	s	object:contributes.submenus.0
id	vscode/package.json	/^        "id": "welcome",$/;"	s	object:contributes.walkthroughs.0
id	vscode/src/completions/logger.ts	/^    const id = createId()$/;"	C	function:start
id	vscode/src/completions/providers/provider.ts	/^    id: string$/;"	p	interface:ProviderOptions
id	vscode/src/my-cody/InputMenu.ts	/^        id: 'codebase',$/;"	C
id	vscode/src/my-cody/InputMenu.ts	/^        id: 'command',$/;"	C
id	vscode/src/my-cody/InputMenu.ts	/^        id: 'currentDir',$/;"	C
id	vscode/src/my-cody/InputMenu.ts	/^        id: 'none',$/;"	C
id	vscode/src/my-cody/InputMenu.ts	/^        id: 'openTabs',$/;"	C
id	vscode/src/non-stop/FixupContentStore.ts	/^        const id = uri.fragment$/;"	C
id	vscode/src/non-stop/FixupContentStore.ts	/^        for (const id of files) {$/;"	C
id	vscode/src/non-stop/FixupTask.ts	/^    public id: taskID$/;"	p	class:FixupTask
id	vscode/src/services/AuthMenus.ts	/^        id: 'token',$/;"	C
id	vscode/src/services/AuthMenus.ts	/^    id: string$/;"	p	interface:LoginMenuItem
id	vscode/src/services/DecorationProvider.ts	/^        public id: string,$/;"	p	class:DecorationProvider
id	vscode/src/services/InlineController.ts	/^    private readonly id = 'cody-inline-chat'$/;"	p	class:InlineController
id-length	agent/.eslintrc.json	/^    "id-length": "off",$/;"	s	object:rules
id-length	cli/.eslintrc.json	/^    "id-length": "off",$/;"	s	object:rules
id-length	lib/shared/.eslintrc.json	/^    "id-length": "off",$/;"	s	object:rules
id-length	slack/.eslintrc.json	/^    "id-length": "off",$/;"	s	object:rules
id-length	vscode/.eslintrc.json	/^    "id-length": "off",$/;"	s	object:rules
id-length	web/.eslintrc.json	/^    "id-length": "off",$/;"	s	object:rules
idSet	vscode/src/my-cody/CustomRecipesBuilder.ts	/^    public idSet = new Set<string>()$/;"	p	class:CustomRecipesBuilder
id_	vscode/src/non-stop/FixupFile.ts	/^        private id_: number,$/;"	p	class:FixupFile
ide	lib/shared/src/telemetry/EventLogger.ts	/^    ide: 'VSCode' | 'JetBrains' | 'Neovim' | 'Emacs'$/;"	p	interface:ExtensionDetails
ideExtensionType	lib/shared/src/telemetry/EventLogger.ts	/^    ideExtensionType: 'Cody' | 'CodeSearch'$/;"	p	interface:ExtensionDetails
identifier	vscode/src/completions/providers/provider.ts	/^    identifier: string$/;"	p	interface:ProviderConfig
idf	vscode/src/local-context/local-keyword-context-fetcher.ts	/^function idf(termTotalFiles: { [term: string]: number }, totalFiles: number): { [term: string]: /;"	f
idfDict	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const idfDict = idf(termTotalFiles, totalFiles)$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
idfLogScore	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const idfLogScore = (idfDict[term] || 1) * logScore$/;"	C
idfLogScore	vscode/src/local-context/local-keyword-context-fetcher.ts	/^function idfLogScore($/;"	f
if	slack/src/services/local-vector-store.ts	/^    if (!codyNotice) {$/;"	C	function:getDocuments
if	vscode/scripts/release.ts	/^if (!tokens.vscode || !tokens.openvsx) {$/;"	C
if	vscode/src/chat/fastFileFinder.ts	/^    if (maxDepth !== undefined) {$/;"	C	function:executeRg
if	vscode/src/completions/index.ts	/^        if (multiline) {$/;"	C
if	vscode/src/my-cody/MyToolsProvider.ts	/^                if (selectedFile) {$/;"	C	method:MyToolsProvider.runFileSystemCommand
ignore	.stylelintrc.json	/^        "ignore": ["consecutive-duplicates-with-different-values"]$/;"	a	object:rules.declaration-block-no-duplicate-properties.1
ignoreFilesExtension	lib/shared/src/chat/recipes/context-search.ts	/^            const ignoreFilesExtension = \/^(md|txt)$\/$/;"	C	method:ContextSearch.displaySearchResults
ignoreFocusOut	vscode/src/services/AuthMenus.ts	/^        ignoreFocusOut: true,$/;"	C
ignorePseudoClasses	.stylelintrc.json	/^        "ignorePseudoClasses": ["global"]$/;"	a	object:rules.selector-pseudo-class-no-unknown.1
ignoreSet	vscode/src/completions/history.ts	/^        const ignoreSet = new Set(ignoreUris || [])$/;"	C
ignoreVoid	vscode/.eslintrc.json	/^    "@typescript-eslint\/no-floating-promises": ["error", { "ignoreVoid": true }],$/;"	b	object:rules.@typescript-eslint/no-floating-promises.1
ignoredRouteFiles	completions-review-tool/remix.config.js	/^  ignoredRouteFiles: ['**\/.*'],$/;"	p	property:module.exports
immutable	completions-review-tool/server.js	/^app.use('\/build', express.static('public\/build', { immutable: true, maxAge: '1y' }))$/;"	p	variable:anonymousObject39c914cd0105
implements	lib/shared/src/intent-detector/client.ts	/^export class SourcegraphIntentDetectorClient implements IntentDetector {$/;"	C
import/no-default-export	.eslintrc.js	/^        'import\/no-default-export': 'off',$/;"	p	property:anonymousObjectc892c5c20205.rules
import/no-default-export	.eslintrc.js	/^        'import\/no-default-export': 'off',$/;"	p	property:anonymousObjectc892c5c20305.rules
import/no-default-export	completions-review-tool/.eslintrc.json	/^    "import\/no-default-export": "off",$/;"	s	object:rules
inProgressComment	vscode/src/services/InlineController.ts	/^    private inProgressComment: Comment | null = null$/;"	p	class:InlineController
inProgressReplacement	vscode/src/non-stop/FixupTask.ts	/^    public inProgressReplacement: string | undefined$/;"	p	class:FixupTask
include	agent/tsconfig.json	/^  "include": ["**\/*", ".*", "package.json"],$/;"	a
include	cli/tsconfig.json	/^  "include": ["src"],$/;"	a
include	completions-review-tool/tsconfig.json	/^  "include": ["globals.d.ts", "remix.env.d.ts", "**\/*.ts", "**\/*.tsx", "*.js"],$/;"	a
include	lib/shared/tsconfig.json	/^  "include": ["src", "src\/telemetry\/EventLogger.ts"],$/;"	a
include	lib/ui/tsconfig.json	/^  "include": ["src"],$/;"	a
include	slack/tsconfig.json	/^  "include": ["src", "package.json"],$/;"	a
include	tsconfig.json	/^  "include": [$/;"	a
include	vscode/scripts/tsconfig.json	/^  "include": [".*", "*"],$/;"	a
include	vscode/test/completions/tsconfig.json	/^  "include": ["*.ts"],$/;"	a
include	vscode/test/integration/tsconfig.json	/^  "include": ["*.ts"],$/;"	a
include	vscode/tsconfig.json	/^  "include": [$/;"	a
include	web/tsconfig.json	/^  "include": ["src", "vite.config.ts"],$/;"	a
includeClosingLine	vscode/src/completions/multiline.ts	/^    const includeClosingLine = shouldIncludeClosingLine(prefixIndentationWithFirstCompletionLine/;"	C	function:shouldIncludeClosingLine
includeClosingLineBasedOnBrackets	vscode/src/completions/multiline.ts	/^    const includeClosingLineBasedOnBrackets = shouldIncludeClosingLineBasedOnBrackets($/;"	C	function:shouldIncludeClosingLine
includeInferredFile	lib/shared/src/chat/transcript/index.ts	/^    includeInferredFile: boolean$/;"	p	interface:TranscriptJSONScope
includeInferredFile	lib/shared/src/chat/useClient.ts	/^    includeInferredFile: boolean$/;"	p	interface:CodyClientScope
includeInferredRepository	lib/shared/src/chat/transcript/index.ts	/^    includeInferredRepository: boolean$/;"	p	interface:TranscriptJSONScope
includeInferredRepository	lib/shared/src/chat/useClient.ts	/^    includeInferredRepository: boolean$/;"	p	interface:CodyClientScope
incoming	vscode/src/non-stop/FixupDecorator.ts	/^        const incoming: vscode.Range[] = []$/;"	C
indentAmount	vscode/src/completions/multiline.ts	/^    const indentAmount = detectIndent(completion).amount$/;"	C	function:ensureSameOrLargerIndentation
indentLevel	vscode/src/completions/multiline.ts	/^            const indentLevel = spaceCount \/ originalIndent$/;"	C	function:adjustIndentation
indentation	vscode/src/completions/text-processing.ts	/^export function indentation(line: string): number {$/;"	f
index	lib/shared/src/chat/transcript/index.ts	/^            const hasContext = await this.interactions[index].hasContext()$/;"	C	method:Transcript.getLastInteractionWithContextIndex
index	lib/shared/src/chat/transcript/index.ts	/^            const interaction = this.interactions[index]$/;"	C	method:Transcript.getPromptForLastInteraction
index	lib/shared/src/chat/transcript/index.ts	/^            const { timestamp } = this.interactions[index]$/;"	C	method:Transcript.lastInteractionTimestamp
index	lib/shared/src/chat/transcript/index.ts	/^        const index = this.interactions.findIndex(({ timestamp }) => timestamp === id)$/;"	C	method:Transcript.removeInteractionsSince
index	vscode/src/completions/request-manager.ts	/^        const index = requestsForDocument?.indexOf(request)$/;"	C	method:RequestManager.removeRequest
index	vscode/src/non-stop/FixupContentStore.ts	/^            const index = tasks.indexOf(id)$/;"	C
index	vscode/test/completions/run-code-completions-on-dataset.ts	/^    for (const [index, code] of codeSamples.entries()) {$/;"	C	function:generateCompletionsForDataset
index	vscode/test/completions/utils.ts	/^        const index = lines[i].indexOf(substring)$/;"	C	function:findSubstringPosition
indexUri	vscode/test/integration/task-controller.test.ts	/^        const indexUri = vscode.Uri.parse(`${vscode.workspace.workspaceFolders[0].uri.toString()/;"	C
info	.vscode/cody.json	/^      "info": "This recipe lets Cody analyze code from open tabs to provide insights on how they/;"	s	object:recipes.Compare Files in Opened Tabs
info	.vscode/cody.json	/^      "info": "Works best if there are other test files in the current directory"$/;"	s	object:recipes.Generate Multiple Unit Tests
info	.vscode/cody.json	/^      "info": "You must have Cody app installed to use this recipe"$/;"	s	object:recipes.Debug last error from Cody app
info	.vscode/cody.json	/^      "info": "You must have git installed and authenticated to use this recipe"$/;"	s	object:recipes.Commit Message for Current Changes
info	agent/src/index.test.ts	/^        const info = await this.request('initialize', {$/;"	C	method:TestClient.handshake
info	vscode/resources/samples/user-cody.json	/^      "info": "This recipe lets Cody analyze code from open tabs to provide insights on how they/;"	s	object:recipes.Compare Files in Opened Tabs
info	vscode/resources/samples/workspace-cody.json	/^      "info": "You must have git installed and authenticated to use this recipe"$/;"	s	object:recipes.Commit Message for Current Changes
info	vscode/src/services/StatusBar.ts	/^                    const info = name + ' ' + (isEnabled ? 'disabled' : 'enabled') + '.'$/;"	C	function:createStatusBar
infoMessage	vscode/src/chat/ChatViewProvider.ts	/^        const infoMessage = `Cody could not find embeddings for '${codebase}' on your Sourcegrap/;"	C	function:getCodebaseContext
infoMessage	vscode/src/external-services.ts	/^        const infoMessage =$/;"	C	function:configureExternalServices
init	lib/shared/src/chat/recipes/agent-recipes.ts	/^function init(): void {$/;"	f
init	lib/shared/src/chat/recipes/browser-recipes.ts	/^function init(): void {$/;"	f
init	vscode/src/chat/ChatViewProvider.ts	/^        const init = (): void => {$/;"	C
init	vscode/src/chat/recipes.ts	/^function init(): void {$/;"	f
initCompletionsProvider	vscode/test/completions/run-code-completions-on-dataset.ts	/^async function initCompletionsProvider(): Promise<CodyCompletionItemProvider> {$/;"	f
initDecorationType	vscode/src/services/DecorationProvider.ts	/^const initDecorationType = vscode.window.createTextEditorDecorationType({})$/;"	C
initPost	vscode/src/services/InlineController.ts	/^const initPost = new vscode.Position(0, 0)$/;"	C
initRange	vscode/src/services/InlineController.ts	/^const initRange = new vscode.Range(initPost, initPost)$/;"	C
initialConfig	vscode/test/completions/run-code-completions-on-dataset.ts	/^    const initialConfig = await getFullConfig(secretStorage)$/;"	C	function:initCompletionsProvider
initialTranscript	lib/shared/src/chat/client.ts	/^    initialTranscript?: Transcript$/;"	p	interface:ClientInit
initialTranscript	lib/shared/src/chat/useClient.ts	/^    initialTranscript?: Transcript | null$/;"	p	interface:CodyClientProps
initializeNewChat	lib/shared/src/chat/useClient.ts	/^    const initializeNewChat = useCallback((): Transcript | null => {$/;"	C
initializeNewChat	lib/shared/src/chat/useClient.ts	/^    initializeNewChat: () => Transcript | null$/;"	p	interface:CodyClient
initiated	node_modules/autopreview/Autopreview.js	/^let initiated = false;$/;"	v
inline	lib/shared/src/editor/index.ts	/^    inline: VsCodeInlineController$/;"	p	interface:ActiveTextEditorViewControllers
inline	lib/shared/src/telemetry/EventLogger.ts	/^            inline: this.config.inlineChat,$/;"	C	method:EventLogger.log
inlineChat	lib/shared/src/configuration.ts	/^    inlineChat: boolean$/;"	p	interface:Configuration
inner	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    const inner = terms.map(t => {$/;"	C	function:regexForTerms
innerValue	lib/shared/src/hallucinations-detector/index.ts	/^    innerValue: string$/;"	p	interface:HighlightedToken
input	lib/shared/src/chat/transcript/messages.ts	/^    input: string[]$/;"	p	interface:UserLocalHistory
input	lib/shared/src/common/markdown/markdown.test.ts	/^        const input = '<a href="\/" rel="evil" style="foo:bar">Link<\/a><script>alert("x")<\/scr/;"	C
input	lib/shared/src/common/markdown/markdown.test.ts	/^        const input = '<a href="\/" target="_blank">Link<\/a>'$/;"	C
input	lib/shared/src/common/markdown/markdown.test.ts	/^        const input = '<a href="\/">Link<\/a>'$/;"	C
input	lib/shared/src/common/markdown/markdown.test.ts	/^        const input = '<a href="data:text\/plain,foobar" download>D<\/a>\\n[D2](data:text\/plain/;"	C
input	lib/shared/src/common/markdown/markdown.test.ts	/^        const input =$/;"	C
input	vscode/src/chat/ChatViewProvider.ts	/^            input: this.inputHistory,$/;"	C
input	vscode/src/main.ts	/^                const input = await vscode.window.showErrorMessage(error, 'Do not show again', '/;"	C
input	vscode/src/services/AuthProvider.ts	/^                    const input = await TokenInputBox(item.uri)$/;"	C
input	vscode/src/services/AuthProvider.ts	/^                const input = await LoginStepInputBox(endpoint, 1, true)$/;"	C
input	vscode/src/services/AuthProvider.ts	/^                const input = await LoginStepInputBox(item.uri, 1, false)$/;"	C
inputLowerCase	lib/shared/src/intent-detector/client.ts	/^        const inputLowerCase = input.toLowerCase()$/;"	C
inputOptions	vscode/src/my-cody/InputMenu.ts	/^    const inputOptions = {$/;"	C	function:showCustomRecipeMenu
insertedLastLine	vscode/src/non-stop/tracked-range.ts	/^    const insertedLastLine = lines.at(-1)?.length$/;"	C	function:updateRange
insertedLineBreaks	vscode/src/non-stop/tracked-range.ts	/^    const insertedLineBreaks = lines.length - 1$/;"	C	function:updateRange
insertionLines	vscode/src/completions/text-processing.ts	/^    const insertionLines = insertion.split('\\n')$/;"	C	function:trimUntilSuffix
insiderBuild	lib/shared/src/sourcegraph-api/graphql/client.ts	/^        const insiderBuild = siteVersion.length > 12 || siteVersion.includes('dev')$/;"	C	method:SourcegraphGraphQLAPIClient.isCodyEnabled
insidersVersion	vscode/scripts/release.ts	/^const insidersVersion = semver.inc(packageJSONVersion, 'minor')?.replace(\/\\.\\d+$\/, `.${Math./;"	C
insidersVersion	vscode/scripts/release.ts	/^const version = releaseType === ReleaseType.Insiders ? insidersVersion : packageJSONVersion$/;"	C
inspect	vscode/src/configuration.ts	/^    const inspect = config.inspect(oldKey)$/;"	C	function:migrateDeprecatedConfigOption
instance	vscode/src/test-support.ts	/^    public static instance: TestSupport | undefined$/;"	p	class:TestSupport
instanceLimit	.vscode/tasks.json	/^      "runOptions": { "runOn": "folderOpen", "instanceLimit": 1 },$/;"	n	object:tasks.0.runOptions
instruction	lib/shared/src/chat/recipes/non-stop.ts	/^        const { instruction, fileName, precedingText, selectedText, followingText } = taskParame/;"	C	method:NonStop.getInteraction
instruction	vscode/src/non-stop/FixupTask.ts	/^        public readonly instruction: string,$/;"	p	class:FixupTask
instruction	vscode/src/non-stop/FixupTypingUI.ts	/^        const instruction = ($/;"	C	method:FixupTypingUI.show
intentDetector	cli/src/client/index.ts	/^    const intentDetector = new SourcegraphIntentDetectorClient(sourcegraphClient)$/;"	C	function:getClient
intentDetector	cli/src/client/index.ts	/^    intentDetector: IntentDetector$/;"	p	interface:Client
intentDetector	cli/src/client/index.ts	/^    return { codebaseContext, intentDetector, completionsClient }$/;"	C	function:getClient
intentDetector	lib/shared/src/chat/client.ts	/^    const intentDetector = new SourcegraphIntentDetectorClient(graphqlClient)$/;"	C	function:createClient
intentDetector	lib/shared/src/chat/recipes/recipe.ts	/^    intentDetector: IntentDetector$/;"	p	interface:RecipeContext
intentDetector	slack/src/services/sourcegraph-client.ts	/^export const intentDetector = new SourcegraphIntentDetectorClient(sourcegraphClient)$/;"	C
intentDetector	vscode/src/external-services.ts	/^    intentDetector: IntentDetector$/;"	p	interface:ExternalServices
intentDetector	vscode/src/main.ts	/^        intentDetector,$/;"	C
interaction	cli/src/client/completions.ts	/^        const interaction = await interactionFromMessage($/;"	C	function:getCompletionWithContext
interaction	lib/shared/src/chat/client.ts	/^        const interaction = await recipe.getInteraction(humanChatInput, {$/;"	C	function:createClient
interaction	lib/shared/src/chat/transcript/index.ts	/^            const interaction = this.interactions[index]$/;"	C	method:Transcript.getPromptForLastInteraction
interaction	lib/shared/src/chat/transcript/transcript.test.ts	/^        const interaction = await chatQuestionRecipe.getInteraction($/;"	C
interaction	lib/shared/src/chat/transcript/transcript.test.ts	/^        const interaction = await new ChatQuestion(() => {}).getInteraction($/;"	C
interaction	lib/shared/src/chat/transcript/transcript.test.ts	/^        const interaction = await new ChatQuestion(() => {}).getInteraction($/;"	C	function:generateLongTranscript
interaction	lib/shared/src/chat/useClient.ts	/^            const interaction = await recipe.getInteraction(humanChatInput, {$/;"	C
interaction	vscode/src/chat/ChatViewProvider.ts	/^        const interaction = await recipe.getInteraction(humanChatInput, {$/;"	C
interactionFromMessage	cli/src/client/interactions.ts	/^export async function interactionFromMessage($/;"	f
interactions	lib/shared/src/chat/transcript/index.ts	/^        const interactions = await Promise.all(this.interactions.map(interaction => interaction./;"	C	method:Transcript.toJSON
interactions	lib/shared/src/chat/transcript/index.ts	/^    interactions: InteractionJSON[]$/;"	p	interface:TranscriptJSON
interactions	lib/shared/src/chat/transcript/index.ts	/^    private interactions: Interaction[] = []$/;"	p	class:Transcript
interface	vscode/src/local-context/local-keyword-context-fetcher.ts	/^interface RipgrepStreamData {$/;"	C
interface	vscode/src/services/LocalAppFsPaths.ts	/^export interface AppJson {$/;"	C
internalID	lib/shared/src/chat/transcript/index.ts	/^    private internalID: string$/;"	p	class:Transcript
intersection	vscode/src/completions/bestJaccardMatch.ts	/^    const union = left + right - intersection$/;"	C	function:jaccardDistance
intersectionIncrease	vscode/src/completions/bestJaccardMatch.ts	/^        const { windowIncrease, intersectionIncrease } = add($/;"	C	function:bestJaccardMatch
isAbortError	vscode/src/chat/ChatViewProvider.ts	/^function isAbortError(error: string): boolean {$/;"	f
isAbortError	vscode/src/completions/utils.ts	/^export function isAbortError(error: Error): boolean {$/;"	f
isActive	vscode/src/my-cody/CustomRecipesBuilder.ts	/^        private isActive: boolean,$/;"	p	class:CustomRecipesBuilder
isAfter	vscode/src/testutils/mocks.ts	/^    public isAfter(other: Position): boolean {$/;"	m	class:Position
isAllowed	vscode/src/chat/utils.ts	/^    const isAllowed = authStatus.requiresVerifiedEmail ? authStatus.hasVerifiedEmail : true$/;"	C	function:newAuthStatus
isApp	vscode/src/services/AuthProvider.ts	/^        const isApp = params.get('type') === 'app'$/;"	C
isAppEvent	vscode/src/chat/ChatViewProvider.ts	/^        const isAppEvent = isLocalApp(authStatus.endpoint || '') ? 'app:' : ''$/;"	C
isAppInstalled	vscode/src/chat/protocol.ts	/^    isAppInstalled: boolean$/;"	p	interface:LocalEnv
isAppInstalled	vscode/src/services/LocalAppDetector.ts	/^    isAppInstalled: false,$/;"	C
isAppRunning	vscode/src/chat/protocol.ts	/^    isAppRunning: boolean$/;"	p	interface:LocalEnv
isAppRunning	vscode/src/services/LocalAppDetector.ts	/^    isAppRunning: false,$/;"	C
isBackground	.vscode/tasks.json	/^      "isBackground": true$/;"	b	object:tasks.1
isBackground	.vscode/tasks.json	/^      "isBackground": true,$/;"	b	object:tasks.0
isBotEvent	slack/src/slack/helpers.ts	/^export const isBotEvent = (event: SlackEvent) => {$/;"	C
isCodebaseContextRequired	cli/src/client/interactions.ts	/^    const isCodebaseContextRequired = await intentDetector.isCodebaseContextRequired(text)$/;"	C	function:getContextMessages
isCodebaseContextRequired	lib/shared/src/chat/recipes/next-questions.ts	/^        const isCodebaseContextRequired = await intentDetector.isCodebaseContextRequired(text)$/;"	C	method:NextQuestions.getContextMessages
isCodebaseContextRequired	lib/shared/src/intent-detector/client.ts	/^    public isCodebaseContextRequired(input: string): Promise<boolean | Error> {$/;"	C
isCodebaseContextRequired	lib/shared/src/intent-detector/index.ts	/^    isCodebaseContextRequired(input: string): Promise<boolean | Error>$/;"	m	interface:IntentDetector
isCodebaseContextRequired	slack/src/slack/message-interaction.ts	/^        const isCodebaseContextRequired = true$/;"	C	method:SlackInteraction.updateContextMessages
isCodyEnabled	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    public async isCodyEnabled(): Promise<{ enabled: boolean; version: string }> {$/;"	m	class:SourcegraphGraphQLAPIClient
isCodyEnabled	vscode/src/services/AuthProvider.ts	/^        const isCodyEnabled = true$/;"	C
isContextRequired	lib/shared/src/chat/recipes/my-prompt.ts	/^        const isContextRequired = contextConfig$/;"	C	method:MyPrompt.getContextMessages
isContextRequiredForChatQuery	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    isContextRequiredForChatQuery: boolean$/;"	p	interface:IsContextRequiredForChatQueryResponse
isDefault	.vscode/tasks.json	/^        "isDefault": true$/;"	b	object:tasks.0.group
isDefined	lib/shared/src/common/index.ts	/^export const isDefined = <T>(value: T): value is NonNullable<T> => value !== undefined && value /;"	C
isDeleted	vscode/src/non-stop/FixupFile.ts	/^    public get isDeleted(): boolean {$/;"	m	class:FixupFile
isDotCom	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    public isDotCom(): boolean {$/;"	m	class:SourcegraphGraphQLAPIClient
isDotCom	vscode/src/chat/protocol.ts	/^export function isDotCom(url: string): boolean {$/;"	f
isDotComOrApp	vscode/src/chat/utils.test.ts	/^    const isDotComOrApp = true$/;"	C
isDotComOrApp	vscode/src/services/AuthProvider.ts	/^        const isDotComOrApp = this.client.isDotCom() || isLocalApp(endpoint)$/;"	C
isDotComOrApp	vscode/src/services/AuthProvider.ts	/^        const isDotComOrApp = uri === LOCAL_APP_URL.href || uri === DOTCOM_URL.href$/;"	C
isEditorContextRequired	lib/shared/src/chat/recipes/chat-question.ts	/^        const isEditorContextRequired = intentDetector.isEditorContextRequired(text)$/;"	C	method:ChatQuestion.getContextMessages
isEditorContextRequired	lib/shared/src/intent-detector/client.ts	/^    public isEditorContextRequired(input: string): boolean | Error {$/;"	C
isEditorContextRequired	lib/shared/src/intent-detector/index.ts	/^    isEditorContextRequired(input: string): boolean | Error$/;"	m	interface:IntentDetector
isEmbeddingsContextEnabled	vscode/src/completions/context.ts	/^    const { maxChars, isEmbeddingsContextEnabled } = options$/;"	C	function:getContext
isEmbeddingsContextEnabled	vscode/src/completions/context.ts	/^    isEmbeddingsContextEnabled?: boolean$/;"	p	interface:GetContextOptions
isEmbeddingsContextEnabled	vscode/src/completions/index.ts	/^            isEmbeddingsContextEnabled = true,$/;"	C
isEmbeddingsContextEnabled	vscode/src/completions/index.ts	/^    isEmbeddingsContextEnabled?: boolean$/;"	p	interface:CodyCompletionItemProviderConfig
isEmpty	lib/shared/src/chat/transcript/index.ts	/^    public get isEmpty(): boolean {$/;"	m	class:Transcript
isEmpty	vscode/src/non-stop/FixupDecorator.ts	/^        const isEmpty = decorations.edits.length === 0 && decorations.conflicts.length === 0$/;"	C
isError	lib/shared/src/utils.ts	/^export const isError = (value: unknown): value is Error => value instanceof Error$/;"	C
isErrorLike	lib/shared/src/common/index.ts	/^export const isErrorLike = (value: unknown): value is ErrorLike =>$/;"	C
isExactPrefix	vscode/src/completions/cache.ts	/^            isExactPrefix,$/;"	C	method:CompletionsCache.get
isExactPrefix	vscode/src/completions/cache.ts	/^    isExactPrefix: boolean$/;"	p	interface:CachedCompletions
isFilePathLike	lib/shared/src/hallucinations-detector/index.ts	/^function isFilePathLike(fullMatch: string, pathMatch: string): boolean {$/;"	f
isFixMode	vscode/src/main.ts	/^            const isFixMode = \/^\\\/f(ix)?\\s\/i.test(comment.text.trimStart())$/;"	C
isHallucinated	lib/shared/src/hallucinations-detector/index.ts	/^    isHallucinated: boolean$/;"	p	interface:HighlightedToken
isHallucinatedClassName	lib/shared/src/hallucinations-detector/index.ts	/^    const isHallucinatedClassName = token.isHallucinated ? 'hallucinated' : 'not-hallucinated'$/;"	C	function:getHighlightedTokenHTML
isInternalUser	vscode/src/chat/protocol.ts	/^export function isInternalUser(url: string): boolean {$/;"	f
isLocalApp	vscode/src/chat/protocol.ts	/^export function isLocalApp(url: string): boolean {$/;"	f
isLoggedIn	vscode/src/chat/protocol.ts	/^    isLoggedIn: boolean$/;"	p	interface:AuthStatus
isLoggedIn	vscode/src/chat/protocol.ts	/^export function isLoggedIn(authStatus: AuthStatus): boolean {$/;"	f
isLoggedIn	vscode/src/chat/utils.test.ts	/^            isLoggedIn: true,$/;"	C
isLoggedIn	vscode/src/chat/utils.ts	/^    const isLoggedIn = authStatus.siteHasCodyEnabled && authStatus.authenticated$/;"	C	function:newAuthStatus
isLoggedIn	vscode/src/services/AuthProvider.ts	/^        const isLoggedIn = isAuthed(authStatus)$/;"	C
isLoggedOut	vscode/src/chat/ChatViewProvider.ts	/^        const isLoggedOut = !authStatus.isLoggedIn && !authStatus.endpoint$/;"	C
isMarkdownFile	lib/shared/src/prompt/templates.ts	/^export function isMarkdownFile(filePath: string): boolean {$/;"	f
isMessageInProgress	lib/shared/src/chat/client.ts	/^    readonly isMessageInProgress: boolean$/;"	p	interface:Client
isMessageInProgress	lib/shared/src/chat/useClient.ts	/^    readonly isMessageInProgress: boolean$/;"	p	interface:CodyClient
isMusl	vscode/src/rg.ts	/^async function isMusl(): Promise<boolean> {$/;"	f
isOsSupportedByApp	vscode/src/chat/protocol.ts	/^export function isOsSupportedByApp(os?: string, arch?: string): boolean {$/;"	f
isPrivateInstance	vscode/src/chat/ChatViewProvider.ts	/^        const isPrivateInstance = new URL(endpoint).href !== DOTCOM_URL.href$/;"	C
isRepoNotFoundError	lib/shared/src/sourcegraph-api/graphql/client.ts	/^export const isRepoNotFoundError = (value: unknown): value is RepoNotFoundError => value instanc/;"	C
isSaveMode	vscode/src/my-cody/MyPromptController.ts	/^        const isSaveMode = true$/;"	C	method:MyPromptController.save
isTestRequest	lib/shared/src/chat/recipes/my-prompt.ts	/^            const isTestRequest = text.includes('test')$/;"	C	method:MyPrompt.getContextMessages
isTesting	vscode/src/configuration.ts	/^        const isTesting = process.env.CODY_TESTING === 'true'$/;"	C	function:sanitizeServerEndpoint
isTesting	vscode/src/configuration.ts	/^    const isTesting = process.env.CODY_TESTING === 'true'$/;"	C	function:getConfiguration
isTextTooShort	lib/shared/src/chat/recipes/chat-question.ts	/^        const isTextTooShort = text.split(' ').length < 2$/;"	C	method:ChatQuestion.getContextMessages
isUserType	vscode/src/my-cody/MyPromptController.ts	/^        const isUserType = type === 'user'$/;"	C	method:MyPromptController.addJSONFile
isUserType	vscode/src/my-cody/MyPromptController.ts	/^        const isUserType = type === 'user'$/;"	C	method:MyPromptController.clear
isbot	completions-review-tool/package.json	/^    "isbot": "^3.6.8",$/;"	s	object:dependencies
isolatedModules	tsconfig.base.json	/^    "isolatedModules": false,$/;"	b	object:compilerOptions
isomorphic-fetch	lib/shared/package.json	/^    "isomorphic-fetch": "^3.0.0",$/;"	s	object:dependencies
isomorphic-fetch	vscode/package.json	/^    "isomorphic-fetch": "^3.0.0",$/;"	s	object:dependencies
item	vscode/src/completions/history.ts	/^            const item = this.history[i]$/;"	C
item	vscode/src/non-stop/FixupScheduler.ts	/^        const item = this.work_.shift()$/;"	C	method:FixupScheduler.doWorkNow
item	vscode/src/services/AuthProvider.ts	/^        const item = await AuthMenu(mode, this.endpointHistory)$/;"	C
items	lib/shared/src/chat/recipes/git-log.ts	/^        const items = [$/;"	C	method:GitHistory.getInteraction
items	lib/shared/src/codebase-context/rerank.ts	/^    const items = result.list.item$/;"	C	function:parseXml
items	lib/shared/src/plugins/built-in/confluence.ts	/^                    const items = await searchWiki(query, {$/;"	C
items	lib/shared/src/plugins/built-in/github-issues.ts	/^    items: Item[]$/;"	p	interface:GitHubResponse
iterations	vscode/src/services/InlineController.ts	/^        let iterations = 0$/;"	v
iterationsPerCodeSample	vscode/test/completions/run-code-completions-on-dataset.ts	/^const iterationsPerCodeSample = parseInt(process.env.ITER || '1', 10)$/;"	C
j	vscode/src/non-stop/diff.ts	/^        const op = ops[j * (lenA + 1) + i]$/;"	C	function:longestCommonSubsequence
jaccardDistance	vscode/src/completions/bestJaccardMatch.ts	/^export function jaccardDistance(left: number, right: number, intersection: number): number {$/;"	f
jaccardDistanceWindowSize	vscode/src/completions/context-local.ts	/^    const { document, history, prefix, jaccardDistanceWindowSize } = options$/;"	C	function:getContextFromCurrentEditor
jaccardDistanceWindowSize	vscode/src/completions/context-local.ts	/^    jaccardDistanceWindowSize: number$/;"	p	interface:Options
jaccardDistanceWindowSize	vscode/src/completions/context.ts	/^    jaccardDistanceWindowSize: number$/;"	p	interface:GetContextOptions
jsdom	package.json	/^    "jsdom": "^22.1.0",$/;"	s	object:devDependencies
json	lib/shared/src/plugins/built-in/air-quality.ts	/^                    const json = await response.json()$/;"	C
json	lib/shared/src/plugins/built-in/timezone.ts	/^                    const json = await response.json()$/;"	C
json	lib/shared/src/plugins/built-in/weather.ts	/^                    const json = await response.json()$/;"	C
json	vscode/src/my-cody/CustomRecipesBuilder.ts	/^        const json = JSON.parse(content) as MyPromptsJSON$/;"	C	method:CustomRecipesBuilder.build
jsonContext	vscode/src/my-cody/MyPromptController.ts	/^        const jsonContext = { ...this.builder.userPromptsJSON }$/;"	C	method:MyPromptController.save
jsonData	completions-review-tool/src/models/completions.server.ts	/^    const jsonData = JSON.parse(fileContent)$/;"	C
jsonData	lib/shared/src/sourcegraph-api/completions/parse.ts	/^    const jsonData = dataLine.slice(DATA_LINE_PREFIX.length)$/;"	C	function:parseEventData
jsonFileUris	vscode/src/my-cody/CustomRecipesBuilder.ts	/^    public jsonFileUris: { user?: vscode.Uri; workspace?: vscode.Uri }$/;"	p	class:CustomRecipesBuilder
jsonFiles	completions-review-tool/src/models/completions.server.ts	/^const jsonFiles = fs.readdirSync(dataDir).filter(file => file.endsWith('.json'))$/;"	C
jsonString	vscode/src/my-cody/MyPromptController.ts	/^        const jsonString = JSON.stringify(jsonContext)$/;"	C	method:MyPromptController.save
jsonrpc	agent/src/jsonrpc.ts	/^    jsonrpc: '2.0'$/;"	p	interface:NotificationMessage
jsonrpc	agent/src/jsonrpc.ts	/^    jsonrpc: '2.0'$/;"	p	interface:RequestMessage
jsonrpc	agent/src/jsonrpc.ts	/^    jsonrpc: '2.0'$/;"	p	interface:ResponseMessage
jsx	completions-review-tool/tsconfig.json	/^    "jsx": "react-jsx",$/;"	s	object:compilerOptions
jsx	lib/ui/tsconfig.json	/^    "jsx": "react-jsx",$/;"	s	object:compilerOptions
jsx	vscode/tsconfig.json	/^    "jsx": "react-jsx",$/;"	s	object:compilerOptions
jsx	web/tsconfig.json	/^    "jsx": "react-jsx",$/;"	s	object:compilerOptions
key	completions-review-tool/globals.d.ts	/^    const classes: { readonly [key: string]: string }$/;"	C
key	lib/ui/src/globals.d.ts	/^    const classes: { readonly [key: string]: string }$/;"	C
key	vscode/package.json	/^        "key": "alt+\/",$/;"	s	object:contributes.keybindings.0
key	vscode/package.json	/^        "key": "ctrl+alt+\/",$/;"	s	object:contributes.keybindings.3
key	vscode/package.json	/^        "key": "ctrl+shift+c",$/;"	s	object:contributes.keybindings.4
key	vscode/package.json	/^        "key": "ctrl+shift+v",$/;"	s	object:contributes.keybindings.2
key	vscode/package.json	/^        "key": "ctrl+shift+v",$/;"	s	object:contributes.keybindings.5
key	vscode/src/completions/cache.ts	/^                const key = trimEndOnLastLineIfWhitespaceOnly(completion.prefix) + completion.co/;"	C	method:CompletionsCache.get
key	vscode/src/my-cody/CustomRecipesBuilder.ts	/^                const prompt = prompts[key]$/;"	C	method:CustomRecipesBuilder.build
key	vscode/src/my-cody/CustomRecipesBuilder.ts	/^        for (const key in prompts) {$/;"	C	method:CustomRecipesBuilder.build
key	vscode/src/my-cody/MyPromptController.ts	/^        for (const [key, value] of this.myPromptStore) {$/;"	C	method:MyPromptController.save
key	vscode/webviews/globals.d.ts	/^    const classes: { readonly [key: string]: string }$/;"	C
key	web/src/globals.d.ts	/^    const classes: { readonly [key: string]: string }$/;"	C
keyProperty	vscode/src/configuration-keys.ts	/^        const keyProperty = camelCase(key.split('.').slice(1).join('.')) as keyof ConfigurationK/;"	C	function:getConfigFromPackageJson
keybindings	vscode/package.json	/^    "keybindings": [$/;"	a	object:contributes
keywordExpansionDuration	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const keywordExpansionDuration = Date.now() - keywordExpansionStartTime$/;"	C	method:LocalKeywordContextFetcher.userQueryToKeywordQuery
keywordExpansionStartTime	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const keywordExpansionStartTime = Date.now()$/;"	C	method:LocalKeywordContextFetcher.userQueryToKeywordQuery
keywordIndex	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                    const keywordIndex = snippet.indexOf(matches ? matches[0] : query)$/;"	C	method:LocalKeywordContextFetcher.getSearchContext
keywordPattern	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                    const keywordPattern = new RegExp(stems, 'g')$/;"	C	method:LocalKeywordContextFetcher.getSearchContext
keywordResults	lib/shared/src/codebase-context/index.ts	/^            const [keywordResults, filenameResults] = await Promise.all([keywordResultsPromise, /;"	C	method:CodebaseContext.getLocalContextMessages
keywordResultsPromise	lib/shared/src/codebase-context/index.ts	/^            const keywordResultsPromise = this.getKeywordSearchResults(query, options)$/;"	C	method:CodebaseContext.getLocalContextMessages
keywords	lib/shared/src/codebase-context/index.ts	/^        private keywords: KeywordContextFetcher | null,$/;"	p	class:CodebaseContext
keywords	vscode/package.json	/^  "keywords": [$/;"	a
keywords	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const keywords = await new Promise<string[]>((resolve, reject) => {$/;"	C	method:LocalKeywordContextFetcher.userQueryToExpandedKeywords
kind	.vscode/tasks.json	/^        "kind": "build",$/;"	s	object:tasks.0.group
kw	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        for (const kw of keywords) {$/;"	C	method:LocalKeywordContextFetcher.userQueryToExpandedKeywords
l	vscode/test/completions/vscode-text-document.ts	/^            const l = lines[i]$/;"	C
label	.vscode/tasks.json	/^      "label": "Build VS Code Extension",$/;"	s	object:tasks.1
label	lib/shared/src/chat/transcript/messages.ts	/^    label: string$/;"	p	interface:ChatButton
label	vscode/package.json	/^        "label": "Cody",$/;"	s	object:contributes.submenus.0
label	vscode/src/editor/vscode-editor.ts	/^        const label = await vscode.window.showQuickPick(labels)$/;"	C	method:VSCodeEditor.getActiveTextEditorVisibleContent
label	vscode/src/notifications/index.ts	/^    label: string$/;"	p	interface:Action
label	vscode/src/services/AuthMenus.ts	/^    label: string$/;"	p	interface:LoginMenuItem
label	vscode/src/services/InlineController.ts	/^    private readonly label = 'Cody: Inline Chat'$/;"	p	class:InlineController
lang	vscode/src/completions/docprovider.ts	/^    lang: string$/;"	p	interface:CompletionGroup
langchain	slack/package.json	/^    "langchain": "^0.0.105",$/;"	s	object:dependencies
languageId	vscode/src/completions/providers/provider.ts	/^    languageId: string$/;"	p	interface:ProviderOptions
languageMarkdownID	lib/shared/src/chat/recipes/langs.ts	/^export const languageMarkdownID: { [name: string]: string } = {$/;"	C
languageName	lib/shared/src/chat/recipes/explain-code-detailed.ts	/^        const languageName = getNormalizedLanguageName(selection.fileName)$/;"	C	method:ExplainCodeDetailed.getInteraction
languageName	lib/shared/src/chat/recipes/explain-code-high-level.ts	/^        const languageName = getNormalizedLanguageName(selection.fileName)$/;"	C	method:ExplainCodeHighLevel.getInteraction
languageName	lib/shared/src/chat/recipes/find-code-smells.ts	/^        const languageName = getNormalizedLanguageName(selection.fileName)$/;"	C	method:FindCodeSmells.getInteraction
languageName	lib/shared/src/chat/recipes/generate-docstring.ts	/^        const languageName = getNormalizedLanguageName(selection.fileName)$/;"	C	method:GenerateDocstring.getInteraction
languageName	lib/shared/src/chat/recipes/generate-test.ts	/^        const languageName = getNormalizedLanguageName(selection.fileName)$/;"	C	method:GenerateTest.getInteraction
languageName	lib/shared/src/chat/recipes/improve-variable-names.ts	/^        const languageName = getNormalizedLanguageName(selection.fileName)$/;"	C	method:ImproveVariableNames.getInteraction
languageNames	lib/shared/src/chat/recipes/langs.ts	/^export const languageNames = Array.from(Object.keys(languageMarkdownID))$/;"	C
languagePromptMixin	lib/shared/src/prompt/prompt-mixin.ts	/^export function languagePromptMixin(languageCode: string): PromptMixin {$/;"	f
lastArg	vscode/src/log.ts	/^    const lastArg = args[args.length - 1]$/;"	C	function:debug
lastAssistantMessage	lib/shared/src/chat/transcript/index.ts	/^        const lastAssistantMessage = lastInteraction.getAssistantMessage().displayText || ''$/;"	C	method:Transcript.addErrorAsAssistantResponse
lastChange	vscode/src/completions/context-embeddings.ts	/^    lastChange: Date$/;"	p	interface:EmbeddingsForFile
lastChange	vscode/src/completions/index.ts	/^        const lastChange = this.lastContentChanges.get(document.fileName) ?? 'add'$/;"	C
lastChatUsedEmbeddings	vscode/src/chat/ChatViewProvider.ts	/^        const lastChatUsedEmbeddings = lastContextFiles$/;"	C
lastCompletion	vscode/src/log.ts	/^        let lastCompletion = ''$/;"	v
lastContextFiles	vscode/src/chat/ChatViewProvider.ts	/^        const lastContextFiles = privateChatTranscript.at(-1)?.contextFiles$/;"	C
lastDashIndex	vscode/src/non-stop/utils.ts	/^    const lastDashIndex = filePath.lastIndexOf('\/')$/;"	C	function:getFileNameAfterLastDash
lastEndpoint	vscode/src/services/AuthProvider.ts	/^        const lastEndpoint = this.localStorage?.getEndpoint() || this.config.serverEndpoint$/;"	C
lastHumanMessageIndex	vscode/test/fixtures/mock-server.ts	/^        const lastHumanMessageIndex = request.body.messages.length - 2$/;"	C	function:run
lastHumanMessageIndex	vscode/test/fixtures/mock-server.ts	/^        const response = request.body.messages[lastHumanMessageIndex].text.includes(FIXUP_PROMPT/;"	C	function:run
lastInteraction	lib/shared/src/chat/transcript/index.ts	/^        const lastInteraction = this.getLastInteraction()$/;"	C	method:Transcript.addErrorAsAssistantResponse
lastInteraction	slack/src/mention-handler.ts	/^        const lastInteraction = mergedMessages[mergedMessages.length - 1]$/;"	C	function:mergeSequentialUserMessages
lastInteraction	slack/src/mention-handler.ts	/^    const lastInteraction = newHumanSlackInteraction.getTranscriptInteraction()$/;"	C	function:restoreTranscriptFromSlackThread
lastInteraction	slack/src/mention-handler.ts	/^    const lastInteraction = transcript.getLastInteraction()!$/;"	C	function:startCompletionStreaming
lastInteraction	vscode/src/chat/ChatViewProvider.ts	/^                const lastInteraction = this.transcript.getLastInteraction()$/;"	C
lastInteractionTimestamp	lib/shared/src/chat/transcript/index.ts	/^    lastInteractionTimestamp: string$/;"	p	interface:TranscriptJSON
lastInteractionTimestamp	lib/shared/src/chat/transcript/index.ts	/^    public get lastInteractionTimestamp(): string {$/;"	m	class:Transcript
lastInteractionWithContextIndex	lib/shared/src/chat/transcript/index.ts	/^        const lastInteractionWithContextIndex = await this.getLastInteractionWithContextIndex()$/;"	C	method:Transcript.getPromptForLastInteraction
lastNLines	vscode/src/completions/context-local.ts	/^function lastNLines(text: string, n: number): string {$/;"	f
lastNLines	vscode/src/completions/utils.ts	/^export function lastNLines(text: string, n: number): string {$/;"	f
lastNewlineOfPrefix	vscode/src/completions/text-processing.ts	/^            const lastNewlineOfPrefix = prefix.lastIndexOf('\\n')$/;"	C	function:trimUntilSuffix
lastValidByteOffsetExclusive	lib/shared/src/sourcegraph-api/utils.ts	/^        const byte = buf[lastValidByteOffsetExclusive - numBytes]$/;"	C
lastValidByteOffsetExclusive	lib/shared/src/sourcegraph-api/utils.ts	/^    let lastValidByteOffsetExclusive = buf.length$/;"	v
latency	vscode/src/completions/logger.ts	/^        const latency = suggestedAt - startedAt$/;"	C	function:logSuggestionEvent
lcs	vscode/src/non-stop/diff.test.ts	/^        const lcs = longestCommonSubsequence(a, b)$/;"	C
lcs	vscode/src/non-stop/diff.test.ts	/^        const lcs = longestCommonSubsequence(palindrome, palindrome)$/;"	C
leadSpace	vscode/src/completions/text-processing.ts	/^    leadSpace: string$/;"	p	interface:TrimmedString
lenA	vscode/src/non-stop/diff.ts	/^    const lenA = a.length$/;"	C	function:longestCommonSubsequence
lenB	vscode/src/non-stop/diff.ts	/^    const lenB = b.length$/;"	C	function:longestCommonSubsequence
length	vscode/test/completions/vscode-text-document.ts	/^        const length = this.offsetAt(range.end) - offset$/;"	C
lens	vscode/src/non-stop/codelenses.ts	/^    const lens = new vscode.CodeLens(codeLensRange)$/;"	C	function:getApplyLens
lens	vscode/src/non-stop/codelenses.ts	/^    const lens = new vscode.CodeLens(codeLensRange)$/;"	C	function:getApplyingLens
lens	vscode/src/non-stop/codelenses.ts	/^    const lens = new vscode.CodeLens(codeLensRange)$/;"	C	function:getAskingLens
lens	vscode/src/non-stop/codelenses.ts	/^    const lens = new vscode.CodeLens(codeLensRange)$/;"	C	function:getCancelLens
lens	vscode/src/non-stop/codelenses.ts	/^    const lens = new vscode.CodeLens(codeLensRange)$/;"	C	function:getDiffLens
lens	vscode/src/non-stop/codelenses.ts	/^    const lens = new vscode.CodeLens(codeLensRange)$/;"	C	function:getDiscardLens
lens	vscode/src/non-stop/codelenses.ts	/^    const lens = new vscode.CodeLens(codeLensRange)$/;"	C	function:getErrorLens
lens	vscode/src/non-stop/codelenses.ts	/^    const lens = new vscode.CodeLens(codeLensRange)$/;"	C	function:getReadyLens
lens	vscode/src/non-stop/codelenses.ts	/^    const lens = new vscode.CodeLens(codeLensRange)$/;"	C	function:getWaitingLens
lens	vscode/src/services/CodeLensProvider.ts	/^    const lens = new vscode.CodeLens(codeLensRange)$/;"	C	function:getInlineAcceptLens
lens	vscode/src/services/CodeLensProvider.ts	/^    const lens = new vscode.CodeLens(codeLensRange)$/;"	C	function:getInlineCloseLens
lens	vscode/src/services/CodeLensProvider.ts	/^    const lens = new vscode.CodeLens(codeLensRange)$/;"	C	function:getInlineUndoLens
lens	vscode/src/services/InlineController.ts	/^            const lens = this.codeLenses.get(this.currentTaskId)$/;"	C
lens	vscode/src/services/InlineController.ts	/^        const lens = await this.makeCodeLenses(comment.id, this.extensionPath, thread)$/;"	C
lens	vscode/src/services/InlineController.ts	/^        const lens = new CodeLensProvider(taskID, extPath, thread)$/;"	C
lens	vscode/src/services/InlineController.ts	/^        const lens = this.codeLenses.get(this.currentTaskId)$/;"	C
lenses	vscode/src/non-stop/FixupCodeLenses.ts	/^        const lenses = []$/;"	C
let	cli/src/client/index.ts	/^    let codebaseContext: CodebaseContext$/;"	C	function:getClient
lib	lib/shared/tsconfig.json	/^    "lib": ["ESNext", "DOM.Iterable"],$/;"	a	object:compilerOptions
lib	lib/ui/tsconfig.json	/^    "lib": ["ESNext", "DOM", "DOM.Iterable"],$/;"	a	object:compilerOptions
lib	tsconfig.base.json	/^    "lib": ["ESNext"],$/;"	a	object:compilerOptions
lib	vscode/tsconfig.json	/^    "lib": ["ESNext", "DOM"],$/;"	a	object:compilerOptions
lib	web/tsconfig.json	/^    "lib": ["ESNext", "DOM"],$/;"	a	object:compilerOptions
license	agent/package.json	/^  "license": "Apache-2.0",$/;"	s
license	cli/package.json	/^  "license": "Apache-2.0",$/;"	s
license	lib/shared/package.json	/^  "license": "Apache-2.0",$/;"	s
license	lib/ui/package.json	/^  "license": "Apache-2.0",$/;"	s
license	node_modules/autopreview/package.json	/^  "license": "ISC",$/;"	s
license	package.json	/^  "license": "Apache-2.0",$/;"	s
license	slack/package.json	/^  "license": "Apache-2.0",$/;"	s
license	vscode/package.json	/^  "license": "Apache-2.0",$/;"	s
license	web/package.json	/^  "license": "Apache-2.0",$/;"	s
light	vscode/package.json	/^          "light": "#436EB1",$/;"	s	object:contributes.colors.5.defaults
light	vscode/package.json	/^          "light": "#ffffff00",$/;"	s	object:contributes.colors.2.defaults
light	vscode/package.json	/^          "light": "merge.incomingContentBackground",$/;"	s	object:contributes.colors.4.defaults
light	vscode/package.json	/^          "light": "mergeEditor.conflict.unhandledFocused.border",$/;"	s	object:contributes.colors.1.defaults
light	vscode/package.json	/^          "light": "mergeEditor.conflict.unhandledUnfocused.border",$/;"	s	object:contributes.colors.3.defaults
light	vscode/package.json	/^          "light": "mergeEditor.conflictingLines.background",$/;"	s	object:contributes.colors.0.defaults
limitHit	lib/shared/src/guardrails/index.ts	/^    limitHit: boolean$/;"	p	interface:Attribution
limitHit	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    limitHit: boolean$/;"	p	interface:SearchAttributionResults
line	agent/src/protocol.ts	/^    line: number$/;"	p	interface:Position
line	lib/shared/src/hallucinations-detector/index.ts	/^                for (const line of lines) {$/;"	C	function:detectTokens
line	vscode/src/chat/fastFileFinder.ts	/^    for (const line of rgOutput.split('\\n')) {$/;"	C
line	vscode/src/completions/document.ts	/^        const line = prefixLines[i]$/;"	C
line	vscode/src/completions/document.ts	/^        for (const line of suffixLines) {$/;"	C
line	vscode/src/completions/multiline.ts	/^        const line = lines[i]$/;"	C	function:shouldIncludeClosingLine
line	vscode/src/completions/text-processing.ts	/^    for (const line of suffix.split('\\n')) {$/;"	C	function:trimUntilSuffix
line	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                    for (const line of lines) {$/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
line	vscode/src/testutils/mocks.ts	/^    public line: number$/;"	p	class:Position
line	vscode/test/completions/vscode-text-document.ts	/^        const line = typeof position === 'number' ? position : position.line$/;"	C
line	vscode/test/completions/vscode-text-document.ts	/^        const text = this.lines[line]$/;"	C
lineCount	vscode/src/services/InlineController.ts	/^                const lineCount = document.lineCount$/;"	C
lineDiff	vscode/src/services/InlineAssist.ts	/^    const lineDiff = content.split('\\n').length - 2$/;"	C	function:editDocByUri
lineLength	vscode/src/services/InlineController.ts	/^        const lineLength = activeDocument.lineAt(this.thread.range.end.line).text.length$/;"	C
linePart	vscode/src/completions/text-processing.ts	/^        const linePart = getFirstNCharsPreservingLeadingSpaces(line, NUMBER_OF_CHARS_TO_MATCH_AN/;"	C	function:trimUntilSuffix
lineStartOffset	agent/src/offsets.ts	/^        const lineStartOffset = this.lines[position.line]$/;"	C	method:DocumentOffsets.offset
lines	agent/src/offsets.ts	/^    private lines: number[] = []$/;"	p	class:DocumentOffsets
lines	lib/shared/src/hallucinations-detector/index.ts	/^                const lines = token.raw.split('\\n')$/;"	C	function:detectTokens
lines	vscode/src/completions/bestJaccardMatch.ts	/^    const lines = matchText.split('\\n')$/;"	C	function:bestJaccardMatch
lines	vscode/src/completions/completion.test.ts	/^    const lines = string.split('\\n')$/;"	C	function:truncateMultilineString
lines	vscode/src/completions/context-local.ts	/^    const lines = text.split('\\n')$/;"	C	function:lastNLines
lines	vscode/src/completions/index.ts	/^            const lines = completion.content.split(\/\\r\\n|\\r|\\n\/).length$/;"	C	function:toInlineCompletionItems
lines	vscode/src/completions/multiline.ts	/^    const lines = text.split('\\n')$/;"	C	function:adjustIndentation
lines	vscode/src/completions/providers/anthropic.ts	/^            const lines = completion.split('\\n')$/;"	C	method:AnthropicProvider.postProcess
lines	vscode/src/completions/text-processing.ts	/^    const lines = s.split('\\n')$/;"	C	function:getHeadAndTail
lines	vscode/src/completions/utils.ts	/^    const lines = text.split('\\n')$/;"	C	function:lastNLines
lines	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                    const lines = out.split('\\n')$/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
lines	vscode/src/non-stop/tracked-range.ts	/^    const lines = change.text.split(\/\\r\\n|\\r|\\n\/m)$/;"	C	function:updateRange
lines	vscode/src/services/InlineAssist.test.ts	/^        const lines = { start: 1, end: 3 }$/;"	C
lines	vscode/test/completions/utils.ts	/^    const lines = text.split('\\n')$/;"	C	function:findSubstringPosition
lines	vscode/test/completions/vscode-text-document.ts	/^        const lines = this.text.split('\\n')$/;"	C
lint	agent/package.json	/^    "lint": "pnpm run lint:js",$/;"	s	object:scripts
lint	cli/package.json	/^    "lint": "pnpm run lint:js",$/;"	s	object:scripts
lint	lib/shared/package.json	/^    "lint": "pnpm run lint:js",$/;"	s	object:scripts
lint	lib/ui/package.json	/^    "lint": "pnpm run lint:js",$/;"	s	object:scripts
lint	package.json	/^    "lint": "pnpm run lint:js && pnpm run lint:css",$/;"	s	object:scripts
lint	slack/package.json	/^    "lint": "pnpm run lint:js",$/;"	s	object:scripts
lint	vscode/package.json	/^    "lint": "pnpm run lint:js",$/;"	s	object:scripts
lint	web/package.json	/^    "lint": "pnpm run lint:js",$/;"	s	object:scripts
lint:css	package.json	/^    "lint:css": "stylelint --cache '**\/*.css'",$/;"	s	object:scripts
lint:js	agent/package.json	/^    "lint:js": "eslint --cache '**\/*.[tj]s?(x)'",$/;"	s	object:scripts
lint:js	cli/package.json	/^    "lint:js": "eslint --cache '**\/*.[tj]s?(x)'",$/;"	s	object:scripts
lint:js	lib/shared/package.json	/^    "lint:js": "eslint --cache '**\/*.[tj]s?(x)'",$/;"	s	object:scripts
lint:js	lib/ui/package.json	/^    "lint:js": "eslint --cache '**\/*.[tj]s?(x)'",$/;"	s	object:scripts
lint:js	package.json	/^    "lint:js": "eslint --cache '**\/*.[tj]s?(x)'",$/;"	s	object:scripts
lint:js	slack/package.json	/^    "lint:js": "eslint --cache '**\/*.[tj]s?(x)'",$/;"	s	object:scripts
lint:js	vscode/package.json	/^    "lint:js": "eslint --cache '**\/*.[tj]s?(x)'",$/;"	s	object:scripts
lint:js	web/package.json	/^    "lint:js": "eslint --cache '**\/*.[tj]s?(x)'",$/;"	s	object:scripts
linux	vscode/src/services/LocalAppFsPaths.ts	/^    linux: [$/;"	C
listRecipes	agent/src/index.test.ts	/^    public listRecipes() {$/;"	m	class:TestClient
listener	vscode/webviews/utils/VSCodeApi.ts	/^                const listener = (event: MessageEvent<ExtensionMessage>): void => {$/;"	C	function:getVSCodeAPI
llmOptions	vscode/src/completions/docprovider.ts	/^    llmOptions: JSONSerializable$/;"	p	interface:Meta
load	node_modules/autopreview/index.template.js	/^function load() {$/;"	f
loadAppJson	vscode/src/services/LocalAppDetector.ts	/^async function loadAppJson(uri: vscode.Uri): Promise<AppJson | null> {$/;"	f
localHistory	vscode/src/chat/ChatViewProvider.ts	/^        const localHistory = this.localStorage.getChatHistory()$/;"	C
localMatches	vscode/src/completions/context.ts	/^    const localMatches = await getContextFromCurrentEditor(options)$/;"	C	function:getContext
localProcess	vscode/src/chat/ChatViewProvider.ts	/^            const localProcess = await this.authProvider.appDetector.getProcessInfo(authStatus.i/;"	C
localSolutionLimit	vscode/src/chat/ChatViewProvider.ts	/^        const localSolutionLimit = codyConfig.get<number>('provider.limit.solution')$/;"	C
localStorage	vscode/src/main.ts	/^    const localStorage = new LocalStorage(context.globalState)$/;"	C	function:start
lodash	lib/shared/package.json	/^    "lodash": "^4.17.21",$/;"	s	object:dependencies
lodash	slack/package.json	/^    "lodash": "^4.17.21",$/;"	s	object:dependencies
lodash	vscode/package.json	/^    "lodash": "^4.17.21",$/;"	s	object:dependencies
lodash	web/package.json	/^    "lodash": "^4.17.21",$/;"	s	object:dependencies
log	lib/shared/src/sourcegraph-api/completions/nodeClient.ts	/^        const log = this.logger?.startCompletion(params)$/;"	C	method:SourcegraphNodeCompletionsClient.complete
log	lib/shared/src/sourcegraph-api/completions/nodeClient.ts	/^        const log = this.logger?.startCompletion(params)$/;"	C	method:SourcegraphNodeCompletionsClient.stream
log	lib/shared/src/telemetry/EventLogger.ts	/^    public log(eventName: string, anonymousUserID: string, eventProperties?: any, publicProperti/;"	m	class:EventLogger
log	vscode/src/completions/providers/unstable-codegen.ts	/^        const log = logger.startCompletion({$/;"	C	method:UnstableCodeGenProvider.generateCompletions
log	vscode/src/completions/providers/unstable-huggingface.ts	/^        const log = logger.startCompletion({$/;"	C	method:UnstableHuggingFaceProvider.generateCompletions
logCompletionEvent	vscode/src/completions/logger.ts	/^export function logCompletionEvent(name: string, params?: unknown): void {$/;"	f
logEvent	vscode/src/chat/ChatViewProvider.ts	/^            logEvent('CodyVSCodeExtension:guardrails:annotate', event, event)$/;"	C
logEvent	vscode/src/services/EventLogger.ts	/^export function logEvent(eventName: string, eventProperties?: any, publicProperties?: any): void/;"	f
logFormat	lib/shared/src/chat/recipes/generate-pr-description.ts	/^        const logFormat = '--pretty="Commit author: %an%nCommit message: %s%nChange description:/;"	C	method:PrDescription.getInteraction
logFormat	lib/shared/src/chat/recipes/generate-release-notes.ts	/^        const logFormat = '--pretty="Commit author: %an%nCommit message: %s%nChange description:/;"	C	method:ReleaseNotes.getInteraction
logFormat	lib/shared/src/chat/recipes/git-log.ts	/^        const logFormat = '--pretty="Commit author: %an%nCommit message: %s%nChange description:/;"	C	method:GitHistory.getInteraction
logId	vscode/src/completions/cache.ts	/^    logId: string$/;"	p	interface:CachedCompletions
logId	vscode/src/completions/index.ts	/^        const logId = CompletionLogger.start({$/;"	C
logScore	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const logScore = ct === 0 ? 0 : Math.log10(ct) + 1$/;"	C
logSuggestionEvent	vscode/src/completions/logger.ts	/^function logSuggestionEvent(): void {$/;"	f
logSummary	vscode/src/completions/context.ts	/^    logSummary: {$/;"	p	interface:GetContextResult
logSummary	vscode/src/completions/index.ts	/^        const { context: similarCode, logSummary: contextSummary } = await getContext({$/;"	C
logTotal	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    const logTotal = Math.log(totalFiles)$/;"	C
logger	lib/shared/src/sourcegraph-api/completions/client.ts	/^        protected logger?: CompletionLogger$/;"	p	class:SourcegraphCompletionsClient
logger	vscode/src/log.ts	/^export const logger: CompletionLogger = {$/;"	C
login	lib/shared/src/plugins/built-in/github-issues.ts	/^    login: string$/;"	p	interface:User
longestCommonPrefix	vscode/src/local-context/local-keyword-context-fetcher.ts	/^function longestCommonPrefix(s: string, t: string): string {$/;"	f
longestCommonSubsequence	vscode/src/non-stop/diff.ts	/^export function longestCommonSubsequence(a: string, b: string): Uint8Array {$/;"	f
lru-cache	vscode/package.json	/^    "lru-cache": "^9.1.1",$/;"	s	object:dependencies
m	lib/shared/src/chat/bot-response-multiplexer.ts	/^    private static readonly TOPIC_RE = \/<$|<\\\/?([A-Za-z-]?$|[A-Za-z-]+>?)\/m$/;"	p	class:BotResponseMultiplexer
m	lib/shared/src/hallucinations-detector/index.ts	/^    for (const m of line.matchAll(filePathRegexp)) {$/;"	C
mac	vscode/package.json	/^        "mac": "alt+\/"$/;"	s	object:contributes.keybindings.0
mac	vscode/package.json	/^        "mac": "cmd+alt+\/",$/;"	s	object:contributes.keybindings.3
mac	vscode/package.json	/^        "mac": "cmd+shift+c",$/;"	s	object:contributes.keybindings.4
mac	vscode/package.json	/^        "mac": "cmd+shift+v",$/;"	s	object:contributes.keybindings.5
mac	vscode/package.json	/^        "mac": "shift+cmd+v",$/;"	s	object:contributes.keybindings.2
main	agent/package.json	/^  "main": "src\/index.ts",$/;"	s
main	cli/package.json	/^  "main": "dist\/program.js",$/;"	s
main	lib/shared/package.json	/^  "main": "dist\/index.js",$/;"	s
main	lib/ui/package.json	/^  "main": "dist\/index.js",$/;"	s
main	node_modules/autopreview/package.json	/^  "main": "index.js",$/;"	s
main	vscode/package.json	/^  "main": ".\/dist\/extension.js",$/;"	s
main	vscode/test/fixtures/workspace/Main.java	/^    public static void main(String[] args) {$/;"	m	class:Main
main	vscode/test/integration/main.ts	/^async function main(): Promise<void> {$/;"	f
main	web/package.json	/^  "main": "src\/index.ts",$/;"	s
mainJavaUri	vscode/test/integration/recipes.test.ts	/^        const mainJavaUri = vscode.Uri.parse(`${vscode.workspace.workspaceFolders[0].uri.toStrin/;"	C
mainJavaUri	vscode/test/integration/task-controller.test.ts	/^        const mainJavaUri = vscode.Uri.parse(`${vscode.workspace.workspaceFolders?.[0].uri.toStr/;"	C
makeContextMessageWithResponse	lib/shared/src/codebase-context/index.ts	/^    private makeContextMessageWithResponse(groupedResults: { file: ContextFile; results: string[/;"	m	class:CodebaseContext
makeDecorationType	vscode/src/services/DecorationProvider.ts	/^    private makeDecorationType(type?: string): vscode.TextEditorDecorationType {$/;"	m	class:DecorationProvider
makeDecorations	vscode/src/non-stop/FixupDecorator.ts	/^function makeDecorations(diff: Diff | undefined): TaskDecorations {$/;"	f
makeEven	vscode/src/completions/providers/unstable-codegen.ts	/^function makeEven(number: number): number {$/;"	f
makePrompt	lib/shared/src/plugins/api/prompt.ts	/^export const makePrompt = ($/;"	C
makeTrimRegex	vscode/src/chat/fastFileFinder.ts	/^export function makeTrimRegex(sep: string): RegExp {$/;"	f
mapVSCodeLanguageIdToModelId	vscode/src/completions/providers/unstable-codegen.ts	/^function mapVSCodeLanguageIdToModelId(languageId: string): string {$/;"	f
markdown	vscode/package.json	/^              "markdown": "walkthroughs\/autocomplete.md"$/;"	s	object:contributes.walkthroughs.0.steps.4.media
markdown	vscode/package.json	/^              "markdown": "walkthroughs\/chat.md"$/;"	s	object:contributes.walkthroughs.0.steps.0.media
markdown	vscode/package.json	/^              "markdown": "walkthroughs\/explain.md"$/;"	s	object:contributes.walkthroughs.0.steps.1.media
markdown	vscode/package.json	/^              "markdown": "walkthroughs\/fixup.md"$/;"	s	object:contributes.walkthroughs.0.steps.2.media
markdown	vscode/package.json	/^              "markdown": "walkthroughs\/inline-assist.md"$/;"	s	object:contributes.walkthroughs.0.steps.3.media
markdown	vscode/package.json	/^              "markdown": "walkthroughs\/learn-more.md"$/;"	s	object:contributes.walkthroughs.0.steps.5.media
markdownDeprecationMessage	vscode/package.json	/^          "markdownDeprecationMessage": "**Deprecated**: Please sign in via the UI instead. If y/;"	s	object:contributes.configuration.properties.cody.serverEndpoint
markdownDescription	vscode/package.json	/^          "markdownDescription": "Adds custom HTTP headers to all network requests to the Source/;"	s	object:contributes.configuration.properties.cody.customHeaders
markdownDescription	vscode/package.json	/^          "markdownDescription": "Adds suggestions of possible relevant messages in the chat win/;"	s	object:contributes.configuration.properties.cody.experimental.chatPredictions
markdownDescription	vscode/package.json	/^          "markdownDescription": "Autocomplete based on the currently selection in the suggest w/;"	s	object:contributes.configuration.properties.cody.autocomplete.experimental.completeSuggestWidgetSelection
markdownDescription	vscode/package.json	/^          "markdownDescription": "Enables asking questions and requesting code changes directly /;"	s	object:contributes.configuration.properties.cody.inlineChat.enabled
markdownDescription	vscode/package.json	/^          "markdownDescription": "Enables caching of code autocomplete."$/;"	s	object:contributes.configuration.properties.cody.autocomplete.advanced.cache
markdownDescription	vscode/package.json	/^          "markdownDescription": "Enables debug output for plugins."$/;"	s	object:contributes.configuration.properties.cody.plugins.debug.enabled
markdownDescription	vscode/package.json	/^          "markdownDescription": "Enables inline code suggestions in your editor.",$/;"	s	object:contributes.configuration.properties.cody.autocomplete.enabled
markdownDescription	vscode/package.json	/^          "markdownDescription": "Enables the use of built-in experimental plugins."$/;"	s	object:contributes.configuration.properties.cody.plugins.enabled
markdownDescription	vscode/package.json	/^          "markdownDescription": "Enables the use of embeddings as code completions context."$/;"	s	object:contributes.configuration.properties.cody.autocomplete.advanced.embeddings
markdownDescription	vscode/package.json	/^          "markdownDescription": "Enables verbose debug output. Debug messages may contain more /;"	s	object:contributes.configuration.properties.cody.debug.verbose
markdownDescription	vscode/package.json	/^          "markdownDescription": "Experimental feature for internal use.",$/;"	s	object:contributes.configuration.properties.cody.experimental.guardrails
markdownDescription	vscode/package.json	/^          "markdownDescription": "If 'embeddings' is selected, Cody will prefer to use an embedd/;"	s	object:contributes.configuration.properties.cody.useContext
markdownDescription	vscode/package.json	/^          "markdownDescription": "Overwrite the access token used for code autocomplete. This is/;"	s	object:contributes.configuration.properties.cody.autocomplete.advanced.accessToken
markdownDescription	vscode/package.json	/^          "markdownDescription": "Overwrite the provider used for code autocomplete. Only suppor/;"	s	object:contributes.configuration.properties.cody.autocomplete.advanced.provider
markdownDescription	vscode/package.json	/^          "markdownDescription": "Overwrite the server endpoint used for code autocomplete. This/;"	s	object:contributes.configuration.properties.cody.autocomplete.advanced.serverEndpoint
markdownDescription	vscode/package.json	/^          "markdownDescription": "Regular expression to filter debug output. If empty, defaults /;"	s	object:contributes.configuration.properties.cody.debug.filter
markdownDescription	vscode/package.json	/^          "markdownDescription": "The Git repository URL for your code. This will be sent to the/;"	s	object:contributes.configuration.properties.cody.codebase
markdownDescription	vscode/package.json	/^          "markdownDescription": "Trigger autocomplete when the cursor is at the end of a word (/;"	s	object:contributes.configuration.properties.cody.autocomplete.experimental.triggerMoreEagerly
markdownDescription	vscode/package.json	/^          "markdownDescription": "Turns on debug output (visible in the VS Code Output panel und/;"	s	object:contributes.configuration.properties.cody.debug.enable
markdownDescription	vscode/package.json	/^          "markdownDescription": "[Internal Experimental] Create reusable recipes with customize/;"	s	object:contributes.configuration.properties.cody.experimental.customRecipes
markdownID	lib/shared/src/chat/recipes/translate.ts	/^        const markdownID = languageMarkdownID[toLanguage] || ''$/;"	C	method:TranslateToLanguage.getInteraction
markdownLexer	lib/shared/src/common/markdown/markdown.ts	/^export const markdownLexer = (markdown: string): marked.TokensList => marked.lexer(markdown)$/;"	C
markdownText	lib/shared/src/hallucinations-detector/index.test.ts	/^const markdownText = `# Title$/;"	C
markdownText	vscode/src/services/InlineController.ts	/^        const markdownText = new vscode.MarkdownString(text)$/;"	C
markdownTokens	lib/shared/src/hallucinations-detector/index.ts	/^    const markdownTokens = parseMarkdown(text)$/;"	C	function:highlightTokens
marked	completions-review-tool/package.json	/^    "marked": "^4.0.16",$/;"	s	object:dependencies
marked	lib/shared/package.json	/^    "marked": "^4.0.16",$/;"	s	object:dependencies
marker	vscode/src/services/LocalAppDetector.ts	/^        for (const marker of markers) {$/;"	C
markers	vscode/src/services/LocalAppDetector.ts	/^        const markers = this.localAppMarkers$/;"	C
mask	lib/shared/src/sourcegraph-api/utils.ts	/^        const mask = 0xff ^ ((1 << (7 - numBytes)) - 1)$/;"	C
match	lib/shared/src/chat/bot-response-multiplexer.ts	/^            const match = this.buffer_.match(BotResponseMultiplexer.TOPIC_RE)$/;"	C	method:BotResponseMultiplexer.publishStep
match	lib/shared/src/chat/bot-response-multiplexer.ts	/^    const match = tag.match(\/^<\\\/?([A-Za-z-]+)>$\/)$/;"	C	function:topicName
match	slack/src/mention-handler.ts	/^    const match = input.match(\/channel:([\\w-]+)\/)$/;"	C	function:parseSlackChannelFilter
match	vscode/src/chat/utils.ts	/^        const match = cloneURL.match(\/git@([^:]+):([\\w-]+)\\\/([\\w-]+)(\\.git)?\/)$/;"	C	function:convertGitCloneURLToCodebaseName
match	vscode/src/completions/context-local.ts	/^        const match = bestJaccardMatch(targetText, contents, jaccardDistanceWindowSize)$/;"	C	function:getContextFromCurrentEditor
match	vscode/src/completions/context.ts	/^    for (const match of embeddingsMatches) {$/;"	C	function:getContext
match	vscode/src/completions/context.ts	/^    for (const match of localMatches) {$/;"	C	function:getContext
match	vscode/src/non-stop/FixupTypingUI.ts	/^        const match = instruction.match(CHAT_RE)$/;"	C	method:FixupTypingUI.show
matchEnd	lib/shared/src/chat/bot-response-multiplexer.ts	/^            const matchEnd = match.index + match[0].length$/;"	C	method:BotResponseMultiplexer.publishStep
matchSnippet	vscode/src/completions/bestJaccardMatch.test.ts	/^const matchSnippet = `$/;"	C
matchText	vscode/src/completions/bestJaccardMatch.test.ts	/^        const matchText = [$/;"	C
matches	lib/shared/src/hallucinations-detector/index.ts	/^    const matches: { fullMatch: string; pathMatch: string }[] = []$/;"	C
matches	vscode/src/completions/context-local.ts	/^    const matches: JaccardMatchWithFilename[] = []$/;"	C	function:getContextFromCurrentEditor
matches	vscode/src/completions/multiline.ts	/^    const matches = prefixIndentationWithFirstCompletionLine.match(OPENING_BRACKET_REGEX)$/;"	C	function:shouldIncludeClosingLineBasedOnBrackets
matches	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                            const matches = \/^(\\d+) files searched$\/.exec(line)$/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
matches	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                    const matches = snippet.match(keywordPattern)$/;"	C	method:LocalKeywordContextFetcher.getSearchContext
max-empty-lines	.stylelintrc.json	/^    "max-empty-lines": 1,$/;"	n	object:rules
maxAge	completions-review-tool/server.js	/^app.use('\/build', express.static('public\/build', { immutable: true, maxAge: '1y' }))$/;"	p	variable:anonymousObject39c914cd0105
maxAge	completions-review-tool/server.js	/^app.use(express.static('public', { maxAge: '1h' }))$/;"	p	variable:anonymousObject39c914cd0205
maxChars	vscode/src/completions/context.ts	/^    const { maxChars, isEmbeddingsContextEnabled } = options$/;"	C	function:getContext
maxChars	vscode/src/completions/context.ts	/^    maxChars: number$/;"	p	interface:GetContextOptions
maxLength	lib/shared/src/prompt/truncation.ts	/^    const maxLength = maxTokens * CHARS_PER_TOKEN$/;"	C	function:truncateText
maxLength	lib/shared/src/prompt/truncation.ts	/^    const maxLength = maxTokens * CHARS_PER_TOKEN$/;"	C	function:truncateTextStart
maxTokenCount	lib/shared/src/chat/recipes/find-code-smells.ts	/^        const maxTokenCount =$/;"	C	method:FindCodeSmells.getInteraction
maxTokenCount	lib/shared/src/chat/recipes/next-questions.ts	/^        const maxTokenCount =$/;"	C	method:NextQuestions.getInteraction
maxTokensToSample	lib/shared/src/sourcegraph-api/completions/types.ts	/^    maxTokensToSample: number$/;"	p	interface:CompletionParameters
maximumContextCharacters	vscode/src/completions/providers/provider.ts	/^    maximumContextCharacters: number$/;"	p	interface:ProviderConfig
maybeFileForUri	vscode/src/non-stop/roles.ts	/^    maybeFileForUri(uri: vscode.Uri): FixupFile | undefined$/;"	m	interface:FixupFileCollection
maybeForUri	vscode/src/non-stop/FixupFileObserver.ts	/^    public maybeForUri(uri: vscode.Uri): FixupFile | undefined {$/;"	m	class:FixupFileObserver
meanElapsed	vscode/test/completions/run-code-completions-on-dataset.ts	/^            const meanElapsed =$/;"	C	function:generateCompletionsForDataset
media	vscode/package.json	/^            "media": {$/;"	o	object:contributes.walkthroughs.0.steps.0
media	vscode/package.json	/^            "media": {$/;"	o	object:contributes.walkthroughs.0.steps.1
media	vscode/package.json	/^            "media": {$/;"	o	object:contributes.walkthroughs.0.steps.2
media	vscode/package.json	/^            "media": {$/;"	o	object:contributes.walkthroughs.0.steps.3
media	vscode/package.json	/^            "media": {$/;"	o	object:contributes.walkthroughs.0.steps.4
media	vscode/package.json	/^            "media": {$/;"	o	object:contributes.walkthroughs.0.steps.5
menu	lib/shared/src/editor/index.ts	/^    menu(): Promise<void>$/;"	m	interface:VsCodeMyPromptController
menu	vscode/src/my-cody/MyPromptController.ts	/^    public async menu(): Promise<void> {$/;"	m	class:MyPromptController
menuID	vscode/src/services/AuthProvider.ts	/^        const menuID = type || item?.id$/;"	C
menus	vscode/package.json	/^    "menus": {$/;"	o	object:contributes
mergeConsecutiveResults	lib/shared/src/codebase-context/index.ts	/^function mergeConsecutiveResults(results: EmbeddingsSearchResult[]): string[] {$/;"	f
mergeContextResults	lib/shared/src/codebase-context/index.ts	/^    private mergeContextResults(keywordResults: ContextResult[], filenameResults: ContextResult[/;"	m	class:CodebaseContext
mergeSequentialUserMessages	slack/src/mention-handler.ts	/^function mergeSequentialUserMessages(messages: SlackReplyMessage[]) {$/;"	f
merged	lib/shared/src/codebase-context/index.ts	/^        const merged = filenameResults.slice(-1).concat(keywordResults)$/;"	C	method:CodebaseContext.mergeContextResults
mergedEnd	vscode/src/non-stop/diff.ts	/^            const mergedEnd = updatedPosition(mergedPos, chunk[0])$/;"	C	function:computeChunks
mergedMessages	slack/src/mention-handler.ts	/^        const lastInteraction = mergedMessages[mergedMessages.length - 1]$/;"	C	function:mergeSequentialUserMessages
mergedMessages	slack/src/mention-handler.ts	/^    const mergedMessages = mergeSequentialUserMessages(messages)$/;"	C	function:restoreTranscriptFromSlackThread
mergedMessages	slack/src/mention-handler.ts	/^    const mergedMessages: SlackInteraction[] = []$/;"	C	function:mergeSequentialUserMessages
mergedResults	lib/shared/src/codebase-context/index.ts	/^    const mergedResults = [results[0].content]$/;"	C	function:mergeConsecutiveResults
mergedText	vscode/src/non-stop/diff.ts	/^    const mergedText: string[] = []$/;"	C	function:computeChunks
message	agent/src/jsonrpc.ts	/^    message: string$/;"	p	interface:ErrorInfo
message	lib/shared/src/common/index.ts	/^    message: string$/;"	p	interface:ErrorLike
message	lib/shared/src/sourcegraph-api/completions/nodeClient.ts	/^                const message = `response does not satisfy CodeCompletionResponse: ${result}`$/;"	C	method:SourcegraphNodeCompletionsClient.complete
message	lib/shared/src/sourcegraph-api/completions/nodeClient.ts	/^            const message = `error parsing response CodeCompletionResponse: ${error}, response t/;"	C	method:SourcegraphNodeCompletionsClient.complete
message	lib/shared/src/sourcegraph-api/completions/nodeClient.ts	/^            let message = e.message$/;"	v
message	lib/ui/.eslintrc.json	/^            "message": "Only import from the root @sourcegraph\/cody-shared module, for simplici/;"	s	object:rules.no-restricted-imports.1.patterns.0
message	slack/src/mention-handler.ts	/^    for (const message of messages) {$/;"	C	function:mergeSequentialUserMessages
message	vscode/src/notifications/index.ts	/^    message: string$/;"	p	interface:ActionNotification
messageDecoder	agent/src/jsonrpc.ts	/^    public messageDecoder: MessageDecoder = new MessageDecoder((err: Error | null, msg: Message /;"	p	class:MessageHandler
messageEncoder	agent/src/jsonrpc.ts	/^    public messageEncoder: MessageEncoder = new MessageEncoder()$/;"	p	class:MessageHandler
messageFile	cli/src/commands/commit/command.ts	/^        const messageFile = path.join(await gitHelpers.gitDir({ cwd }), 'CODY_COMMIT_MSG')$/;"	C	function:run
messageInProgress	lib/shared/src/chat/useClient.ts	/^    readonly messageInProgress: ChatMessage | null$/;"	p	interface:CodyClient
messagePairs	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const messagePairs = await Promise.all($/;"	C	method:LocalKeywordContextFetcher.getContext
messageText	lib/shared/src/codebase-context/index.ts	/^                const messageText = isMarkdownFile(filePath)$/;"	C	method:CodebaseContext.getUnifiedContextMessages
messageText	lib/shared/src/codebase-context/index.ts	/^        const messageText = populateCodeContextTemplate(content, fileName, repoName)$/;"	C	function:resultsToMessages
messages	cli/src/client/completions.ts	/^    const messages: { human: Message; assistant?: Message }[] = [$/;"	C	function:getCompletionWithContext
messages	lib/shared/src/chat/transcript/index.ts	/^        const messages: Message[] = []$/;"	C	method:Transcript.getPromptForLastInteraction
messages	lib/shared/src/codebase-context/index.ts	/^            const messages = resultsToMessages(rerankedResults)$/;"	C	method:CodebaseContext.getLocalContextMessages
messages	lib/shared/src/sourcegraph-api/completions/types.ts	/^    messages: Message[]$/;"	p	interface:CompletionParameters
messages	slack/src/mention-handler.ts	/^    const [messages, channelName] = await Promise.all([$/;"	C	function:handleHumanMessage
messages	vscode/src/completions/completion.test.ts	/^        const messages = requests[0].messages$/;"	C
messages	vscode/src/completions/providers/anthropic.ts	/^        const { messages } = this.createPromptPrefix()$/;"	C	method:AnthropicProvider.emptyPromptLength
messages	vscode/src/completions/providers/anthropic.ts	/^        const { messages: prompt } = this.createPrompt(snippets)$/;"	C	method:AnthropicProvider.generateCompletions
messagesToText	vscode/src/completions/utils.ts	/^export function messagesToText(messages: Message[]): string {$/;"	f
meta	vscode/src/completions/docprovider.ts	/^    meta?: Meta$/;"	p	interface:CompletionGroup
method	agent/src/jsonrpc.ts	/^            method,$/;"	C	method:MessageHandler.request
method	agent/src/jsonrpc.ts	/^    method: M$/;"	p	interface:NotificationMessage
method	agent/src/jsonrpc.ts	/^    method: M$/;"	p	interface:RequestMessage
migrateConfiguration	vscode/src/configuration.ts	/^export async function migrateConfiguration(): Promise<void> {$/;"	f
migrateDeprecatedConfigOption	vscode/src/configuration.ts	/^async function migrateDeprecatedConfigOption($/;"	f
minPromptLength	vscode/src/my-cody/InputMenu.ts	/^    const minPromptLength = 3$/;"	C	function:createNewPrompt
minify	vscode/scripts/bundle.ts	/^    minify,$/;"	C
minify	vscode/scripts/bundle.ts	/^const minify = process.env.NODE_ENV === 'production'$/;"	C
mixInto	lib/shared/src/prompt/prompt-mixin.ts	/^    public static mixInto(humanMessage: InteractionMessage): InteractionMessage {$/;"	m	class:PromptMixin
mixins	lib/shared/src/prompt/prompt-mixin.ts	/^        const mixins = [...this.mixins, ...this.customMixin].map(mixin => mixin.prompt).join('\\/;"	C	method:PromptMixin.mixInto
mixins	lib/shared/src/prompt/prompt-mixin.ts	/^    private static mixins: PromptMixin[] = []$/;"	p	class:PromptMixin
mocha	vscode/package.json	/^    "mocha": "^10.2.0",$/;"	s	object:devDependencies
mocha	vscode/test/integration/index.ts	/^    const mocha = new Mocha({$/;"	C	function:run
mock-require	vscode/package.json	/^    "mock-require": "^3.0.3",$/;"	s	object:dependencies
mockRgPath	vscode/test/integration/local-search.test.ts	/^    let mockRgPath: string | undefined$/;"	v
mocks	lib/shared/src/test/mocks.ts	/^    constructor(private mocks: Partial<Editor> = {}) {}$/;"	p	class:MockEditor
mocks	lib/shared/src/test/mocks.ts	/^    constructor(private mocks: Partial<EmbeddingsSearch> = {}) {}$/;"	p	class:MockEmbeddingsClient
mocks	lib/shared/src/test/mocks.ts	/^    constructor(private mocks: Partial<IntentDetector> = {}) {}$/;"	p	class:MockIntentDetector
mocks	lib/shared/src/test/mocks.ts	/^    constructor(private mocks: Partial<KeywordContextFetcher> = {}) {}$/;"	p	class:MockKeywordContextFetcher
mocks	lib/shared/src/test/mocks.ts	/^    constructor(private mocks: Partial<Pick<SourcegraphCompletionsClient, 'complete' | 'stream'>/;"	p	class:MockCompletionsClient
mode	completions-review-tool/server.js	/^          mode: process.env.NODE_ENV,$/;"	p	variable:anonymousObject39c914cd0305
mode	completions-review-tool/server.js	/^        mode: process.env.NODE_ENV,$/;"	p	variable:anonymousObject39c914cd0405
mode	lib/shared/src/chat/context.ts	/^    mode?: ConfigurationUseContext$/;"	p	interface:ChatContextStatus
mode	vscode/src/non-stop/TaskViewProvider.ts	/^        const mode = fixupTaskList[this.state].id$/;"	C
mode	vscode/src/services/AuthProvider.ts	/^        const mode = this.authStatus.isLoggedIn ? 'switch' : 'signin'$/;"	C
model	lib/shared/src/sourcegraph-api/completions/types.ts	/^    model?: string$/;"	p	interface:CompletionParameters
module	agent/tsconfig.json	/^    "module": "commonjs",$/;"	s	object:compilerOptions
module	cli/tsconfig.json	/^    "module": "commonjs",$/;"	s	object:compilerOptions
module	completions-review-tool/tsconfig.json	/^    "module": "commonjs",$/;"	s	object:compilerOptions
module	lib/shared/tsconfig.json	/^    "module": "ESNext",$/;"	s	object:compilerOptions
module	lib/ui/tsconfig.json	/^    "module": "ESNext",$/;"	s	object:compilerOptions
module	slack/tsconfig.json	/^    "module": "commonjs",$/;"	s	object:compilerOptions
module	tsconfig.base.json	/^    "module": "commonjs",$/;"	s	object:compilerOptions
module	vscode/test/completions/tsconfig.json	/^    "module": "CommonJS",$/;"	s	object:compilerOptions
module.exports	completions-review-tool/remix.config.js	/^module.exports = {$/;"	p
morgan	completions-review-tool/package.json	/^    "morgan": "^1.10.0",$/;"	s	object:dependencies
morgan	completions-review-tool/server.js	/^const morgan = require('morgan')$/;"	C
msg	cli/src/commands/commit/command.ts	/^    for (const [i, msg] of otherCommitMessages.entries()) {$/;"	C	function:generateCommitMessage
msg	lib/shared/src/chat/recipes/fixup.ts	/^            const msg = "The amount of text selected exceeds Cody's current capacity."$/;"	C	method:Fixup.getInteraction
msg	lib/shared/src/chat/recipes/non-stop.ts	/^            const msg = "The amount of text selected exceeds Cody's current capacity."$/;"	C	method:NonStop.getInteraction
msg	lib/shared/src/chat/transcript/index.ts	/^        for (const msg of truncatedMessages) {$/;"	C	method:Transcript.getPromptForLastInteraction
msg	lib/shared/src/guardrails/index.ts	/^            const msg = await guardrails.searchAttribution(token.text).then(summariseAttribution/;"	C	function:annotateAttribution
msg	vscode/src/my-cody/InputMenu.ts	/^        const msg =$/;"	C
msg	vscode/src/services/GuardrailsProvider.ts	/^        const msg = await this.client.searchAttribution(snippet).then(summariseAttribution)$/;"	C	method:GuardrailsProvider.debugEditorSelection
msg	vscode/src/services/InlineController.ts	/^        const msg = 'Please provide Cody with more details and try again.'$/;"	C
msgs	lib/shared/src/chat/transcript/interaction.ts	/^        const msgs = await this.fullContext$/;"	C	method:Interaction.getFullContext
multiRepoRules	lib/shared/src/chat/preamble.ts	/^    const rulesText = customPreamble?.rules ?? multiRepoRules$/;"	C	function:getMultiRepoPreamble
multiRepoRules	lib/shared/src/chat/preamble.ts	/^const multiRepoRules = `In your responses, obey the following rules:$/;"	C
multiline	vscode/src/completions/index.ts	/^        const multiline = detectMultiline($/;"	C
multiline	vscode/src/completions/providers/provider.ts	/^    multiline: boolean$/;"	p	interface:ProviderOptions
multilineMode	vscode/src/completions/logger.ts	/^        multilineMode: inputParams.multiline ? 'block' : null,$/;"	C	function:start
multiplexer	lib/shared/src/chat/bot-response-multiplexer.test.ts	/^        const multiplexer = new BotResponseMultiplexer()$/;"	C
multiplexer	vscode/src/chat/ChatViewProvider.ts	/^        const multiplexer = new BotResponseMultiplexer()$/;"	C
myPremade	vscode/src/chat/ChatViewProvider.ts	/^                const myPremade = this.editor.controllers.prompt.getMyPrompts().premade$/;"	C
myPremade	vscode/src/chat/ChatViewProvider.ts	/^        const myPremade = this.editor.controllers.prompt.getMyPrompts().premade$/;"	C
myPremade	vscode/src/my-cody/CustomRecipesBuilder.ts	/^    public myPremade: Preamble | undefined = undefined$/;"	p	class:CustomRecipesBuilder
myPremade	vscode/src/my-cody/MyPromptController.ts	/^    private myPremade: Preamble | undefined = undefined$/;"	p	class:MyPromptController
myPrompt	vscode/src/my-cody/MyPromptController.ts	/^        const myPrompt = this.myPromptStore.get(id)$/;"	C	method:MyPromptController.find
myPromptInProgress	vscode/src/my-cody/MyPromptController.ts	/^    private myPromptInProgress: CodyPrompt | null = null$/;"	p	class:MyPromptController
myPromptStore	vscode/src/my-cody/MyPromptController.ts	/^    private myPromptStore = new Map<string, CodyPrompt>()$/;"	p	class:MyPromptController
myPromptsMap	vscode/src/my-cody/CustomRecipesBuilder.ts	/^    public myPromptsMap = new Map<string, CodyPrompt>()$/;"	p	class:CustomRecipesBuilder
myStarter	vscode/src/my-cody/CustomRecipesBuilder.ts	/^    public myStarter = ''$/;"	p	class:CustomRecipesBuilder
myStarter	vscode/src/my-cody/MyPromptController.ts	/^    private myStarter = ''$/;"	p	class:MyPromptController
n	vscode/src/completions/providers/provider.ts	/^    n: number$/;"	p	interface:ProviderOptions
n_	vscode/src/non-stop/FixupFileObserver.ts	/^    private n_ = 0 \/\/ cookie for generating new ids$/;"	p	class:FixupFileObserver
name	.vscode/launch.json	/^      "name": "Launch VS Code Extension",$/;"	s	object:configurations.0
name	agent/package.json	/^  "name": "@sourcegraph\/cody-agent",$/;"	s
name	agent/src/protocol.ts	/^    name: string$/;"	p	interface:ClientInfo
name	agent/src/protocol.ts	/^    name: string$/;"	p	interface:ServerInfo
name	cli/package.json	/^  "name": "@sourcegraph\/cody-cli",$/;"	s
name	completions-review-tool/package.json	/^  "name": "@sourcegraph\/completions-review-tool",$/;"	s
name	lib/icons/package.json	/^  "name": "cody-icons-font",$/;"	s
name	lib/shared/package.json	/^  "name": "@sourcegraph\/cody-shared",$/;"	s
name	lib/shared/src/chat/recipes/git-log.ts	/^            const name = path.basename(selection.fileName)$/;"	C	method:GitHistory.getInteraction
name	lib/shared/src/common/index.ts	/^    name?: string$/;"	p	interface:ErrorLike
name	lib/shared/src/guardrails/index.ts	/^    name: string$/;"	p	interface:RepositoryAttribution
name	lib/shared/src/plugins/api/types.ts	/^    name: string$/;"	p	interface:Plugin
name	lib/shared/src/plugins/api/types.ts	/^    name: string$/;"	p	interface:PluginChosenFunctionDescriptor
name	lib/shared/src/plugins/api/types.ts	/^    name: string$/;"	p	interface:PluginFunctionDescriptor
name	lib/shared/src/plugins/api/types.ts	/^    name: string$/;"	p	interface:PluginFunctionExecutionInfo
name	lib/shared/src/plugins/built-in/github-issues.ts	/^    name: string | null$/;"	p	interface:User
name	lib/ui/package.json	/^  "name": "@sourcegraph\/cody-ui",$/;"	s
name	node_modules/autopreview/package.json	/^  "name": "autopreview",$/;"	s
name	package.json	/^  "name": "@sourcegraph\/cody",$/;"	s
name	slack/package.json	/^  "name": "@sourcegraph\/cody-slack",$/;"	s
name	vscode/package.json	/^          "name": "Chat",$/;"	s	object:contributes.views.cody.0
name	vscode/package.json	/^          "name": "Fixups",$/;"	s	object:contributes.views.cody.1
name	vscode/package.json	/^  "name": "cody-ai",$/;"	s
name	web/package.json	/^  "name": "@sourcegraph\/cody-web",$/;"	s
networkRequestAbortController	vscode/src/completions/request-manager.ts	/^        const networkRequestAbortController = new AbortController()$/;"	C	method:RequestManager.startRequest
newAuthStatus	vscode/src/chat/utils.ts	/^export function newAuthStatus($/;"	f
newConfig	vscode/src/chat/ChatViewProvider.ts	/^        const newConfig = await getFullConfig(this.secretStorage, this.localStorage)$/;"	C
newConfig	vscode/src/main.ts	/^            const newConfig = await getFullConfig(secretStorage, localStorage)$/;"	C
newConfig	vscode/src/my-cody/MyPromptController.ts	/^        const newConfig = config.get('experimental.customRecipes') as boolean$/;"	C	method:MyPromptController.checkIsConfigEnabled
newEditor	vscode/test/integration/task-controller.test.ts	/^        const newEditor = vscode.window.activeTextEditor$/;"	C
newFile	vscode/src/non-stop/FixupFileObserver.ts	/^    private newFile(uri: vscode.Uri): FixupFile {$/;"	m	class:FixupFileObserver
newFileName	lib/shared/src/chat/recipes/inline-touch.ts	/^        const newFileName = await vscode.window.showInputBox({$/;"	C
newFileName	lib/shared/src/chat/recipes/inline-touch.ts	/^        const newFileName = commandRegex.noTest.test(humanInput)$/;"	C
newFsPath	lib/shared/src/chat/recipes/inline-touch.ts	/^        const newFsPath = newFileName || (await this.getNewFileNameFromInput(selection.fileName,/;"	C
newHumanMessage	slack/src/mention-handler.ts	/^    const newHumanMessage = mergedMessages.pop()!$/;"	C	function:restoreTranscriptFromSlackThread
newHumanSlackInteraction	slack/src/mention-handler.ts	/^    const newHumanSlackInteraction = getSlackInteraction(newHumanMessage?.human.text)$/;"	C	function:restoreTranscriptFromSlackThread
newIndentStr	vscode/src/completions/multiline.ts	/^                const newIndentStr = ' '.repeat(indentLevel * newIndent)$/;"	C	function:adjustIndentation
newPrompt	vscode/src/my-cody/MyPromptController.ts	/^        const newPrompt = await createNewPrompt(promptName)$/;"	C	method:MyPromptController.addUserRecipeQuick
newPromptMessages	lib/shared/src/chat/transcript/index.ts	/^    const newPromptMessages = []$/;"	C	function:truncatePrompt
newPromptMixin	lib/shared/src/prompt/prompt-mixin.ts	/^export function newPromptMixin(text: string): PromptMixin {$/;"	f
newRange	vscode/src/services/InlineAssist.ts	/^    const newRange = new vscode.Range(newStartLine, 0, current.end.line + addedLines, 0)$/;"	C	function:updateRangeOnDocChange
newRange	vscode/src/services/InlineController.ts	/^            const newRange = await editDocByUri($/;"	C
newRecipeContext	lib/shared/src/test/mocks.ts	/^export function newRecipeContext(args?: Partial<RecipeContext>): RecipeContext {$/;"	f
newStartLine	vscode/src/services/InlineAssist.ts	/^    const newStartLine = change.start.line > current.start.line ? current.start.line : current.s/;"	C	function:updateRangeOnDocChange
newTextChunk	slack/src/services/openai-completions-client.ts	/^                                const newTextChunk = delta.choices[0].delta?.content$/;"	C	method:OpenAICompletionsClient.stream
newUri	vscode/src/non-stop/FixupFileObserver.ts	/^        for (const { oldUri, newUri } of event.files) {$/;"	C	method:FixupFileObserver.didRenameFiles
nextNonEmptyLine	vscode/src/completions/document.ts	/^    let nextNonEmptyLine = ''$/;"	v
nextNonEmptyLine	vscode/src/completions/multiline.ts	/^    const nextNonEmptyLine =$/;"	C	function:shouldIncludeClosingLine
no-console	.eslintrc.js	/^        'no-console': 'off',$/;"	p	property:anonymousObjectc892c5c20205.rules
no-console	agent/.eslintrc.json	/^    "no-console": "off"$/;"	s	object:rules
no-console	cli/.eslintrc.json	/^    "no-console": "off",$/;"	s	object:rules
no-console	completions-review-tool/.eslintrc.json	/^    "no-console": "off",$/;"	s	object:rules
no-console	lib/shared/.eslintrc.json	/^    "no-console": "off",$/;"	s	object:rules
no-console	lib/ui/.eslintrc.json	/^    "no-console": "off",$/;"	s	object:rules
no-console	slack/.eslintrc.json	/^    "no-console": "off",$/;"	s	object:rules
no-console	vscode/.eslintrc.json	/^    "no-console": "off",$/;"	s	object:rules
no-console	web/.eslintrc.json	/^    "no-console": "off",$/;"	s	object:rules
no-duplicate-imports	completions-review-tool/.eslintrc.json	/^    "no-duplicate-imports": "off",$/;"	s	object:rules
no-duplicate-selectors	.stylelintrc.json	/^    "no-duplicate-selectors": true,$/;"	b	object:rules
no-restricted-imports	.eslintrc.js	/^        'no-restricted-imports': 'off',$/;"	p	property:anonymousObjectc892c5c20105.rules
no-restricted-imports	completions-review-tool/.eslintrc.json	/^    "no-restricted-imports": "off",$/;"	s	object:rules
no-restricted-imports	lib/ui/.eslintrc.json	/^    "no-restricted-imports": [$/;"	a	object:rules
no-sync	completions-review-tool/.eslintrc.json	/^    "no-sync": "off",$/;"	s	object:rules
no-void	vscode/.eslintrc.json	/^    "no-void": ["error", { "allowAsStatement": true }],$/;"	a	object:rules
noEmit	tsconfig.json	/^    "noEmit": true$/;"	b	object:compilerOptions
noErrorTruncation	tsconfig.base.json	/^    "noErrorTruncation": true,$/;"	b	object:compilerOptions
noResponse	vscode/src/completions/logger.ts	/^export function noResponse(id: string): void {$/;"	f
node	completions-review-tool/package.json	/^    "node": ">=14"$/;"	s	object:engines
node	package.json	/^    "node": "^v20.4.0",$/;"	s	object:engines
nodemon	completions-review-tool/package.json	/^    "nodemon": "^3.0.1",$/;"	s	object:devDependencies
nodes	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    nodes: { repositoryName: string }[]$/;"	p	interface:SearchAttributionResults
nonStop	lib/shared/src/telemetry/EventLogger.ts	/^            nonStop: this.config.experimentalNonStop,$/;"	C	method:EventLogger.log
none	lib/shared/src/chat/recipes/my-prompt.ts	/^    none?: boolean$/;"	p	interface:CodyPromptContext
noopStatusBar	vscode/src/completions/completion.test.ts	/^const noopStatusBar = {$/;"	C
note	lib/shared/src/chat/recipes/my-prompt.ts	/^        const note = ' Refer to the command output and shared code snippets to answer my quesito/;"	C	method:MyPrompt.getInteraction
notificationHandlers	agent/src/jsonrpc.ts	/^    private notificationHandlers: Map<NotificationMethodName, NotificationCallback<any>> = new M/;"	p	class:MessageHandler
notify	agent/src/jsonrpc.ts	/^    public notify<M extends NotificationMethodName>(method: M, params: ParamsOf<M>): void {$/;"	m	class:MessageHandler
notifyIdle	vscode/src/chat/ChatViewProvider.ts	/^            const notifyIdle = this.idleCallbacks_.shift()$/;"	C
notifyTurnComplete	lib/shared/src/chat/bot-response-multiplexer.ts	/^    public async notifyTurnComplete(): Promise<void> {$/;"	m	class:BotResponseMultiplexer
now	vscode/src/completions/logger.ts	/^    const now = performance.now()$/;"	C	function:logSuggestionEvent
npm-run-all	completions-review-tool/package.json	/^    "npm-run-all": "^4.1.5"$/;"	s	object:devDependencies
npm.packageManager	.vscode/settings.json	/^  "npm.packageManager": "pnpm",$/;"	s
npm.runSilent	.vscode/settings.json	/^  "npm.runSilent": true,$/;"	b
ns489652690101	lib/icons/svg-originals/A.svg	/^	 viewBox="0 0 16 16" style="enable-background:new 0 0 16 16;" xml:space="preserve">$/;"	n	uri:http://www.w3.org/2000/svg
ns48a86aea0101	lib/icons/svg-originals/B.svg	/^	 viewBox="0 0 16 16" style="enable-background:new 0 0 16 16;" xml:space="preserve">$/;"	n	uri:http://www.w3.org/2000/svg
ns5167da250101	lib/icons/svg-outlined/A.svg	/^<svg enable-background="new 0 0 16 16" viewBox="0 0 16 16" xmlns="http:\/\/www.w3.org\/2000\/svg/;"	n	uri:http://www.w3.org/2000/svg
ns5179f2a60101	lib/icons/svg-outlined/B.svg	/^<svg enable-background="new 0 0 16 16" viewBox="0 0 16 16" xmlns="http:\/\/www.w3.org\/2000\/svg/;"	n	uri:http://www.w3.org/2000/svg
nsf607f60f0101	vscode/resources/cody.svg	/^<svg version="1.0" xmlns="http:\/\/www.w3.org\/2000\/svg" width="128" height="128" viewBox="0 0 /;"	n	uri:http://www.w3.org/2000/svg
nullLog	lib/shared/src/chat/recipes/agent-recipes.ts	/^function nullLog(filterLabel: string, text: string, ...args: unknown[]): void {$/;"	f
nullLog	lib/shared/src/chat/recipes/browser-recipes.ts	/^function nullLog(filterLabel: string, text: string, ...args: unknown[]): void {$/;"	f
numBytes	lib/shared/src/sourcegraph-api/utils.ts	/^        const byte = buf[lastValidByteOffsetExclusive - numBytes]$/;"	C
numBytes	lib/shared/src/sourcegraph-api/utils.ts	/^        let numBytes = 1$/;"	v
numCodeResults	lib/shared/src/codebase-context/index.ts	/^    numCodeResults: number$/;"	p	interface:ContextSearchOptions
numExpectedInteractions	lib/shared/src/chat/transcript/transcript.test.ts	/^        const numExpectedInteractions = Math.floor(MAX_AVAILABLE_PROMPT_LENGTH \/ tokensPerInter/;"	C
numExpectedMessages	lib/shared/src/chat/transcript/transcript.test.ts	/^        const numExpectedMessages = numExpectedInteractions * 2 \/\/ Each interaction has two me/;"	C
numInteractions	lib/shared/src/chat/transcript/transcript.test.ts	/^    const numInteractions = 100$/;"	C	function:generateLongTranscript
numResults	lib/shared/src/chat/recipes/helpers.ts	/^export const numResults = {$/;"	C	function:getContextMessagesFromSelection
numTextResults	lib/shared/src/chat/recipes/helpers.ts	/^    numTextResults: NUM_TEXT_RESULTS,$/;"	C	function:getContextMessagesFromSelection
numTextResults	lib/shared/src/codebase-context/index.ts	/^    numTextResults: number$/;"	p	interface:ContextSearchOptions
objectFilter	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const objectFilter = (assembler: Assembler): boolean | undefined => {$/;"	C	method:LocalKeywordContextFetcher.fetchFileStats
occurrences	lib/shared/src/chat/viewHelpers.ts	/^    const occurrences = text.split('```').length - 1$/;"	C	function:fixOpenMarkdownCodeBlock
octokit	slack/package.json	/^    "octokit": "^2.1.0",$/;"	s	object:dependencies
octokit	slack/src/services/github-client.ts	/^const octokit = new Octokit({ auth: ENVIRONMENT_CONFIG.GITHUB_TOKEN })$/;"	C
offset	agent/src/offsets.ts	/^    public offset(position: Position): number {$/;"	m	class:DocumentOffsets
offset	vscode/src/completions/document.ts	/^    const offset = document.offsetAt(position)$/;"	C
offset	vscode/test/completions/vscode-text-document.ts	/^        const offset = this.offsetAt(range.start)$/;"	C
offsets	agent/src/editor.ts	/^        const offsets = new DocumentOffsets(document)$/;"	C
oldState	vscode/src/non-stop/FixupController.ts	/^        const oldState = task.state$/;"	C
oldUri	vscode/src/non-stop/FixupFileObserver.ts	/^        for (const { oldUri, newUri } of event.files) {$/;"	C	method:FixupFileObserver.didRenameFiles
onBotMessageChange	slack/src/mention-handler.ts	/^const onBotMessageChange = throttle(async (channel, inProgressMessageTs: string | undefined, tex/;"	C
onChange	lib/shared/src/sourcegraph-api/completions/types.ts	/^    onChange: (text: string) => void$/;"	p	interface:CompletionCallbacks
onClick	lib/shared/src/chat/transcript/messages.ts	/^    onClick: (action: string) => void$/;"	p	interface:ChatButton
onClick	vscode/src/notifications/index.ts	/^    onClick: () => Thenable<void>$/;"	p	interface:Action
onComplete	lib/shared/src/sourcegraph-api/completions/types.ts	/^    onComplete: () => void$/;"	p	interface:CompletionCallbacks
onComplete	vscode/src/log.ts	/^        function onComplete(result: string | CompletionResponse | string[] | CompletionResponse[/;"	f
onConfigurationChange	lib/shared/src/codebase-context/index.ts	/^    public onConfigurationChange(newConfig: typeof this.config): void {$/;"	m	class:CodebaseContext
onConfigurationChange	lib/shared/src/sourcegraph-api/completions/client.ts	/^    public onConfigurationChange(newConfig: CompletionsClientConfig): void {$/;"	m	class:SourcegraphCompletionsClient
onConfigurationChange	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    public onConfigurationChange($/;"	m	class:SourcegraphGraphQLAPIClient
onConfigurationChange	lib/shared/src/telemetry/EventLogger.ts	/^    public onConfigurationChange($/;"	m	class:EventLogger
onConfigurationChange	vscode/src/external-services.ts	/^    onConfigurationChange: (newConfig: ExternalServicesConfiguration) => void$/;"	p	interface:ExternalServices
onConfigurationChange	vscode/src/main.ts	/^        onConfigurationChange: externalServicesOnDidConfigurationChange,$/;"	C
onConfigurationChange	vscode/src/main.ts	/^    const { disposable, onConfigurationChange } = await register($/;"	C	function:start
onDidChange	vscode/src/services/DecorationProvider.ts	/^    public readonly onDidChange: vscode.Event<void> = this._onDidChange.event$/;"	p	class:DecorationProvider
onDidChange	vscode/src/services/SecretStorageProvider.ts	/^    onDidChange(callback: (key: string) => Promise<void>): vscode.Disposable$/;"	m	interface:SecretStorage
onDidChange	vscode/src/services/SecretStorageProvider.ts	/^    public onDidChange(callback: (key: string) => Promise<void>): vscode.Disposable {$/;"	m	class:InMemorySecretStorage
onDidChange	vscode/src/services/SecretStorageProvider.ts	/^    public onDidChange(callback: (key: string) => Promise<void>): vscode.Disposable {$/;"	m	class:VSCodeSecretStorage
onError	lib/shared/src/sourcegraph-api/completions/types.ts	/^    onError: (message: string, statusCode?: number) => void$/;"	p	interface:CompletionCallbacks
onError	vscode/src/log.ts	/^        function onError(error: string): void {$/;"	f
onEvent	lib/shared/src/chat/useClient.ts	/^    onEvent?: (event: CodyClientEvent) => void$/;"	p	interface:CodyClientProps
onEvents	vscode/src/log.ts	/^        function onEvents(events: Event[]): void {$/;"	f
onIdle	vscode/src/non-stop/roles.ts	/^    onIdle(callback: () => void): void$/;"	m	interface:IdleRecipeRunner
onMessage	vscode/webviews/utils/VSCodeApi.ts	/^    onMessage(callback: (message: ExtensionMessage) => void): () => void$/;"	m	interface:VSCodeWrapper
onReceiveMessage	node_modules/autopreview/Autopreview.js	/^  async onReceiveMessage(e) {$/;"	m	class:AutoPreview
onResponse	lib/shared/src/chat/bot-response-multiplexer.ts	/^    onResponse(content: string): Promise<void>$/;"	m	interface:BotResponseSubscriber
onResponse	lib/shared/src/chat/bot-response-multiplexer.ts	/^    public onResponse(content: string): Promise<void> {$/;"	m	class:BufferedBotResponseSubscriber
onSelect	vscode/src/services/FeedbackOptions.ts	/^        async onSelect(): Promise<void> {$/;"	C
onTurnComplete	lib/shared/src/chat/bot-response-multiplexer.ts	/^    onTurnComplete(): Promise<void>$/;"	m	interface:BotResponseSubscriber
onTurnComplete	lib/shared/src/chat/bot-response-multiplexer.ts	/^    public async onTurnComplete(): Promise<void> {$/;"	m	class:BufferedBotResponseSubscriber
onopen	node_modules/autopreview/Autopreview.js	/^    this.ws.onopen = () => {$/;"	f	variable:ws
op	vscode/src/non-stop/diff.ts	/^        const op = ops[j * (lenA + 1) + i]$/;"	C	function:longestCommonSubsequence
open	vscode/src/my-cody/MyPromptController.ts	/^    public async open(filePath: string): Promise<void> {$/;"	m	class:MyPromptController
openFile	vscode/src/my-cody/MyToolsProvider.ts	/^    public async openFile(uri?: vscode.Uri): Promise<void> {$/;"	m	class:MyToolsProvider
openFolder	vscode/src/my-cody/MyToolsProvider.ts	/^    public async openFolder(): Promise<void> {$/;"	m	class:MyToolsProvider
openLoadingLeases	vscode/src/services/StatusBar.ts	/^    let openLoadingLeases = 0$/;"	v
openTabs	.vscode/cody.json	/^        "openTabs": true,$/;"	b	object:recipes.Compare Files in Opened Tabs.context
openTabs	lib/shared/src/chat/recipes/my-prompt.ts	/^        const openTabs = vscode.window.tabGroups.all$/;"	C	method:MyPrompt.getEditorOpenTabsContext
openTabs	lib/shared/src/chat/recipes/my-prompt.ts	/^    openTabs?: boolean$/;"	p	interface:CodyPromptContext
openTabs	vscode/resources/samples/user-cody.json	/^        "openTabs": true,$/;"	b	object:recipes.Compare Files in Opened Tabs.context
openTabsContext	lib/shared/src/chat/recipes/my-prompt.ts	/^            const openTabsContext = await MyPrompt.getEditorOpenTabsContext()$/;"	C	method:MyPrompt.getContextMessages
openai	slack/package.json	/^    "openai": "^3.2.1",$/;"	s	object:dependencies
openai	slack/src/services/openai-completions-client.ts	/^    private openai: OpenAIApi$/;"	p	class:OpenAICompletionsClient
openai	vscode/package.json	/^    "openai": "^3.2.1",$/;"	s	object:dependencies
openingBracket	vscode/src/completions/multiline.ts	/^        const closingBracket = BRACKET_PAIR[openingBracket]$/;"	C	function:shouldIncludeClosingLineBasedOnBrackets
openingBracket	vscode/src/completions/multiline.ts	/^        const openingBracket = matches[0] as keyof typeof BRACKET_PAIR$/;"	C	function:shouldIncludeClosingLineBasedOnBrackets
openvsx	vscode/scripts/release.ts	/^    openvsx: dryRun ? 'dry-run' : process.env.VSCODE_OPENVSX_TOKEN,$/;"	C
operands	cli/src/program.ts	/^const { operands } = program.parseOptions(args)$/;"	C
operation	vscode/test/fixtures/mock-server.ts	/^        const operation = new URL(req.url, 'https:\/\/example.com').search.replace(\/^\\?\/, '')$/;"	C	function:run
ops	vscode/src/non-stop/diff.ts	/^    const ops = new Array<Op>((lenA + 1) * (lenB + 1))$/;"	C	function:longestCommonSubsequence
option	.vscode/tasks.json	/^      "option": "watch",$/;"	s	object:tasks.0
option	vscode/src/services/AuthMenus.ts	/^    const option = (await vscode.window.showQuickPick(optionItems, AuthMenuOptions[type])) as Lo/;"	C
option	vscode/src/services/StatusBar.ts	/^        const option = await vscode.window.showQuickPick($/;"	C
optionItems	vscode/src/services/AuthMenus.ts	/^    const optionItems = type === 'signout' ? history : [...LoginMenuOptionItems, ...seperator, ./;"	C
options	.vscode/tasks.json	/^      "options": { "cwd": "vscode" },$/;"	o	object:tasks.1
options	lib/shared/src/chat/recipes/translate.ts	/^    public static options = languageNames$/;"	p	class:TranslateToLanguage
options	vscode/src/completions/providers/provider.ts	/^    constructor(public readonly options: Readonly<ProviderOptions>) {}$/;"	p	class:Provider
options	vscode/src/my-cody/InputMenu.ts	/^    const options = [$/;"	C	function:showCustomRecipeMenu
options	vscode/src/my-cody/MyPromptController.ts	/^        const options = { title: 'Cody: My Custom Recipes', placeHolder: 'Select a recipe to run/;"	C	method:MyPromptController.quickRecipe
options	vscode/src/notifications/index.ts	/^    options?: vscode.MessageOptions$/;"	p	interface:ActionNotification
options	vscode/src/services/AuthMenus.ts	/^    const options = LoginStepOptions[1]$/;"	C	function:TokenInputBox
options	vscode/src/services/AuthMenus.ts	/^    const options = LoginStepOptions[step - 1]$/;"	C	function:LoginStepInputBox
options	vscode/src/services/InlineController.ts	/^    private options = {$/;"	p	class:InlineController
opts	lib/shared/src/plugins/built-in/github-issues.ts	/^    const opts = {$/;"	C
order	vscode/package.json	/^          "order": 1,$/;"	n	object:contributes.configuration.properties.cody.serverEndpoint
order	vscode/package.json	/^          "order": 2,$/;"	n	object:contributes.configuration.properties.cody.codebase
order	vscode/package.json	/^          "order": 3,$/;"	n	object:contributes.configuration.properties.cody.useContext
order	vscode/package.json	/^          "order": 4,$/;"	n	object:contributes.configuration.properties.cody.customHeaders
order	vscode/package.json	/^          "order": 5,$/;"	n	object:contributes.configuration.properties.cody.autocomplete.enabled
order	vscode/package.json	/^          "order": 6,$/;"	n	object:contributes.configuration.properties.cody.inlineChat.enabled
order	vscode/package.json	/^          "order": 7,$/;"	n	object:contributes.configuration.properties.cody.experimental.chatPredictions
order	vscode/package.json	/^          "order": 8,$/;"	n	object:contributes.configuration.properties.cody.experimental.guardrails
order	vscode/package.json	/^          "order": 9,$/;"	n	object:contributes.configuration.properties.cody.experimental.customRecipes
order	vscode/package.json	/^          "order": 99,$/;"	n	object:contributes.configuration.properties.cody.autocomplete.advanced.embeddings
order	vscode/package.json	/^          "order": 99,$/;"	n	object:contributes.configuration.properties.cody.debug.enable
order	vscode/package.json	/^          "order": 99,$/;"	n	object:contributes.configuration.properties.cody.debug.filter
order	vscode/package.json	/^          "order": 99,$/;"	n	object:contributes.configuration.properties.cody.debug.verbose
org	lib/shared/src/plugins/built-in/github-issues.ts	/^                const { org, repo } = api.config?.github ?? {}$/;"	C
org	vscode/package.json	/^                "org": {$/;"	o	object:contributes.configuration.properties.cody.plugins.config.properties.github.properties
original	vscode/src/non-stop/FixupTask.ts	/^    public original = ''$/;"	p	class:FixupTask
originalEnd	vscode/src/non-stop/diff.ts	/^        const originalEnd = updatedPosition(originalPos, chunk[2])$/;"	C	function:computeChunks
originalFileOrder	lib/shared/src/codebase-context/index.ts	/^    const originalFileOrder: ContextFile[] = []$/;"	C
originals	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    originals: string[]$/;"	p	interface:Term
os	vscode/src/chat/protocol.ts	/^    os: string$/;"	p	interface:LocalEnv
otherCommitMessages	cli/src/commands/commit/command.ts	/^    const otherCommitMessages = options.otherCommits ? await gitHelpers.getOtherCommitMessages({/;"	C	function:run
otherCommits	cli/src/commands/commit/command.ts	/^    otherCommits: boolean$/;"	p	interface:CommitOptions
otherCompletionProviderEnabled	vscode/src/completions/logger.ts	/^function otherCompletionProviderEnabled(): boolean {$/;"	C
otherCompletionProviders	vscode/src/completions/logger.ts	/^const otherCompletionProviders = [$/;"	C
out	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                    const out = await new Promise<string>((resolve, reject) => {$/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
outDir	agent/tsconfig.json	/^    "outDir": "dist",$/;"	s	object:compilerOptions
outDir	cli/tsconfig.json	/^    "outDir": "dist",$/;"	s	object:compilerOptions
outDir	completions-review-tool/tsconfig.json	/^    "outDir": ".\/out",$/;"	s	object:compilerOptions
outDir	lib/shared/tsconfig.json	/^    "outDir": "dist",$/;"	s	object:compilerOptions
outDir	lib/ui/tsconfig.json	/^    "outDir": "dist",$/;"	s	object:compilerOptions
outDir	slack/tsconfig.json	/^    "outDir": "dist",$/;"	s	object:compilerOptions
outDir	tsconfig.base.json	/^    "outDir": "dist",$/;"	s	object:compilerOptions
outDir	vscode/scripts/tsconfig.json	/^    "outDir": "dist",$/;"	s	object:compilerOptions
outDir	vscode/test/completions/tsconfig.json	/^    "outDir": "..\/..\/dist\/tsc\/test\/completions",$/;"	s	object:compilerOptions
outDir	vscode/test/integration/tsconfig.json	/^    "outDir": "..\/..\/dist\/tsc\/test\/integration",$/;"	s	object:compilerOptions
outDir	vscode/tsconfig.json	/^    "outDir": "dist\/tsc",$/;"	s	object:compilerOptions
outDir	web/tsconfig.json	/^    "outDir": "dist",$/;"	s	object:compilerOptions
outFiles	.vscode/launch.json	/^      "outFiles": ["${workspaceRoot}\/vscode\/dist\/**\/*.js"],$/;"	a	object:configurations.0
outdir	vscode/scripts/bundle.ts	/^const outdir = path.join(__dirname, '..\/dist')$/;"	C
outerValue	lib/shared/src/hallucinations-detector/index.ts	/^    outerValue: string$/;"	p	interface:HighlightedToken
output	lib/shared/src/hallucinations-detector/index.test.ts	/^            output: { pathMatch: string; fullMatch: string }[]$/;"	C
output	lib/shared/src/plugins/api/types.ts	/^    output: PluginFunctionOutput[]$/;"	p	interface:PluginFunctionExecutionInfo
output	vscode/src/my-cody/MyPromptController.ts	/^            const output = await this.tools.exeCommand(fullCommand)$/;"	C	method:MyPromptController.getCommandOutput
output	vscode/src/my-cody/MyToolsProvider.ts	/^            const output = stdout || stderr$/;"	C	method:MyToolsProvider.exeCommand
output	vscode/src/my-cody/MyToolsProvider.ts	/^            const output =$/;"	C	method:MyToolsProvider.runCommand
outputChannel	vscode/src/log.ts	/^const outputChannel: vscode.OutputChannel = vscode.window.createOutputChannel('Cody by Sourcegra/;"	C
outputString	vscode/src/my-cody/MyToolsProvider.ts	/^            const outputString = JSON.stringify(output.trim())$/;"	C	method:MyToolsProvider.exeCommand
outputString	vscode/src/my-cody/MyToolsProvider.ts	/^            const outputString = output.stdout?.trim()$/;"	C	method:MyToolsProvider.runCommand
outputWrapper	vscode/src/my-cody/helper.ts	/^export const outputWrapper = `$/;"	C
overlap	vscode/src/completions/text-processing.ts	/^    overlap?: string$/;"	p	interface:PrefixComponents
ovsx	vscode/package.json	/^    "ovsx": "^0.8.2",$/;"	s	object:devDependencies
owner	slack/src/services/github-client.ts	/^    const { owner, repo, path } = options$/;"	C	function:fetchFileContent
owner	slack/src/services/github-client.ts	/^    owner: string$/;"	p	interface:FetchFileContentOptions
owner	vscode/src/chat/utils.ts	/^            const owner = match[2]$/;"	C	function:convertGitCloneURLToCodebaseName
packageExtensions	package.json	/^    "packageExtensions": {$/;"	o	object:pnpm
packageInitiated	node_modules/autopreview/Autopreview.js	/^      this.sendMessage('update', { packageInitiated: true });$/;"	p	variable:anonymousObject8c7ec3e20205
packageJSONContextMessage	lib/shared/src/chat/recipes/my-prompt.ts	/^                const packageJSONContextMessage = await MyPrompt.getPackageJsonContext(selection/;"	C	method:MyPrompt.getContextMessages
packageJSONVersion	vscode/scripts/release.ts	/^const packageJSONVersion = semver.valid(packageJSONVersionString)$/;"	C
packageJSONVersionString	vscode/scripts/release.ts	/^const packageJSONVersionString: string = require('..\/package.json').version$/;"	C
packageJson	lib/shared/src/chat/recipes/my-prompt.ts	/^            const packageJson = JSON.parse(packageJsonContent.toString()) as Record<string, unkn/;"	C	method:MyPrompt.getPackageJsonContext
packageJsonContent	lib/shared/src/chat/recipes/my-prompt.ts	/^            const packageJsonContent = await vscode.workspace.fs.readFile(packageJsonUri)$/;"	C	method:MyPrompt.getPackageJsonContext
packageJsonPath	lib/shared/src/chat/recipes/my-prompt.ts	/^        const packageJsonPath = await vscode.workspace.findFiles('**\/package.json', '**\/node_m/;"	C	method:MyPrompt.getPackageJsonContext
packageJsonUri	lib/shared/src/chat/recipes/my-prompt.ts	/^            const packageJsonUri = packageJsonPath[0]$/;"	C	method:MyPrompt.getPackageJsonContext
packageManager	package.json	/^  "packageManager": "pnpm@8.6.7",$/;"	s
page	vscode/test/e2e/helpers.ts	/^            const page = await app.firstWindow()$/;"	C
palindrome	vscode/src/non-stop/diff.test.ts	/^        const palindrome = 'amanaplanacanalpanama'$/;"	C
parameters	lib/shared/src/plugins/api/types.ts	/^    parameters: PluginFunctionParameters$/;"	p	interface:PluginChosenFunctionDescriptor
parameters	lib/shared/src/plugins/api/types.ts	/^    parameters: PluginFunctionParameters$/;"	p	interface:PluginFunctionWithParameters
parameters	lib/shared/src/plugins/api/types.ts	/^    parameters: {$/;"	p	interface:PluginFunctionDescriptor
parameters	lib/shared/src/plugins/api/types.ts	/^    parameters?: PluginFunctionParameters$/;"	p	interface:PluginFunctionExecutionInfo
parameters	lib/shared/src/sourcegraph-api/completions/browserClient.ts	/^        const parameters = new URLSearchParams(window.location.search)$/;"	C	method:SourcegraphBrowserCompletionsClient.stream
parameters	vscode/src/completions/providers/unstable-huggingface.ts	/^            parameters: {$/;"	C	method:UnstableHuggingFaceProvider.generateCompletions
params	agent/src/jsonrpc.ts	/^            params,$/;"	C	method:MessageHandler.notify
params	agent/src/jsonrpc.ts	/^            params,$/;"	C	method:MessageHandler.request
params	agent/src/jsonrpc.ts	/^    params?: ParamsOf<M>$/;"	p	interface:NotificationMessage
params	agent/src/jsonrpc.ts	/^    params?: ParamsOf<M>$/;"	p	interface:RequestMessage
params	vscode/src/completions/logger.ts	/^        const { suggestedAt, suggestionLoggedAt, startedAt, params, forceRead } = completionEven/;"	C	function:logSuggestionEvent
params	vscode/src/completions/logger.ts	/^    const params: CompletionEvent['params'] = {$/;"	C	function:start
params	vscode/src/completions/logger.ts	/^    params: {$/;"	p	interface:CompletionEvent
params	vscode/src/completions/providers/unstable-codegen.ts	/^        const params = {$/;"	C	method:UnstableCodeGenProvider.generateCompletions
params	vscode/src/services/AuthProvider.ts	/^        const params = new URLSearchParams(uri.query)$/;"	C
parentDirName	lib/shared/src/chat/recipes/my-prompt.ts	/^                const parentDirName = getParentDirName(dirPath)$/;"	C	method:MyPrompt.getEditorDirContext
parseEvent	lib/shared/src/sourcegraph-api/completions/parse.ts	/^function parseEvent(eventBuffer: string): Event | Error {$/;"	f
parseEventData	lib/shared/src/sourcegraph-api/completions/parse.ts	/^function parseEventData(eventType: Event['type'], dataLine: string): Event | Error {$/;"	f
parseEventType	lib/shared/src/sourcegraph-api/completions/parse.ts	/^function parseEventType(eventLine: string): Event['type'] | Error {$/;"	f
parseEvents	lib/shared/src/sourcegraph-api/completions/parse.ts	/^export function parseEvents(eventsBuffer: string): EventsParseResult | Error {$/;"	f
parseInt	vscode/test/completions/run-code-completions-on-dataset.ts	/^const sampleIndex = process.env.SAMPLE_INDEX ? parseInt(process.env.SAMPLE_INDEX, 10) : null$/;"	C
parseJSON	lib/shared/src/sourcegraph-api/completions/parse.ts	/^function parseJSON<T>(data: string): T | Error {$/;"	f
parseMarkdown	lib/shared/src/chat/markdown.ts	/^export function parseMarkdown(text: string): marked.Token[] {$/;"	f
parseSlackChannelFilter	slack/src/mention-handler.ts	/^function parseSlackChannelFilter(input: string): string | null {$/;"	f
parseXml	lib/shared/src/codebase-context/rerank.ts	/^async function parseXml(xml: string): Promise<string[]> {$/;"	f
parts	lib/shared/src/guardrails/index.ts	/^    const parts = await Promise.all($/;"	C	function:annotateAttribution
parts	lib/shared/src/hallucinations-detector/index.ts	/^    const parts = pathMatch.split(\/[\/\\\\]\/)$/;"	C	function:isFilePathLike
path	.vscode/tasks.json	/^      "path": "vscode",$/;"	s	object:tasks.1
path	agent/tsconfig.json	/^  "references": [{ "path": "..\/lib\/shared" }],$/;"	s	object:references.0
path	cli/tsconfig.json	/^      "path": "..\/lib\/shared",$/;"	s	object:references.0
path	completions-review-tool/server.js	/^const path = require('path')$/;"	C
path	lib/shared/src/plugins/built-in/github-issues.ts	/^const path = '\/search\/issues'$/;"	C
path	lib/ui/tsconfig.json	/^      "path": "..\/shared",$/;"	s	object:references.0
path	slack/src/services/github-client.ts	/^    const { owner, repo, path } = options$/;"	C	function:fetchFileContent
path	slack/src/services/github-client.ts	/^    path: string$/;"	p	interface:FetchFileContentOptions
path	slack/tsconfig.json	/^      "path": "..\/lib\/shared",$/;"	s	object:references.0
path	tsconfig.json	/^    { "path": "agent" },$/;"	s	object:references.0
path	tsconfig.json	/^    { "path": "cli" },$/;"	s	object:references.1
path	tsconfig.json	/^    { "path": "lib\/shared" },$/;"	s	object:references.2
path	tsconfig.json	/^    { "path": "lib\/ui" },$/;"	s	object:references.3
path	tsconfig.json	/^    { "path": "slack" },$/;"	s	object:references.4
path	tsconfig.json	/^    { "path": "vscode" },$/;"	s	object:references.5
path	tsconfig.json	/^    { "path": "vscode\/scripts" },$/;"	s	object:references.8
path	tsconfig.json	/^    { "path": "vscode\/test\/completions" },$/;"	s	object:references.7
path	tsconfig.json	/^    { "path": "vscode\/test\/integration" },$/;"	s	object:references.6
path	tsconfig.json	/^    { "path": "web" }$/;"	s	object:references.9
path	vscode/test/completions/tsconfig.json	/^  "references": [{ "path": "..\/..\/" }],$/;"	s	object:references.0
path	vscode/test/integration/tsconfig.json	/^  "references": [{ "path": "..\/..\/" }],$/;"	s	object:references.0
path	vscode/tsconfig.json	/^      "path": "..\/lib\/shared",$/;"	s	object:references.0
path	vscode/tsconfig.json	/^      "path": "..\/lib\/ui",$/;"	s	object:references.1
path	web/tsconfig.json	/^  "references": [{ "path": "..\/lib\/shared" }, { "path": "..\/lib\/ui" }],$/;"	s	object:references.0
path	web/tsconfig.json	/^  "references": [{ "path": "..\/lib\/shared" }, { "path": "..\/lib\/ui" }],$/;"	s	object:references.1
path-browserify	web/package.json	/^    "path-browserify": "^1.0.1"$/;"	s	object:dependencies
pathExists	vscode/src/services/LocalAppDetector.ts	/^async function pathExists(path: string): Promise<boolean> {$/;"	f
pathMatch	lib/shared/src/hallucinations-detector/index.ts	/^                    for (const { fullMatch, pathMatch } of findFilePaths(line)) {$/;"	C	function:detectTokens
pathMatch	lib/shared/src/hallucinations-detector/index.ts	/^        const pathMatch = m[1]$/;"	C
pathMatch	lib/shared/src/hallucinations-detector/index.ts	/^    const matches: { fullMatch: string; pathMatch: string }[] = []$/;"	C
patterns	lib/ui/.eslintrc.json	/^        "patterns": [$/;"	a	object:rules.no-restricted-imports.1
payload	slack/src/services/openai-completions-client.ts	/^                    for (const payload of payloads) {$/;"	C	method:OpenAICompletionsClient.stream
payloads	slack/src/services/openai-completions-client.ts	/^                    const payloads = buffer.split('\\n\\n')$/;"	C	method:OpenAICompletionsClient.stream
peerDependencies	node_modules/autopreview/package.json	/^  "peerDependencies": {},$/;"	o
pkg	agent/package.json	/^    "pkg": "^5.8.1"$/;"	s	object:devDependencies
placeHolder	vscode/src/my-cody/InputMenu.ts	/^    const placeHolder = 'Select recipe type to continue...'$/;"	C
playwright	vscode/package.json	/^    "playwright": "^1.33.0",$/;"	s	object:devDependencies
pluginExecutionInfos	lib/shared/src/chat/transcript/interaction.ts	/^    pluginExecutionInfos: PluginFunctionExecutionInfo[]$/;"	p	interface:InteractionJSON
pluginExecutionInfos	lib/shared/src/chat/transcript/messages.ts	/^    pluginExecutionInfos?: PluginFunctionExecutionInfo[]$/;"	p	interface:ChatMessage
pluginExecutionInfos	vscode/src/chat/ChatViewProvider.ts	/^        let pluginExecutionInfos: PluginFunctionExecutionInfo[] = []$/;"	v
pluginName	lib/shared/src/plugins/api/types.ts	/^    pluginName: string$/;"	p	interface:PluginFunctionExecutionInfo
pluginName	lib/shared/src/plugins/api/types.ts	/^    pluginName: string$/;"	p	interface:PluginFunctionWithParameters
pluginsConfig	lib/shared/src/configuration.ts	/^    pluginsConfig?: {$/;"	p	interface:Configuration
pluginsDebugEnabled	lib/shared/src/configuration.ts	/^    pluginsDebugEnabled?: boolean$/;"	p	interface:Configuration
pluginsDebugEnabled	vscode/src/chat/ChatViewProvider.ts	/^                pluginsDebugEnabled: this.config.pluginsDebugEnabled,$/;"	C
pluginsEnabled	lib/shared/src/configuration.ts	/^    pluginsEnabled?: boolean$/;"	p	interface:Configuration
pluginsEnabled	vscode/src/chat/ChatViewProvider.ts	/^                pluginsEnabled: this.config.pluginsEnabled,$/;"	C
pluginsPrompt	vscode/src/chat/ChatViewProvider.ts	/^        let pluginsPrompt: Message[] = []$/;"	v
pluralize	lib/shared/src/common/index.ts	/^export function pluralize(string: string, count: number | bigint, plural = string + 's'): string/;"	f
pnpm	package.json	/^    "pnpm": "^8.6.7"$/;"	s	object:engines
pnpm	package.json	/^  "pnpm": {$/;"	o
populateCodeContextTemplate	lib/shared/src/prompt/templates.ts	/^export function populateCodeContextTemplate(code: string, filePath: string, repoName?: string): /;"	f
populateCurrentEditorContextTemplate	lib/shared/src/prompt/templates.ts	/^export function populateCurrentEditorContextTemplate(code: string, filePath: string, repoName?: /;"	f
populateCurrentEditorSelectedContextTemplate	lib/shared/src/prompt/templates.ts	/^export function populateCurrentEditorSelectedContextTemplate($/;"	f
populateMarkdownContextTemplate	lib/shared/src/prompt/templates.ts	/^export function populateMarkdownContextTemplate(markdown: string, filePath: string, repoName?: s/;"	f
populateTerminalOutputContextTemplate	lib/shared/src/prompt/templates.ts	/^export function populateTerminalOutputContextTemplate(output: string): string {$/;"	f
populateVscodeDirContextMessage	lib/shared/src/chat/recipes/my-prompt.ts	/^async function populateVscodeDirContextMessage($/;"	f
pos	vscode/src/non-stop/tracked-range.test.ts	/^function pos(line: number, character: number): Position {$/;"	f
position	agent/src/offsets.ts	/^        const lineStartOffset = this.lines[position.line]$/;"	C	method:DocumentOffsets.offset
position	vscode/src/completions/completion.test.ts	/^            const position: any = { line: splitPrefix.length, character: splitPrefix[splitPrefix/;"	C
position	vscode/src/non-stop/tracked-range.test.ts	/^        const position = new Position(line, i - beginningOfLine)$/;"	C	function:show
position	vscode/test/completions/run-code-completions-on-dataset.ts	/^        const { textDocument, position } = prepareTextDocument(code)$/;"	C	function:generateCompletionsForDataset
position	vscode/test/completions/run-code-completions-on-dataset.ts	/^    const position = findSubstringPosition(code, CURSOR)$/;"	C
position	vscode/test/completions/vscode-text-document.ts	/^        const line = typeof position === 'number' ? position : position.line$/;"	C
postEditHighlights	vscode/src/non-stop/diff.ts	/^    const postEditHighlights = []$/;"	C	function:computeChunks
postMessage	slack/src/slack/helpers.ts	/^export async function postMessage($/;"	f
postMessage	vscode/webviews/utils/VSCodeApi.ts	/^    postMessage(message: WebviewMessage): void$/;"	m	interface:VSCodeWrapper
postMessage	vscode/webviews/utils/VSCodeApi.ts	/^    postMessage: (message: unknown) => void$/;"	p	interface:VSCodeApi
postProcess	vscode/src/completions/providers/anthropic.ts	/^    private postProcess(rawResponse: string): string {$/;"	m	class:AnthropicProvider
postProcess	vscode/src/completions/providers/unstable-codegen.ts	/^function postProcess(content: string, multiline: boolean): string {$/;"	f
postProcess	vscode/src/completions/providers/unstable-huggingface.ts	/^function postProcess(content: string, multiline: boolean): string {$/;"	f
prTemplateOutput	lib/shared/src/chat/recipes/generate-pr-description.ts	/^        const prTemplateOutput = checkPrTemplate.stdout.toString().trim()$/;"	C	method:PrDescription.getInteraction
preLaunchTask	.vscode/launch.json	/^      "preLaunchTask": "Build VS Code Extension",$/;"	s	object:configurations.0
preamble	cli/src/client/preamble.ts	/^    const preamble = [actions, rules]$/;"	C	function:getPreamble
preamble	lib/shared/src/chat/preamble.ts	/^    const preamble = [actionsText, rulesText]$/;"	C	function:getMultiRepoPreamble
preamble	lib/shared/src/chat/preamble.ts	/^    const preamble = [actionsText, rulesText]$/;"	C	function:getPreamble
preamble	lib/shared/src/chat/transcript/transcript.test.ts	/^        const preamble: Message[] = [$/;"	C
preamble	slack/src/slack/preamble.ts	/^    const preamble = [actions, rules]$/;"	C	function:getSlackPreamble
preambleResponse	cli/src/client/preamble.ts	/^    const preambleResponse = [answer]$/;"	C	function:getPreamble
preambleResponse	lib/shared/src/chat/preamble.ts	/^    const preambleResponse = [answerText]$/;"	C	function:getMultiRepoPreamble
preambleResponse	lib/shared/src/chat/preamble.ts	/^    const preambleResponse = [answerText]$/;"	C	function:getPreamble
preambleResponse	slack/src/slack/preamble.ts	/^    const preambleResponse = [answer]$/;"	C	function:getSlackPreamble
preambleTokensUsage	lib/shared/src/chat/transcript/index.ts	/^        const preambleTokensUsage = preamble.reduce((acc, message) => acc + estimateTokensUsage(/;"	C	method:Transcript.getPromptForLastInteraction
precedingText	lib/shared/src/chat/recipes/non-stop.ts	/^        const { instruction, fileName, precedingText, selectedText, followingText } = taskParame/;"	C	method:NonStop.getInteraction
precedingText	lib/shared/src/editor/index.ts	/^    precedingText: string$/;"	p	interface:ActiveTextEditorSelection
precedingText	vscode/src/editor/vscode-editor.ts	/^        const precedingText = activeEditor.document.getText($/;"	C	method:VSCodeEditor.createActiveTextEditorSelection
precedingText	vscode/src/non-stop/FixupController.ts	/^        const precedingText = document.getText($/;"	C
precedingText	vscode/src/services/InlineController.ts	/^        const precedingText = activeDocument.getText($/;"	C
prefix	lib/shared/src/chat/transcript/messages.ts	/^    prefix?: string$/;"	p	interface:InteractionMessage
prefix	vscode/src/completions/completion.test.ts	/^            const prefix = code.slice(0, cursorIndex)$/;"	C
prefix	vscode/src/completions/context-embeddings.ts	/^    const { document, codebaseContext, prefix, suffix } = options$/;"	C
prefix	vscode/src/completions/context-embeddings.ts	/^    prefix: string$/;"	p	interface:Options
prefix	vscode/src/completions/context-local.ts	/^    const { document, history, prefix, jaccardDistanceWindowSize } = options$/;"	C	function:getContextFromCurrentEditor
prefix	vscode/src/completions/context-local.ts	/^    prefix: string$/;"	p	interface:Options
prefix	vscode/src/completions/context.ts	/^    prefix: string$/;"	p	interface:GetContextOptions
prefix	vscode/src/completions/docprovider.ts	/^    const prefix = '# ======= '$/;"	C	function:headerize
prefix	vscode/src/completions/document.ts	/^    let prefix: string$/;"	v
prefix	vscode/src/completions/index.ts	/^        const { prefix, suffix, prevNonEmptyLine } = docContext$/;"	C
prefix	vscode/src/completions/index.ts	/^    prefix: string$/;"	p	interface:Completion
prefix	vscode/src/completions/providers/provider.ts	/^    prefix: string$/;"	p	interface:ProviderOptions
prefix	vscode/src/completions/request-manager.test.ts	/^        const prefix = 'console.log('$/;"	C
prefix	vscode/src/completions/request-manager.ts	/^    prefix: string$/;"	p	interface:Request
prefix	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    prefix: string$/;"	p	interface:Term
prefix	vscode/src/non-stop/diff.test.ts	/^        const prefix = 'hello, '$/;"	C
prefix1	vscode/src/completions/request-manager.test.ts	/^        const prefix1 = 'console.'$/;"	C
prefix2	vscode/src/completions/request-manager.test.ts	/^        const prefix2 = 'console.log('$/;"	C
prefixLines	vscode/src/completions/document.ts	/^    const prefixLines = document.getText(new vscode.Range(new vscode.Position(0, 0), position))./;"	C
prefixLines	vscode/src/completions/document.ts	/^    const prevLine = prefixLines[prefixLines.length - 1]$/;"	C
prefixPercentage	vscode/src/completions/index.ts	/^    prefixPercentage?: number$/;"	p	interface:CodyCompletionItemProviderConfig
prefixPercentage	vscode/src/completions/providers/provider.ts	/^    prefixPercentage: number$/;"	p	interface:ProviderOptions
premade	vscode/src/my-cody/MyPromptController.ts	/^        const { prompts, premade, starter } = await this.builder.get()$/;"	C	method:MyPromptController.refresh
premade	vscode/src/my-cody/types.ts	/^    premade?: CodyPromptPremade$/;"	p	interface:MyPromptsJSON
premade	vscode/src/my-cody/types.ts	/^    premade?: Preamble$/;"	p	interface:MyPrompts
prepareContext	vscode/src/completions/providers/unstable-codegen.ts	/^function prepareContext(snippets: ReferenceSnippet[], fileName: string): Context {$/;"	f
prepareTextDocument	vscode/test/completions/run-code-completions-on-dataset.ts	/^function prepareTextDocument(code: string): { textDocument: TextDocument; position: vscode.Posit/;"	f
prepublishOnly	cli/package.json	/^    "prepublishOnly": "pnpm run --silent build"$/;"	s	object:scripts
prepublishOnly	lib/shared/package.json	/^    "prepublishOnly": "tsc --build --clean && pnpm run build"$/;"	s	object:scripts
prepublishOnly	lib/ui/package.json	/^    "prepublishOnly": "tsc --build --clean && pnpm run build"$/;"	s	object:scripts
presentation	.vscode/tasks.json	/^      "presentation": {$/;"	o	object:tasks.0
prettier	package.json	/^    "prettier": "3.0.0",$/;"	s	object:devDependencies
prevLine	vscode/src/completions/document.ts	/^    const prevLine = prefixLines[prefixLines.length - 1]$/;"	C
prevNonEmptyLine	vscode/src/completions/document.ts	/^    let prevNonEmptyLine = ''$/;"	v
prevNonEmptyLine	vscode/src/completions/index.ts	/^        const { prefix, suffix, prevNonEmptyLine } = docContext$/;"	C
previousAbort	vscode/src/completions/index.ts	/^        const previousAbort = this.abortOpenCompletions$/;"	C
previousResult	lib/shared/src/codebase-context/index.ts	/^        const previousResult = sortedResults[i - 1]$/;"	C	function:mergeConsecutiveResults
private	agent/package.json	/^  "private": true,$/;"	b
private	completions-review-tool/package.json	/^  "private": true,$/;"	b
private	lib/icons/package.json	/^  "private": true,$/;"	b
private	package.json	/^  "private": true,$/;"	b
private	slack/package.json	/^  "private": true,$/;"	b
private	vscode/package.json	/^  "private": true,$/;"	b
private	web/package.json	/^  "private": true,$/;"	b
privateChatTranscript	vscode/src/chat/ChatViewProvider.ts	/^        const privateChatTranscript = this.transcript.toChat()$/;"	C
problemMatcher	.vscode/tasks.json	/^      "problemMatcher": "$tsc-watch",$/;"	s	object:tasks.1
problemMatcher	.vscode/tasks.json	/^      "problemMatcher": ["$tsc-watch"],$/;"	a	object:tasks.0
proc	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const proc = spawn(this.rgPath, rgArgs, {$/;"	C	method:LocalKeywordContextFetcher.fetchFileStats
processCompletions	vscode/src/completions/index.ts	/^function processCompletions($/;"	f
processRgOutput	vscode/src/chat/fastFileFinder.ts	/^function processRgOutput(rgOutput: string, filePaths: string[]): { [filePath: string]: boolean }/;"	f
processedCompletions	vscode/src/completions/index.ts	/^        const processedCompletions = processCompletions(completions, prefix, suffix, multiline, /;"	C
processedCompletions	vscode/src/completions/index.ts	/^    const processedCompletions = completions.map(completion =>$/;"	C	function:processCompletions
program	cli/src/program.ts	/^const program = new Command()$/;"	C
program	vscode/src/non-stop/diff.ts	/^    const program = new Uint16Array((lenA + 1) * (lenB + 1))$/;"	C	function:longestCommonSubsequence
promise	lib/shared/src/chat/bot-response-multiplexer.test.ts	/^    const promise = new Promise<T>(resolve => (resolver = resolve))$/;"	C	function:promise
promise	lib/shared/src/chat/bot-response-multiplexer.test.ts	/^function promise<T>(): [(value: T) => void, Promise<T>] {$/;"	f
promise	vscode/src/test-support.ts	/^    private promise: Promise<T>$/;"	p	class:Rendezvous
promise1	vscode/src/completions/request-manager.test.ts	/^        const promise1 = createRequest(prefix1, provider1)$/;"	C
promise2	vscode/src/completions/request-manager.test.ts	/^        const promise2 = createRequest(prefix2, provider2)$/;"	C
prompt	.vscode/cody.json	/^      "prompt": "Compare the code from opened tabs and explain their relationships.",$/;"	s	object:recipes.Compare Files in Opened Tabs
prompt	.vscode/cody.json	/^      "prompt": "Correct all typos and non-standard usage for the selected code."$/;"	s	object:recipes.Spell Checker
prompt	.vscode/cody.json	/^      "prompt": "Generate 2 or more unit tests for the selected code. Provide me with full, work/;"	s	object:recipes.Generate Multiple Unit Tests
prompt	.vscode/cody.json	/^      "prompt": "Please analyze the code and suggest constructive edits that follow best practic/;"	s	object:recipes.Refactor Code
prompt	.vscode/cody.json	/^      "prompt": "Suggest a commit message based on current diff changes.",$/;"	s	object:recipes.Commit Message for Current Changes
prompt	.vscode/cody.json	/^      "prompt": "Tell me about the most recent error in log and how I can resolve it.",$/;"	s	object:recipes.Debug last error from Cody app
prompt	.vscode/cody.json	/^      "prompt": "Write a detailed README.md introduction for this project. If possible, briefly /;"	s	object:recipes.Generate README.md for Current Directory
prompt	cli/src/client/completions.ts	/^    const { prompt: finalPrompt, contextFiles } = await transcript.getPromptForLastInteraction($/;"	C	function:getCompletionWithContext
prompt	cli/src/commands/repl/index.ts	/^    prompt?: string$/;"	p	interface:ReplCommandOptions
prompt	lib/shared/src/chat/bot-response-multiplexer.ts	/^    public prompt(): string {$/;"	m	class:BotResponseMultiplexer
prompt	lib/shared/src/chat/client.ts	/^        const { prompt, contextFiles } = await transcript.getPromptForLastInteraction(getPreambl/;"	C	function:createClient
prompt	lib/shared/src/chat/recipes/fixup.ts	/^    public static readonly prompt = `$/;"	p	class:Fixup
prompt	lib/shared/src/chat/recipes/inline-chat.ts	/^    public static readonly prompt = `$/;"	p	class:InlineChat
prompt	lib/shared/src/chat/recipes/inline-touch.ts	/^        const prompt = InlineTouch.newFilePrompt$/;"	C
prompt	lib/shared/src/chat/recipes/non-stop.ts	/^    public static readonly prompt = `$/;"	p	class:NonStop
prompt	lib/shared/src/chat/transcript/transcript.test.ts	/^        const { prompt } = await transcript.getPromptForLastInteraction()$/;"	C
prompt	lib/shared/src/chat/transcript/transcript.test.ts	/^        const { prompt } = await transcript.getPromptForLastInteraction(preamble)$/;"	C
prompt	lib/shared/src/chat/useClient.ts	/^            const { prompt, contextFiles } = await transcript.getPromptForLastInteraction($/;"	C
prompt	lib/shared/src/editor/index.ts	/^    prompt: VsCodeMyPromptController$/;"	p	interface:ActiveTextEditorViewControllers
prompt	lib/shared/src/prompt/prompt-mixin.ts	/^    constructor(private readonly prompt: string) {}$/;"	p	class:PromptMixin
prompt	slack/src/mention-handler.ts	/^    const { prompt, contextFiles } = await transcript.getPromptForLastInteraction(SLACK_PREAMBLE/;"	C	function:handleHumanMessage
prompt	vscode/resources/samples/user-cody.json	/^      "prompt": "Compare the code from opened tabs and explain their relationships.",$/;"	s	object:recipes.Compare Files in Opened Tabs
prompt	vscode/resources/samples/user-cody.json	/^      "prompt": "Create at least 3 full, workable unit tests for the selected code. You may impo/;"	s	object:recipes.Generate Multiple Unit Tests
prompt	vscode/resources/samples/user-cody.json	/^      "prompt": "Please analyze the code and suggest constructive edits that follow best practic/;"	s	object:recipes.Refactor Code
prompt	vscode/resources/samples/user-cody.json	/^      "prompt": "Review the selected code and correct any typos and non-standard usage. Ensure t/;"	s	object:recipes.Spell Checker
prompt	vscode/resources/samples/workspace-cody.json	/^      "prompt": "Suggest a commit message based on current diff changes.",$/;"	s	object:recipes.Commit Message for Current Changes
prompt	vscode/resources/samples/workspace-cody.json	/^      "prompt": "Write a detailed README.md introduction for this project. If possible, briefly /;"	s	object:recipes.Generate README.md for Current Directory
prompt	vscode/src/chat/ChatViewProvider.ts	/^                const { prompt, contextFiles } = await this.transcript.getPromptForLastInteracti/;"	C
prompt	vscode/src/chat/ChatViewProvider.ts	/^        const prompt = this.editor.controllers.prompt.find(title)$/;"	C
prompt	vscode/src/chat/ChatViewProvider.ts	/^        const { prompt, contextFiles } = await transcript.getPromptForLastInteraction($/;"	C
prompt	vscode/src/chat/ChatViewProvider.ts	/^        const { prompt: previousMessages } = await this.transcript.getPromptForLastInteraction($/;"	C
prompt	vscode/src/completions/providers/unstable-huggingface.ts	/^        const prompt = `<fim_prefix>${this.options.prefix}<fim_suffix>${this.options.suffix}<fim/;"	C	method:UnstableHuggingFaceProvider.generateCompletions
prompt	vscode/src/main.ts	/^    const controllers = { inline: commentController, fixups: fixup, prompt }$/;"	C
prompt	vscode/src/main.ts	/^    const prompt = new MyPromptController(context, initialConfig.experimentalCustomRecipes)$/;"	C
prompt	vscode/src/my-cody/CustomRecipesBuilder.ts	/^                const prompt = prompts[key]$/;"	C	method:CustomRecipesBuilder.build
prompt	vscode/src/my-cody/types.ts	/^    prompt: string$/;"	p	interface:CodyPrompt
promptChars	vscode/src/completions/providers/anthropic.ts	/^    private promptChars: number$/;"	p	class:AnthropicProvider
promptCommand	vscode/src/my-cody/InputMenu.ts	/^                    const promptCommand = await showPromptCommandInput()$/;"	C
promptCommand	vscode/src/my-cody/InputMenu.ts	/^    const promptCommand = await vscode.window.showInputBox({$/;"	C
promptCommand	vscode/src/my-cody/InputMenu.ts	/^    return promptCommand$/;"	C
promptDescription	vscode/src/my-cody/InputMenu.ts	/^    const promptDescription = await vscode.window.showInputBox({$/;"	C	function:createNewPrompt
promptItems	vscode/src/my-cody/MyPromptController.ts	/^        const promptItems = promptList.map(prompt => ({$/;"	C	method:MyPromptController.quickRecipe
promptList	vscode/src/my-cody/MyPromptController.ts	/^        const promptList = this.getPromptList() || []$/;"	C	method:MyPromptController.quickRecipe
promptMessage	lib/shared/src/chat/recipes/explain-code-detailed.ts	/^        const promptMessage = `Please explain the following ${languageName} code. Be very detail/;"	C	method:ExplainCodeDetailed.getInteraction
promptMessage	lib/shared/src/chat/recipes/explain-code-high-level.ts	/^        const promptMessage = `Explain the following ${languageName} code at a high level. Only /;"	C	method:ExplainCodeHighLevel.getInteraction
promptMessage	lib/shared/src/chat/recipes/find-code-smells.ts	/^        const promptMessage = `${promptPrefix}\\n\\n\\`\\`\\`\\n${truncatedSelectedText}\\n\\`\\/;"	C	method:FindCodeSmells.getInteraction
promptMessage	lib/shared/src/chat/recipes/generate-docstring.ts	/^        const promptMessage = `${promptPrefix}\\n\\`\\`\\`\\n${truncatedSelectedText}\\n\\`\\`\\/;"	C	method:GenerateDocstring.getInteraction
promptMessage	lib/shared/src/chat/recipes/generate-pr-description.ts	/^        const promptMessage = `Summarise these changes:\\n${gitCommitOutput}\\n\\n made while wo/;"	C	method:PrDescription.getInteraction
promptMessage	lib/shared/src/chat/recipes/generate-release-notes.ts	/^        const promptMessage = `Generate release notes by summarising these commits:\\n${truncate/;"	C	method:ReleaseNotes.getInteraction
promptMessage	lib/shared/src/chat/recipes/generate-test.ts	/^        const promptMessage = `Generate a unit test in ${languageName} for the following code:\\/;"	C	method:GenerateTest.getInteraction
promptMessage	lib/shared/src/chat/recipes/git-log.ts	/^        const promptMessage = `Summarize these commits:\\n${truncatedGitLogOutput}\\n\\nProvide /;"	C	method:GitHistory.getInteraction
promptMessage	lib/shared/src/chat/recipes/improve-variable-names.ts	/^        const promptMessage = `Improve the variable names in this ${languageName} code by replac/;"	C	method:ImproveVariableNames.getInteraction
promptMessage	lib/shared/src/chat/recipes/next-questions.ts	/^        const promptMessage = `${promptPrefix}\\n\\n\\`\\`\\`\\n${truncatedText}\\n\\`\\`\\`\\n\\/;"	C	method:NextQuestions.getInteraction
promptMessage	lib/shared/src/chat/recipes/translate.ts	/^        const promptMessage = `Translate the following code into ${toLanguage}\\n\\`\\`\\`\\n${t/;"	C	method:TranslateToLanguage.getInteraction
promptName	vscode/src/my-cody/InputMenu.ts	/^    const promptName = await vscode.window.showInputBox({$/;"	C	function:showPromptNameInput
promptName	vscode/src/my-cody/MyPromptController.ts	/^        const promptName = await showPromptNameInput(this.myPromptStore)$/;"	C	method:MyPromptController.addUserRecipeQuick
promptNoSnippets	vscode/src/completions/providers/anthropic.ts	/^        const promptNoSnippets = messagesToText(messages)$/;"	C	method:AnthropicProvider.emptyPromptLength
promptPrefix	lib/shared/src/chat/recipes/find-code-smells.ts	/^        const promptPrefix = `Find code smells, potential bugs, and unhandled errors in my ${lan/;"	C	method:FindCodeSmells.getInteraction
promptPrefix	lib/shared/src/chat/recipes/generate-docstring.ts	/^        const promptPrefix = `Generate a comment documenting the parameters and functionality of/;"	C	method:GenerateDocstring.getInteraction
promptPrefix	lib/shared/src/chat/recipes/next-questions.ts	/^        const promptPrefix = 'Assume I have an answer to the following request:'$/;"	C	method:NextQuestions.getInteraction
promptSize	vscode/src/my-cody/CustomRecipesBuilder.ts	/^    public promptSize = promptSizeInit$/;"	p	class:CustomRecipesBuilder
promptSizeInit	vscode/src/my-cody/CustomRecipesBuilder.ts	/^const promptSizeInit = {$/;"	C
promptStore	lib/shared/src/chat/recipes/my-prompt.ts	/^    private promptStore = new Map<string, string>()$/;"	p	class:MyPrompt
promptSuffix	lib/shared/src/chat/recipes/find-code-smells.ts	/^        const promptSuffix = `List maximum five of them as a list (if you have more in mind, men/;"	C	method:FindCodeSmells.getInteraction
promptSuffix	lib/shared/src/chat/recipes/next-questions.ts	/^        const promptSuffix =$/;"	C	method:NextQuestions.getInteraction
promptText	lib/shared/src/chat/recipes/fixup.ts	/^        const promptText = Fixup.prompt$/;"	C	method:Fixup.getInteraction
promptText	lib/shared/src/chat/recipes/inline-chat.ts	/^        const promptText = InlineChat.prompt$/;"	C	method:InlineChat.getInteraction
promptText	lib/shared/src/chat/recipes/inline-touch.ts	/^        const promptText = prompt$/;"	C
promptText	lib/shared/src/chat/recipes/my-prompt.ts	/^        const promptText = humanInput || this.promptStore.get(humanInput) || null$/;"	C	method:MyPrompt.getInteraction
promptText	lib/shared/src/chat/recipes/non-stop.ts	/^        const promptText = NonStop.prompt$/;"	C	method:NonStop.getInteraction
promptTitle	vscode/src/my-cody/MyPromptController.ts	/^        const promptTitle = selectedPrompt.label$/;"	C	method:MyPromptController.quickRecipe
promptToUse	cli/src/commands/repl/index.ts	/^        promptToUse = response.value as string$/;"	C	function:run
prompt_creation_title	vscode/src/my-cody/helper.ts	/^export const prompt_creation_title = 'Cody Custom Recipes - New Recipe'$/;"	C
prompts	cli/package.json	/^    "prompts": "^2.4.2"$/;"	s	object:dependencies
prompts	vscode/src/chat/ChatViewProvider.ts	/^            const prompts = this.editor.controllers.prompt.getPromptList()$/;"	C
prompts	vscode/src/my-cody/CustomRecipesBuilder.ts	/^        const prompts = json.recipes$/;"	C	method:CustomRecipesBuilder.build
prompts	vscode/src/my-cody/MyPromptController.ts	/^        const { prompts, premade, starter } = await this.builder.get()$/;"	C	method:MyPromptController.refresh
prompts	vscode/src/my-cody/types.ts	/^    prompts: Map<string, CodyPrompt>$/;"	p	interface:MyPrompts
properties	vscode/package.json	/^              "properties": {$/;"	o	object:contributes.configuration.properties.cody.plugins.config.properties.apiNinjas
properties	vscode/package.json	/^              "properties": {$/;"	o	object:contributes.configuration.properties.cody.plugins.config.properties.confluence
properties	vscode/package.json	/^              "properties": {$/;"	o	object:contributes.configuration.properties.cody.plugins.config.properties.github
properties	vscode/package.json	/^          "properties": {$/;"	o	object:contributes.configuration.properties.cody.plugins.config
properties	vscode/package.json	/^      "properties": {$/;"	o	object:contributes.configuration
properties	vscode/src/configuration-keys.ts	/^const { properties } = packageJson.contributes.configuration$/;"	C
protocolRegexp	vscode/src/configuration.ts	/^    const protocolRegexp = \/^(https?):\\\/\\\/\/$/;"	C	function:sanitizeCodebase
provider	vscode/src/completions/request-manager.test.ts	/^        const provider = createProvider(prefix)$/;"	C
provider1	vscode/src/completions/request-manager.test.ts	/^        const provider1 = createProvider(prefix1)$/;"	C
provider2	vscode/src/completions/request-manager.test.ts	/^        const provider2 = createProvider(prefix2)$/;"	C
providerConfig	vscode/src/completions/completion.test.ts	/^            const providerConfig = createProviderConfig({$/;"	C
providerConfig	vscode/src/completions/index.ts	/^            providerConfig,$/;"	C
providerConfig	vscode/src/completions/index.ts	/^    providerConfig: ProviderConfig$/;"	p	interface:CodyCompletionItemProviderConfig
providerConfig	vscode/src/main.ts	/^    const providerConfig = createCompletionProviderConfig(config, webviewErrorMessenger, complet/;"	C	function:createCompletionsProvider
providerConfig	vscode/test/completions/run-code-completions-on-dataset.ts	/^    const providerConfig = createProviderConfig({$/;"	C	function:initCompletionsProvider
provider_	vscode/src/non-stop/FixupDocumentEditObserver.ts	/^    constructor(private readonly provider_: FixupFileCollection & FixupTextChanged) {}$/;"	p	class:FixupDocumentEditObserver
proxy	lib/shared/src/editor/withPreselectedOptions.ts	/^    const proxy = new Proxy<Editor>(editor, {$/;"	C	function:withPreselectedOptions
public	lib/shared/src/chat/chat.ts	/^    public chat(messages: Message[], cb: CompletionCallbacks, params?: Partial<ChatParameters>):/;"	C
public	lib/shared/src/intent-detector/client.ts	/^    public isCodebaseContextRequired(input: string): Promise<boolean | Error> {$/;"	C
public	lib/shared/src/intent-detector/client.ts	/^    public isEditorContextRequired(input: string): boolean | Error {$/;"	C
public	vscode/src/completions/cache.ts	/^    public add(logId: string, completions: Completion[]): void {$/;"	C	method:CompletionsCache.get
public	vscode/src/editor/vscode-editor.ts	/^    public async replaceSelection(fileName: string, selectedText: string, replacement: string): /;"	C	method:VSCodeEditor.getActiveTextEditorVisibleContent
publicArgument	lib/shared/src/telemetry/EventLogger.ts	/^        const publicArgument = {$/;"	C	method:EventLogger.log
publicArgument	vscode/src/services/EventLogger.ts	/^    const publicArgument = {$/;"	C	function:logEvent
publicPath	completions-review-tool/remix.config.js	/^  publicPath: '\/build\/',$/;"	p	property:module.exports
publish	lib/shared/src/chat/bot-response-multiplexer.ts	/^    public publish(response: string): Promise<void> {$/;"	m	class:BotResponseMultiplexer
publishBufferUpTo	lib/shared/src/chat/bot-response-multiplexer.ts	/^    private publishBufferUpTo(index: number): Promise<void> {$/;"	m	class:BotResponseMultiplexer
publishInProgress_	lib/shared/src/chat/bot-response-multiplexer.ts	/^    private publishInProgress_ = Promise.resolve()$/;"	p	class:BotResponseMultiplexer
publishInTopic	lib/shared/src/chat/bot-response-multiplexer.ts	/^    private async publishInTopic(topic: string, content: string): Promise<void> {$/;"	m	class:BotResponseMultiplexer
publishStep	lib/shared/src/chat/bot-response-multiplexer.ts	/^    private async publishStep(response: string): Promise<void> {$/;"	m	class:BotResponseMultiplexer
published	lib/shared/src/chat/bot-response-multiplexer.test.ts	/^        const [published, publishedResult] = promise<void>()$/;"	C
publishedResult	lib/shared/src/chat/bot-response-multiplexer.test.ts	/^        const [published, publishedResult] = promise<void>()$/;"	C
publisher	vscode/package.json	/^  "publisher": "sourcegraph",$/;"	s
purgeRequireCache	completions-review-tool/server.js	/^function purgeRequireCache() {$/;"	f
quarterFileContext	lib/shared/src/chat/recipes/fixup.ts	/^        const quarterFileContext = Math.floor(MAX_CURRENT_FILE_TOKENS \/ 4)$/;"	C	method:Fixup.getInteraction
quarterFileContext	lib/shared/src/chat/recipes/non-stop.ts	/^        const quarterFileContext = Math.floor(MAX_CURRENT_FILE_TOKENS \/ 4)$/;"	C	method:NonStop.getInteraction
query	lib/shared/src/chat/recipes/context-search.ts	/^        const query = humanChatInput || (await context.editor.showInputBox('Enter your search qu/;"	C	method:ContextSearch.getInteraction
query	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const query = await this.userQueryToKeywordQuery(rawQuery)$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
querySizeBytes	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const querySizeBytes = query$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
queryStems	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const queryStems = query.map(({ stem }) => stem)$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
queryTf	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const queryTf = tf($/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
queryToFileFragments	vscode/src/local-context/filename-context-fetcher.ts	/^    private async queryToFileFragments(query: string): Promise<string[]> {$/;"	m	class:FilenameContextFetcher
queryVec	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const queryVec = tfidf(queryStems, queryTf, idfDict)$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
quickRecipe	vscode/src/my-cody/MyPromptController.ts	/^    public async quickRecipe(): Promise<void> {$/;"	m	class:MyPromptController
range	vscode/src/completions/context-local.ts	/^        const range = new vscode.Range(0, 0, endLine, 0)$/;"	C	function:getRelevantFiles
range	vscode/src/non-stop/FixupController.ts	/^        const range = task.selectionRange$/;"	C
range	vscode/src/non-stop/FixupTypingUI.ts	/^        const range = editor.selection$/;"	C	method:FixupTypingUI.show
range	vscode/src/non-stop/tracked-range.test.ts	/^        const range = rng(pos(2, 7), pos(17, 13))$/;"	C	function:show
range	vscode/src/non-stop/tracked-range.test.ts	/^        const range = rng(pos(2, 7), pos(5, 13))$/;"	C	function:show
range	vscode/src/non-stop/tracked-range.ts	/^    range: vscode.Range$/;"	p	interface:TextChange
range	vscode/src/services/CodeLensProvider.ts	/^        const range = new vscode.Selection(chatSelection.start, new vscode.Position(chatSelectio/;"	C
range	vscode/src/services/CodeLensProvider.ts	/^        const range = this.selectionRange$/;"	C
range	vscode/src/services/DecorationProvider.ts	/^        const range = this.range$/;"	C	method:DecorationProvider.decorate
range	vscode/src/services/DecorationProvider.ts	/^    private range = new vscode.Range(0, 0, 0, 0)$/;"	p	class:DecorationProvider
range	vscode/src/services/InlineAssist.test.ts	/^        const range = await editDocByUri(uri, lines, content)$/;"	C
range	vscode/src/services/InlineAssist.ts	/^    const range = new vscode.Range(lines.start, 0, lines.end, 0)$/;"	C	function:editDocByUri
range	vscode/src/services/InlineController.ts	/^                const range = new vscode.Range($/;"	C
range	vscode/src/services/InlineController.ts	/^            const range = new vscode.Selection(chatSelection.start, new vscode.Position(chatSele/;"	C
range	vscode/src/services/InlineController.ts	/^        const range = newRange || this.selectionRange$/;"	C
rangeDidChange	vscode/src/non-stop/roles.ts	/^    rangeDidChange(task: FixupTask): void$/;"	m	interface:FixupTextChanged
rangeStartLine	vscode/src/services/DecorationProvider.ts	/^        const rangeStartLine = getSingleLineRange(range.start.line)$/;"	C	method:DecorationProvider.decorate
rankCompletions	vscode/src/completions/index.ts	/^function rankCompletions(completions: Completion[]): Completion[] {$/;"	f
rankedResults	vscode/src/completions/index.ts	/^    const rankedResults = rankCompletions(uniqueResults)$/;"	C	function:processCompletions
rawDisplayText	lib/shared/src/chat/recipes/generate-pr-description.ts	/^        const rawDisplayText = 'Generating the PR description'$/;"	C	method:PrDescription.getInteraction
rawDisplayText	lib/shared/src/chat/recipes/generate-release-notes.ts	/^        const rawDisplayText = `Generate release notes for the changes made since ${selectedLabe/;"	C	method:ReleaseNotes.getInteraction
rawDisplayText	lib/shared/src/chat/recipes/git-log.ts	/^                rawDisplayText: 'What changed in my codebase in the last 5 commits?',$/;"	C	method:GitHistory.getInteraction
rawDisplayText	lib/shared/src/chat/recipes/git-log.ts	/^                rawDisplayText: 'What changed in my codebase in the last week?',$/;"	C	method:GitHistory.getInteraction
rawDisplayText	lib/shared/src/chat/recipes/git-log.ts	/^                rawDisplayText: 'What has changed in my codebase in the last day?',$/;"	C	method:GitHistory.getInteraction
rawDisplayText	lib/shared/src/chat/recipes/git-log.ts	/^        const { args: gitArgs, rawDisplayText } = selected$/;"	C	method:GitHistory.getInteraction
rawResponse	lib/shared/src/plugins/built-in/github-issues.ts	/^        const rawResponse = await fetch(url, opts)$/;"	C
rawText	lib/shared/src/chat/useClient.ts	/^            let rawText = ''$/;"	v
react	completions-review-tool/package.json	/^    "react": "^18.2.0",$/;"	s	object:dependencies
react	package.json	/^    "react": "18.1.0",$/;"	s	object:dependencies
react-dom	completions-review-tool/package.json	/^    "react-dom": "^18.2.0",$/;"	s	object:dependencies
react-dom	package.json	/^    "react-dom": "18.1.0"$/;"	s	object:dependencies
react-table	completions-review-tool/package.json	/^    "react-table": "^7.8.0"$/;"	s	object:dependencies
react/forbid-dom-props	.eslintrc.js	/^        'react\/forbid-dom-props': 'off',$/;"	p	property:anonymousObjectc892c5c20205.rules
react/forbid-dom-props	completions-review-tool/.eslintrc.json	/^    "react\/forbid-dom-props": "off",$/;"	s	object:rules
react/forbid-elements	lib/ui/.eslintrc.json	/^    "react\/forbid-elements": "off",$/;"	s	object:rules
react/forbid-elements	vscode/.eslintrc.json	/^    "react\/forbid-elements": "off",$/;"	s	object:rules
react/forbid-elements	web/.eslintrc.json	/^    "react\/forbid-elements": "off"$/;"	s	object:rules
react/jsx-filename-extension	vscode/.eslintrc.json	/^    "react\/jsx-filename-extension": [1, { "extensions": [".ts", ".tsx"] }],$/;"	a	object:rules
react/jsx-filename-extension	web/.eslintrc.json	/^    "react\/jsx-filename-extension": [1, { "extensions": [".ts", ".tsx"] }],$/;"	a	object:rules
react/react-in-jsx-scope	completions-review-tool/.eslintrc.json	/^    "react\/react-in-jsx-scope": "off"$/;"	s	object:rules
react/react-in-jsx-scope	lib/ui/.eslintrc.json	/^    "react\/react-in-jsx-scope": "off",$/;"	s	object:rules
react/react-in-jsx-scope	vscode/.eslintrc.json	/^    "react\/react-in-jsx-scope": "off",$/;"	s	object:rules
react/react-in-jsx-scope	web/.eslintrc.json	/^    "react\/react-in-jsx-scope": "off",$/;"	s	object:rules
read	vscode/src/completions/logger.ts	/^        const read = displayDuration >= READ_TIMEOUT$/;"	C	function:logSuggestionEvent
ready	vscode/src/non-stop/TaskViewProvider.ts	/^        let ready = tasksSize - failedSize$/;"	v
realFile	vscode/src/chat/fastFileFinder.ts	/^        const realFile = line.trim()$/;"	C
rearSpace	vscode/src/completions/text-processing.ts	/^    rearSpace: string$/;"	p	interface:TrimmedString
recipe	lib/shared/src/chat/client.ts	/^        const recipe = getRecipe(recipeId)$/;"	C	function:createClient
recipe	vscode/src/chat/ChatViewProvider.ts	/^        const recipe = getRecipe(recipeId)$/;"	C
recipePicker	vscode/src/my-cody/InputMenu.ts	/^export async function recipePicker(promptList: string[] = []): Promise<string> {$/;"	f
recipeType	vscode/src/my-cody/InputMenu.ts	/^    const recipeType = await vscode.window.showQuickPick(options, { title, placeHolder })$/;"	C
recipes	.vscode/cody.json	/^  "recipes": {$/;"	o
recipes	agent/src/index.test.ts	/^        const recipes = await client.listRecipes()$/;"	C
recipes	lib/shared/src/chat/recipes/agent-recipes.ts	/^    const recipes: Recipe[] = [$/;"	C	function:init
recipes	lib/shared/src/chat/recipes/browser-recipes.ts	/^    const recipes: Recipe[] = [$/;"	C	function:init
recipes	vscode/resources/samples/user-cody.json	/^  "recipes": {$/;"	o
recipes	vscode/resources/samples/workspace-cody.json	/^  "recipes": {$/;"	o
recipes	vscode/src/chat/recipes.ts	/^    const recipes: Recipe[] = [$/;"	C	function:init
recipes	vscode/src/my-cody/types.ts	/^    recipes: { [id: string]: CodyPrompt }$/;"	p	interface:MyPromptsJSON
recommendations	.vscode/extensions.json	/^  "recommendations": [$/;"	a
references	agent/tsconfig.json	/^  "references": [{ "path": "..\/lib\/shared" }],$/;"	a
references	cli/tsconfig.json	/^  "references": [$/;"	a
references	lib/ui/tsconfig.json	/^  "references": [$/;"	a
references	slack/tsconfig.json	/^  "references": [$/;"	a
references	tsconfig.json	/^  "references": [$/;"	a
references	vscode/test/completions/tsconfig.json	/^  "references": [{ "path": "..\/..\/" }],$/;"	a
references	vscode/test/integration/tsconfig.json	/^  "references": [{ "path": "..\/..\/" }],$/;"	a
references	vscode/tsconfig.json	/^  "references": [$/;"	a
references	web/tsconfig.json	/^  "references": [{ "path": "..\/lib\/shared" }, { "path": "..\/lib\/ui" }],$/;"	a
reformatBotMessage	lib/shared/src/chat/viewHelpers.ts	/^export function reformatBotMessage(text: string, prefix: string): string {$/;"	f
refresh	vscode/src/my-cody/MyPromptController.ts	/^    public async refresh(): Promise<void> {$/;"	m	class:MyPromptController
regex	vscode/src/completions/text-processing.ts	/^    const regex = line.match(INDENTATION_REGEX)$/;"	C	function:indentation
regexForTerms	vscode/src/local-context/local-keyword-context-fetcher.ts	/^export function regexForTerms(...terms: Term[]): string {$/;"	f
regexQuery	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const regexQuery = `\\\\b${regexForTerms(...terms)}`$/;"	C	method:LocalKeywordContextFetcher.fetchFileStats
regexQuery	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const rgArgs = [...fileExtRipgrepParams, '--json', regexQuery, '.']$/;"	C	method:LocalKeywordContextFetcher.fetchFileStats
register	vscode/src/main.ts	/^const register = async ($/;"	C
registerHighlightContributions	lib/shared/src/common/markdown/contributions.ts	/^export function registerHighlightContributions(): void {$/;"	f
registerNotification	agent/src/jsonrpc.ts	/^    public registerNotification<M extends NotificationMethodName>(method: M, callback: Notificat/;"	m	class:MessageHandler
registerRecipe	lib/shared/src/chat/recipes/agent-recipes.ts	/^function registerRecipe(id: RecipeID, recipe: Recipe): void {$/;"	f
registerRecipe	lib/shared/src/chat/recipes/browser-recipes.ts	/^export function registerRecipe(id: RecipeID, recipe: Recipe): void {$/;"	f
registerRecipe	vscode/src/chat/recipes.ts	/^function registerRecipe(id: RecipeID, recipe: Recipe): void {$/;"	f
registerRequest	agent/src/jsonrpc.ts	/^    public registerRequest<M extends RequestMethodName>(method: M, callback: RequestCallback<M>)/;"	m	class:MessageHandler
registered	lib/shared/src/common/markdown/contributions.ts	/^let registered = false$/;"	v
registeredRecipes	lib/shared/src/chat/recipes/agent-recipes.ts	/^export const registeredRecipes: { [id in RecipeID]?: Recipe } = {}$/;"	C
registeredRecipes	lib/shared/src/chat/recipes/browser-recipes.ts	/^const registeredRecipes: { [id in RecipeID]?: Recipe } = {}$/;"	C
registeredRecipes	vscode/src/chat/recipes.ts	/^const registeredRecipes: { [id in RecipeID]?: Recipe } = {}$/;"	C
reject	vscode/src/completions/request-manager.ts	/^            reject,$/;"	C	method:RequestManager.request
reject	vscode/src/completions/request-manager.ts	/^    reject(error: Error): void$/;"	m	interface:Request
release	slack/package.json	/^    "release": "pnpm run build && cd dist && git add . && git commit -m wip && git push heroku m/;"	s	object:scripts
release	vscode/package.json	/^    "release": "ts-node .\/scripts\/release.ts",$/;"	s	object:scripts
release:dry-run	vscode/package.json	/^    "release:dry-run": "CODY_RELEASE_DRY_RUN=1 ts-node .\/scripts\/release.ts",$/;"	s	object:scripts
releaseType	vscode/scripts/release.ts	/^const releaseType = process.env.CODY_RELEASE_TYPE$/;"	C
remaining	lib/shared/src/chat/bot-response-multiplexer.ts	/^        const [content, remaining] = splitAt(this.buffer_, index)$/;"	C	method:BotResponseMultiplexer.publishBufferUpTo
remainingBuffer	lib/shared/src/sourcegraph-api/completions/parse.ts	/^    remainingBuffer: string$/;"	p	interface:EventsParseResult
removeChatHistory	vscode/src/services/LocalStorageProvider.ts	/^    public async removeChatHistory(): Promise<void> {$/;"	m	class:LocalStorage
removeHtmlTags	lib/shared/src/plugins/built-in/confluence.ts	/^function removeHtmlTags(input: string): string {$/;"	f
removeHtmlTags	lib/shared/src/plugins/built-in/github-issues.ts	/^function removeHtmlTags(input: string): string {$/;"	f
removeInteractionsSince	lib/shared/src/chat/transcript/index.ts	/^    public removeInteractionsSince(id: string): void {$/;"	m	class:Transcript
removeLastInteraction	lib/shared/src/chat/transcript/index.ts	/^    public removeLastInteraction(): void {$/;"	m	class:Transcript
removeRequest	vscode/src/completions/request-manager.ts	/^    private removeRequest(documentUri: string, request: Request): void {$/;"	m	class:RequestManager
render	node_modules/autopreview/react.js	/^        render() {$/;"	m	class:AutoPreviewForReact._showComponent.Wrapper
render	node_modules/autopreview/vue2.js	/^      render(h) {$/;"	m	variable:AutoPreviewForVue._showComponent.anonymousObject0f447a290305
render	node_modules/autopreview/vue3.js	/^        render() {$/;"	m	variable:AutoPreviewForVue._showComponent.component
render	node_modules/autopreview/vue3.js	/^      render() {$/;"	m	variable:AutoPreviewForVue._showComponent.anonymousObject0f45068a0105
render	vscode/src/non-stop/diff.ts	/^function render(ch: string): string {$/;"	f
renderCodyMarkdown	lib/shared/src/chat/markdown.ts	/^export function renderCodyMarkdown(markdown: string): string {$/;"	f
renderMarkdown	lib/shared/src/common/markdown/markdown.ts	/^export const renderMarkdown = ($/;"	C
replCommand	cli/src/commands/repl/index.ts	/^export const replCommand = new Command('repl')$/;"	C
replaceSelection	lib/shared/src/editor/index.ts	/^    public replaceSelection(_fileName: string, _selectedText: string, _replacement: string): Pro/;"	m	class:NoopEditor
replaceSelection	lib/shared/src/editor/index.ts	/^    replaceSelection(fileName: string, selectedText: string, replacement: string): Promise<void>$/;"	m	interface:Editor
replaceSelection	vscode/src/editor/vscode-editor.ts	/^    public async replaceSelection(fileName: string, selectedText: string, replacement: string): /;"	C	method:VSCodeEditor.getActiveTextEditorVisibleContent
replacement	vscode/src/non-stop/FixupTask.ts	/^    public replacement: string | undefined$/;"	p	class:FixupTask
replyText	vscode/src/services/InlineController.ts	/^            const replyText = dot.repeat((iterations % 3) + 1)$/;"	C
repo	lib/shared/src/plugins/built-in/github-issues.ts	/^                const { org, repo } = api.config?.github ?? {}$/;"	C
repo	slack/src/services/github-client.ts	/^    const { owner, repo, path } = options$/;"	C	function:fetchFileContent
repo	slack/src/services/github-client.ts	/^    repo: string$/;"	p	interface:FetchFileContentOptions
repo	vscode/package.json	/^                "repo": {$/;"	o	object:contributes.configuration.properties.cody.plugins.config.properties.github.properties
repo	vscode/src/chat/utils.ts	/^            const repo = match[3]$/;"	C	function:convertGitCloneURLToCodebaseName
repoId	cli/src/client/context.ts	/^    const repoId = await getRepoId(client, codebase)$/;"	C	function:createCodebaseContext
repoId	cli/src/client/context.ts	/^    const repoId = codebase ? await client.getRepoId(codebase) : null$/;"	C
repoId	lib/shared/src/chat/client.ts	/^    const repoId = config.codebase ? await graphqlClient.getRepoIdIfEmbeddingExists(config.codeb/;"	C	function:createClient
repoId	lib/shared/src/embeddings/client.ts	/^        private repoId: string,$/;"	p	class:SourcegraphEmbeddingsSearchClient
repoId	slack/src/services/codebase-context.ts	/^    const repoId = await getRepoId(codebase)$/;"	C	function:createCodebaseContext
repoId	vscode/src/chat/ChatViewProvider.ts	/^    const repoId = await client.getRepoIdIfEmbeddingExists(codebase)$/;"	C	function:getCodebaseContext
repoId	vscode/src/external-services.ts	/^    const repoId = initialConfig.codebase ? await client.getRepoId(initialConfig.codebase) : nul/;"	C	function:configureExternalServices
repoIds	lib/shared/src/chat/useClient.ts	/^            const repoIds = [...(await codebaseIds)]$/;"	C
repoIds	lib/shared/src/unified-context/client.ts	/^        private repoIds: string[]$/;"	p	class:UnifiedContextFetcherClient
repoName	lib/shared/src/codebase-context/index.ts	/^                const { content, filePath, repoName, revision } = result$/;"	C	method:CodebaseContext.getUnifiedContextMessages
repoName	lib/shared/src/codebase-context/messages.ts	/^    repoName?: string$/;"	p	interface:ContextFile
repoName	lib/shared/src/editor/index.ts	/^    repoName?: string$/;"	p	interface:ActiveTextEditor
repoName	lib/shared/src/editor/index.ts	/^    repoName?: string$/;"	p	interface:ActiveTextEditorSelection
repoName	lib/shared/src/editor/index.ts	/^    repoName?: string$/;"	p	interface:ActiveTextEditorVisibleContent
repoName	lib/shared/src/local-context/index.ts	/^    repoName?: string$/;"	p	interface:ContextResult
repoName	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    repoName?: string$/;"	p	interface:EmbeddingsSearchResult
repoName	lib/shared/src/unified-context/index.ts	/^    repoName: string$/;"	p	interface:FileChunkContext
repoNames	lib/shared/src/chat/useClient.ts	/^            const repoNames = [...codebases]$/;"	C
repos	lib/shared/src/guardrails/index.ts	/^    const repos = attribution.repositories$/;"	C	function:summariseAttribution
repositories	lib/shared/src/chat/transcript/index.ts	/^    repositories: string[]$/;"	p	interface:TranscriptJSONScope
repositories	lib/shared/src/chat/useClient.ts	/^    repositories: string[]$/;"	p	interface:CodyClientScope
repositories	lib/shared/src/chat/useClient.ts	/^    repositories?: string[]$/;"	p	interface:CodyClientScopePartial
repositories	lib/shared/src/guardrails/index.ts	/^    repositories: RepositoryAttribution[]$/;"	p	interface:Attribution
repositories	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    repositories: { nodes: { id: string; name: string }[] }$/;"	p	interface:RepositoryIdsResponse
repositories	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    repositories: { nodes: { id: string; name: string }[] }$/;"	p	interface:RepositoryNamesResponse
repository	agent/package.json	/^  "repository": {$/;"	o
repository	cli/package.json	/^  "repository": {$/;"	o
repository	lib/shared/package.json	/^  "repository": {$/;"	o
repository	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    repository: { id: string } | null$/;"	p	interface:RepositoryIdResponse
repository	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    repository: { id: string; embeddingExists: boolean } | null$/;"	p	interface:RepositoryEmbeddingExistsResponse
repository	lib/ui/package.json	/^  "repository": {$/;"	o
repository	package.json	/^  "repository": {$/;"	o
repository	vscode/package.json	/^  "repository": {$/;"	o
repository	web/package.json	/^  "repository": {$/;"	o
request	.vscode/launch.json	/^      "request": "launch",$/;"	s	object:configurations.0
request	agent/src/jsonrpc.ts	/^    public request<M extends RequestMethodName>(method: M, params: ParamsOf<M>): Promise<ResultO/;"	m	class:MessageHandler
request	lib/shared/src/sourcegraph-api/completions/nodeClient.ts	/^        const request = requestFn($/;"	C	method:SourcegraphNodeCompletionsClient.stream
request	lib/shared/src/sourcegraph-api/graphql/url.ts	/^    request?: string$/;"	p	interface:BuildGraphQLUrlOptions
request	vscode/src/completions/providers/unstable-huggingface.ts	/^        const request = {$/;"	C	method:UnstableHuggingFaceProvider.generateCompletions
request	vscode/src/completions/request-manager.ts	/^        const request: Request = {$/;"	C	method:RequestManager.request
request	vscode/src/completions/request-manager.ts	/^        for (const request of requests) {$/;"	C	method:RequestManager.retestCaches
request	vscode/src/completions/request-manager.ts	/^    public async request($/;"	m	class:RequestManager
request	vscode/test/fixtures/mock-server.ts	/^        const request = req as MockRequest$/;"	C	function:run
requestCounter	vscode/src/completions/completion.test.ts	/^            let requestCounter = 0$/;"	v
requestFn	lib/shared/src/sourcegraph-api/completions/nodeClient.ts	/^        const requestFn = this.completionsEndpoint.startsWith('https:\/\/') ? https.request : ht/;"	C	method:SourcegraphNodeCompletionsClient.stream
requestHandlers	agent/src/jsonrpc.ts	/^    private requestHandlers: Map<RequestMethodName, RequestCallback<any>> = new Map()$/;"	p	class:MessageHandler
requestManager	vscode/src/completions/request-manager.test.ts	/^        const requestManager = new RequestManager(cache)$/;"	C
requestPromise	vscode/src/completions/request-manager.ts	/^        const requestPromise = new Promise<Completion[]>((res, rej) => {$/;"	C	method:RequestManager.request
requestType	vscode/src/services/InlineController.ts	/^        const requestType = fixupInProgress ? 'fix\/touch request' : 'request'$/;"	C
requests	vscode/src/completions/completion.test.ts	/^            const requests: CompletionParameters[] = []$/;"	C
requests	vscode/src/completions/completion.test.ts	/^            const { completions, requests } = await complete($/;"	C
requests	vscode/src/completions/completion.test.ts	/^            const { requests } = await complete(`function bubbleSort() {\\n  ${CURSOR_MARKER}`)$/;"	C
requests	vscode/src/completions/completion.test.ts	/^            const { requests } = await complete(`function bubbleSort() {\\n${CURSOR_MARKER}`)$/;"	C
requests	vscode/src/completions/completion.test.ts	/^            const { requests } = await complete(`function looksLegit() {\\n  ${CURSOR_MARKER}`, /;"	C
requests	vscode/src/completions/completion.test.ts	/^        const { requests } = await complete($/;"	C
requests	vscode/src/completions/completion.test.ts	/^        const { requests } = await complete(`$/;"	C
requests	vscode/src/completions/completion.test.ts	/^        const { requests } = await complete(`foo = ${CURSOR_MARKER}`, undefined, undefined, {$/;"	C
requests	vscode/src/completions/completion.test.ts	/^        const { requests } = await complete(`foo${CURSOR_MARKER}`, undefined, undefined, undefin/;"	C
requests	vscode/src/completions/completion.test.ts	/^        const { requests } = await complete(`foo: ${CURSOR_MARKER} = 123;`)$/;"	C
requests	vscode/src/completions/completion.test.ts	/^        const { requests } = await complete(`if(${CURSOR_MARKER}) {`)$/;"	C
requests	vscode/src/completions/request-manager.ts	/^        const requests = this.requests.get(documentUri)$/;"	C	method:RequestManager.retestCaches
requests	vscode/src/completions/request-manager.ts	/^    private readonly requests: Map<string, Request[]> = new Map()$/;"	p	class:RequestManager
requestsForDocument	vscode/src/completions/request-manager.ts	/^        const requestsForDocument = this.requests.get(documentUri)$/;"	C	method:RequestManager.removeRequest
requiresVerifiedEmail	vscode/src/chat/protocol.ts	/^    requiresVerifiedEmail: boolean$/;"	p	interface:AuthStatus
requiresVerifiedEmail	vscode/src/chat/protocol.ts	/^    requiresVerifiedEmail: false,$/;"	C
requiresVerifiedEmail	vscode/src/chat/utils.test.ts	/^            requiresVerifiedEmail: true,$/;"	C
rerank	lib/shared/src/codebase-context/rerank.ts	/^    public async rerank(userQuery: string, results: ContextResult[]): Promise<ContextResult[]> {$/;"	m	class:LLMReranker
rerank	lib/shared/src/codebase-context/rerank.ts	/^    public rerank(userQuery: string, results: ContextResult[]): Promise<ContextResult[]> {$/;"	m	class:MockReranker
rerank	lib/shared/src/codebase-context/rerank.ts	/^    rerank(userQuery: string, results: ContextResult[]): Promise<ContextResult[]>$/;"	m	interface:Reranker
rerank_	lib/shared/src/codebase-context/rerank.ts	/^    constructor(private rerank_: (userQuery: string, results: ContextResult[]) => Promise<Contex/;"	p	class:MockReranker
rerankedResults	lib/shared/src/codebase-context/index.ts	/^            const rerankedResults = await (this.rerank ? this.rerank(query, combinedResults) : c/;"	C	method:CodebaseContext.getLocalContextMessages
rerankedResults	lib/shared/src/codebase-context/rerank.ts	/^        const rerankedResults = []$/;"	C	method:LLMReranker.rerank
rerankedResults	vscode/src/logged-rerank.ts	/^        const rerankedResults = await reranker.rerank(userQuery, results)$/;"	C	function:getRerankWithLog
reranker	vscode/src/logged-rerank.ts	/^        const reranker = TestSupport.instance.getReranker()$/;"	C	function:getRerankWithLog
reranker	vscode/src/logged-rerank.ts	/^    const reranker = new LLMReranker(chatClient)$/;"	C	function:getRerankWithLog
reranker	vscode/src/test-support.ts	/^    public reranker: Reranker | undefined$/;"	p	class:TestSupport
reset	lib/shared/src/chat/client.ts	/^    reset: () => void$/;"	p	interface:Client
reset	lib/shared/src/chat/transcript/index.ts	/^    public reset(): void {$/;"	m	class:Transcript
resolutions	package.json	/^  "resolutions": {$/;"	o
resolve	vscode/src/completions/request-manager.test.ts	/^    protected resolve: (completion: Completion[]) => void = () => {}$/;"	p	class:MockProvider
resolve	vscode/src/completions/request-manager.ts	/^            resolve,$/;"	C	method:RequestManager.request
resolve	vscode/src/completions/request-manager.ts	/^    resolve(completions: Completion[]): void$/;"	m	interface:Request
resolve	vscode/src/test-support.ts	/^    private resolve: (value: T) => void$/;"	p	class:Rendezvous
resolveJsonModule	tsconfig.base.json	/^    "resolveJsonModule": true,$/;"	b	object:compilerOptions
resolveRequest	vscode/src/completions/request-manager.test.ts	/^    public resolveRequest(completions: string[]): void {$/;"	m	class:MockProvider
resources	vscode/src/chat/ChatViewProvider.ts	/^        const resources = webviewView.webview.asWebviewUri(webviewPath)$/;"	C
resourcesDir	vscode/src/rg.ts	/^        const resourcesDir = path.join(extensionPath, 'resources', 'bin')$/;"	C	function:getRgPath
response	cli/src/client/completions.ts	/^    const response = await client.complete({ messages, ...DEFAULT_CHAT_COMPLETION_PARAMETERS })$/;"	C	function:getCompletion
response	cli/src/commands/repl/index.ts	/^        const response = await prompts({$/;"	C	function:run
response	lib/shared/src/plugins/built-in/url-reader.ts	/^    const response = await fetch(url)$/;"	C	function:fetchURL
response	lib/shared/src/sourcegraph-api/completions/nodeClient.ts	/^            const response = JSON.parse(result) as CompletionResponse$/;"	C	method:SourcegraphNodeCompletionsClient.complete
response	lib/shared/src/sourcegraph-api/completions/nodeClient.ts	/^        const response = await fetch(this.codeCompletionsEndpoint, {$/;"	C	method:SourcegraphNodeCompletionsClient.complete
response	lib/shared/src/sourcegraph-api/graphql/client.ts	/^        const response = await this.fetchSourcegraphAPI<APIResponse<any>>(CURRENT_SITE_CODY_LLM_/;"	C	method:SourcegraphGraphQLAPIClient.getCodyLLMConfiguration
response	lib/shared/src/unified-context/client.ts	/^        const response = await this.client.getCodyContext(this.repoIds, query, codeResultsCount,/;"	C	method:UnifiedContextFetcherClient.getContext
response	slack/src/mention-handler.ts	/^    const response = await slackHelpers.postMessage(IN_PROGRESS_MESSAGE, channel, thread_ts)$/;"	C	function:handleHumanMessage
response	slack/src/services/github-client.ts	/^        const response = await octokit.rest.repos.getContent({ owner, repo, path })$/;"	C	function:fetchFileContent
response	slack/src/slack/helpers.ts	/^    const response = await webClient.chat.postMessage({$/;"	C	function:postMessage
response	slack/src/slack/helpers.ts	/^    const response = await webClient.chat.update({$/;"	C	function:updateMessage
response	slack/src/slack/helpers.ts	/^    const response = await webClient.chat.update({$/;"	C	function:updateMessageWithFileList
response	vscode/src/completions/providers/unstable-codegen.ts	/^        const response = await fetch(this.serverEndpoint, {$/;"	C	method:UnstableCodeGenProvider.generateCompletions
response	vscode/src/completions/providers/unstable-huggingface.ts	/^        const response = await fetch(this.serverEndpoint, {$/;"	C	method:UnstableHuggingFaceProvider.generateCompletions
response	vscode/src/notifications/index.ts	/^    const response = await vscode.window.showInformationMessage($/;"	C
response	vscode/src/services/LocalAppDetector.ts	/^            const response = await fetch(`${LOCAL_APP_URL.href}__version`)$/;"	C
response	vscode/src/services/StatusBar.ts	/^                    const response = await (requiresReload$/;"	C	function:createStatusBar
response	vscode/test/fixtures/mock-server.ts	/^        const response = request.body.messages[lastHumanMessageIndex].text.includes(FIXUP_PROMPT/;"	C	function:run
responseHandlers	agent/src/jsonrpc.ts	/^    private responseHandlers: Map<Id, (params: any) => void> = new Map()$/;"	p	class:MessageHandler
responseMultiplexer	lib/shared/src/chat/recipes/recipe.ts	/^    responseMultiplexer: BotResponseMultiplexer$/;"	p	interface:RecipeContext
responsePendingInterval	vscode/src/services/InlineController.ts	/^    private responsePendingInterval: NodeJS.Timeout | null = null$/;"	p	class:InlineController
responsePercentage	vscode/src/completions/index.ts	/^            responsePercentage = 0.1,$/;"	C
responsePercentage	vscode/src/completions/index.ts	/^    responsePercentage?: number$/;"	p	interface:CodyCompletionItemProviderConfig
responsePercentage	vscode/src/completions/providers/provider.ts	/^    responsePercentage: number$/;"	p	interface:ProviderOptions
responsePrefix	lib/shared/src/chat/client.ts	/^        const responsePrefix = interaction.getAssistantMessage().prefix ?? ''$/;"	C	function:createClient
responsePrefix	lib/shared/src/chat/useClient.ts	/^            const responsePrefix = interaction.getAssistantMessage().prefix ?? ''$/;"	C
responseTokens	vscode/src/completions/providers/anthropic.ts	/^    private responseTokens: number$/;"	p	class:AnthropicProvider
responses	vscode/src/completions/providers/anthropic.ts	/^        const responses = await batchCompletions(this.completionsClient, args, this.options.n, a/;"	C	method:AnthropicProvider.generateCompletions
responses	vscode/src/completions/utils.ts	/^    const responses: Promise<CompletionResponse>[] = []$/;"	C	function:batchCompletions
responses	vscode/test/fixtures/mock-server.ts	/^const responses = {$/;"	C
restoreTranscriptFromSlackThread	slack/src/mention-handler.ts	/^async function restoreTranscriptFromSlackThread($/;"	f
result	agent/src/jsonrpc.ts	/^    result?: ResultOf<M>$/;"	p	interface:ResponseMessage
result	lib/shared/src/codebase-context/index.ts	/^        const result = sortedResults[i]$/;"	C	function:mergeConsecutiveResults
result	lib/shared/src/codebase-context/index.ts	/^        for (const result of merged) {$/;"	C	method:CodebaseContext.mergeContextResults
result	lib/shared/src/codebase-context/index.ts	/^    for (const result of results) {$/;"	C
result	lib/shared/src/codebase-context/rerank.ts	/^        for (const result of results) {$/;"	C	method:LLMReranker.rerank
result	lib/shared/src/codebase-context/rerank.ts	/^    const result = await parseStringPromise(xml)$/;"	C	function:parseXml
result	lib/shared/src/guardrails/client.ts	/^        const result = await this.client.searchAttribution(snippet)$/;"	C	method:SourcegraphGuardrailsClient.searchAttribution
result	lib/shared/src/plugins/built-in/url-reader.ts	/^    const result = {$/;"	C	function:fetchURL
result	lib/shared/src/plugins/built-in/url-reader.ts	/^    return result$/;"	C	function:fetchURL
result	lib/shared/src/sourcegraph-api/completions/nodeClient.ts	/^        const result = await response.text()$/;"	C	method:SourcegraphNodeCompletionsClient.complete
result	slack/src/slack/helpers.ts	/^    const result = await webClient.conversations.info({$/;"	C	function:getSlackChannelName
result	slack/src/slack/helpers.ts	/^    const result = await webClient.conversations.replies({$/;"	C	function:getThreadMessages
result	vscode/src/chat/ChatViewProvider.ts	/^            const result = await this.getPluginsContext(humanChatInput)$/;"	C
result	vscode/src/chat/ChatViewProvider.ts	/^        const result = await annotateAttribution(this.guardrails, text)$/;"	C
result	vscode/src/completions/cache.ts	/^        const result = this.cache.get(trimmedPrefix)$/;"	C	method:CompletionsCache.get
result	vscode/src/completions/text-processing.ts	/^    const [result] = completion.split(CLOSING_CODE_TAG)$/;"	C	function:extractFromCodeBlock
result	vscode/src/services/InlineAssist.test.ts	/^        const result = updateRangeOnDocChange(cur, change, '')$/;"	C
result	vscode/src/services/InlineAssist.test.ts	/^        const result = updateRangeOnDocChange(cur, change, changeText)$/;"	C
result	vscode/test/fixtures/mock-server.ts	/^    const result = await around()$/;"	C	function:run
result	vscode/test/integration/helpers.ts	/^    const result = await vscode.commands.executeCommand<T>(command, ...args)$/;"	C	function:ensureExecuteCommand
resultContext	lib/shared/src/chat/recipes/context-search.ts	/^        const resultContext = await codebaseContext.getSearchResults(text, numResults)$/;"	C	method:ContextSearch.displaySearchResults
results	lib/shared/src/chat/useClient.ts	/^        const results = await graphqlClient.getRepoIds(codebases)$/;"	C
results	lib/shared/src/codebase-context/index.ts	/^        const results = await this.filenames.getContext(query, options.numCodeResults + options./;"	C	method:CodebaseContext.getFilenameSearchResults
results	lib/shared/src/codebase-context/index.ts	/^        const results = await this.keywords.getContext(query, options.numCodeResults + options.n/;"	C	method:CodebaseContext.getKeywordSearchResults
results	lib/shared/src/codebase-context/index.ts	/^        const results = await this.unifiedContextFetcher.getContext($/;"	C	method:CodebaseContext.getUnifiedContextMessages
results	lib/shared/src/codebase-context/index.ts	/^        const results = resultsGroupedByFile.get(result.fileName)$/;"	C
results	vscode/src/completions/context-embeddings.ts	/^    const { results } = await codebaseContext.getSearchResults(text, {$/;"	C	function:fetchAndSaveEmbeddings
results	vscode/src/completions/index.ts	/^    const results = processCompletions(cachedCompletions.completions, prefix, suffix, multiline,/;"	C	function:handleCacheHit
results	vscode/src/local-context/filename-context-fetcher.ts	/^        const results = await Promise.all($/;"	C	method:FilenameContextFetcher.getContext
results	vscode/src/local-context/filename-context-fetcher.ts	/^        const results = await new Promise<string>((resolve, reject) => {$/;"	C	method:FilenameContextFetcher.getFilenames
results	vscode/test/completions/run-code-completions-on-dataset.ts	/^    const results: CompletionResult[] = []$/;"	C	function:generateCompletionsForDataset
resultsGroupedByFile	lib/shared/src/codebase-context/index.ts	/^    const resultsGroupedByFile = new Map<string, EmbeddingsSearchResult[]>()$/;"	C
resultsMap	lib/shared/src/codebase-context/rerank.ts	/^        const resultsMap = Object.fromEntries(results.map(r => [r.fileName, r]))$/;"	C	method:LLMReranker.rerank
resultsToMessages	lib/shared/src/codebase-context/index.ts	/^function resultsToMessages(results: ContextResult[]): ContextMessage[] {$/;"	f
ret	vscode/src/completions/history.ts	/^        const ret: HistoryItem[] = []$/;"	C
ret	vscode/src/completions/providers/anthropic.ts	/^        const ret = responses.map(resp => {$/;"	C	method:AnthropicProvider.generateCompletions
ret	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const ret = [...terms.values()]$/;"	C	method:LocalKeywordContextFetcher.userQueryToKeywordQuery
retestCaches	vscode/src/completions/request-manager.ts	/^    private retestCaches(documentUri: string): void {$/;"	m	class:RequestManager
return	cli/src/client/index.ts	/^    return { codebaseContext, intentDetector, completionsClient }$/;"	C	function:getClient
return	lib/shared/src/chat/recipes/helpers.ts	/^    return selectedTextContext.concat($/;"	C	function:getContextMessagesFromSelection
return	lib/shared/src/intent-detector/client.ts	/^        return this.client.isContextRequiredForQuery(input)$/;"	C
return	lib/shared/src/plugins/built-in/url-reader.ts	/^    return result$/;"	C	function:fetchURL
return	vscode/src/editor/vscode-editor.ts	/^        return {$/;"	C	method:VSCodeEditor.getActiveTextEditorVisibleContent
return	vscode/src/my-cody/InputMenu.ts	/^    return promptCommand$/;"	C
return	vscode/src/services/InlineController.ts	/^        return threads$/;"	C
returningChatMessages	lib/shared/src/chat/useClient.ts	/^    const returningChatMessages = useMemo($/;"	C
reveal	.vscode/tasks.json	/^        "reveal": "never"$/;"	s	object:tasks.0.presentation
revision	lib/shared/src/codebase-context/index.ts	/^                const { content, filePath, repoName, revision } = result$/;"	C	method:CodebaseContext.getUnifiedContextMessages
revision	lib/shared/src/codebase-context/messages.ts	/^    revision?: string$/;"	p	interface:ContextFile
revision	lib/shared/src/editor/index.ts	/^    revision?: string$/;"	p	interface:ActiveTextEditor
revision	lib/shared/src/editor/index.ts	/^    revision?: string$/;"	p	interface:ActiveTextEditorSelection
revision	lib/shared/src/editor/index.ts	/^    revision?: string$/;"	p	interface:ActiveTextEditorVisibleContent
revision	lib/shared/src/local-context/index.ts	/^    revision?: string$/;"	p	interface:ContextResult
revision	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    revision?: string$/;"	p	interface:EmbeddingsSearchResult
revision	lib/shared/src/unified-context/index.ts	/^    revision: string$/;"	p	interface:FileChunkContext
rgArgs	vscode/src/local-context/filename-context-fetcher.ts	/^        const rgArgs = [$/;"	C	method:FilenameContextFetcher.getFilenames
rgArgs	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                    const rgArgs = [$/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
rgArgs	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const rgArgs = [...fileExtRipgrepParams, '--json', regexQuery, '.']$/;"	C	method:LocalKeywordContextFetcher.fetchFileStats
rgOutput	vscode/src/chat/fastFileFinder.ts	/^    const rgOutput = await executeRg(rgPath, rootPath, searchPattern, maxDepth)$/;"	C	function:fastFilesExist
rgPath	vscode/src/local-context/filename-context-fetcher.ts	/^        private rgPath: string,$/;"	p	class:FilenameContextFetcher
rgPath	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        private rgPath: string,$/;"	p	class:LocalKeywordContextFetcher
rgPath	vscode/src/main.ts	/^    const rgPath = await getRgPath(context.extensionPath)$/;"	C	function:start
rgPath	vscode/test/integration/local-search.test.ts	/^        const rgPath = await getRgPath(path.join(__dirname, '..', '..', '..', '..'))$/;"	C
rng	vscode/src/non-stop/tracked-range.test.ts	/^function rng(start: Position, end: Position): Range {$/;"	f
root	vscode/index.html	/^        <div id="root"><\/div>$/;"	I
root	vscode/src/chat/ChatViewProvider.ts	/^        const root = vscode.Uri.joinPath(webviewPath, 'index.html')$/;"	C
root	web/index.html	/^		<div id="root"><\/div>$/;"	I
rootDir	agent/tsconfig.json	/^    "rootDir": ".",$/;"	s	object:compilerOptions
rootDir	cli/tsconfig.json	/^    "rootDir": "src",$/;"	s	object:compilerOptions
rootDir	completions-review-tool/tsconfig.json	/^    "rootDir": ".",$/;"	s	object:compilerOptions
rootDir	lib/shared/tsconfig.json	/^    "rootDir": "src",$/;"	s	object:compilerOptions
rootDir	lib/ui/tsconfig.json	/^    "rootDir": "src",$/;"	s	object:compilerOptions
rootDir	slack/tsconfig.json	/^    "rootDir": ".",$/;"	s	object:compilerOptions
rootDir	tsconfig.base.json	/^    "rootDir": "."$/;"	s	object:compilerOptions
rootDir	vscode/scripts/tsconfig.json	/^    "rootDir": ".",$/;"	s	object:compilerOptions
rootDir	vscode/test/completions/tsconfig.json	/^    "rootDir": ".",$/;"	s	object:compilerOptions
rootDir	vscode/test/integration/tsconfig.json	/^    "rootDir": ".",$/;"	s	object:compilerOptions
rootDir	vscode/tsconfig.json	/^    "rootDir": ".",$/;"	s	object:compilerOptions
rootDir	web/tsconfig.json	/^    "rootDir": ".",$/;"	s	object:compilerOptions
rootDirPath	vscode/src/my-cody/MyPromptController.ts	/^        const rootDirPath = isUserType ? this.tools.getUserInfo()?.homeDir : this.tools.getUserI/;"	C	method:MyPromptController.addJSONFile
rootDirPath	vscode/src/my-cody/MyPromptController.ts	/^        const rootDirPath = this.tools.getUserInfo()?.homeDir$/;"	C	method:MyPromptController.save
rootDirUri	vscode/src/my-cody/helper.ts	/^    const rootDirUri = vscode.Uri.parse(rootDirPath)$/;"	C	function:constructFileUri
rootPath	vscode/src/chat/ChatViewProvider.ts	/^                const rootPath = this.editor.getWorkspaceRootPath()$/;"	C
rootPath	vscode/src/local-context/filename-context-fetcher.ts	/^        const rootPath = this.editor.getWorkspaceRootPath()$/;"	C	method:FilenameContextFetcher.getContext
rootPath	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const rootPath = this.editor.getWorkspaceRootPath()$/;"	C	method:LocalKeywordContextFetcher.getContext
rootPath	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const rootPath = this.editor.getWorkspaceRootPath()$/;"	C	method:LocalKeywordContextFetcher.getSearchContext
rootPath	vscode/src/my-cody/MyToolsProvider.ts	/^const rootPath = vscode.workspace.workspaceFolders?.[0].uri.fsPath$/;"	C
rowTopic	lib/shared/src/chat/bot-response-multiplexer.test.ts	/^        const rowTopic: string[] = []$/;"	C
rules	.eslintrc.js	/^      rules: {$/;"	p	variable:anonymousObjectc892c5c20105
rules	.eslintrc.js	/^      rules: {$/;"	p	variable:anonymousObjectc892c5c20205
rules	.eslintrc.js	/^      rules: {$/;"	p	variable:anonymousObjectc892c5c20305
rules	.stylelintrc.json	/^  "rules": {$/;"	o
rules	agent/.eslintrc.json	/^  "rules": {$/;"	o
rules	cli/.eslintrc.json	/^  "rules": {$/;"	o
rules	cli/src/client/preamble.ts	/^    const preamble = [actions, rules]$/;"	C	function:getPreamble
rules	cli/src/client/preamble.ts	/^const rules = `In your responses, obey the following rules:$/;"	C
rules	completions-review-tool/.eslintrc.json	/^  "rules": {$/;"	o
rules	lib/shared/.eslintrc.json	/^  "rules": {$/;"	o
rules	lib/shared/src/chat/preamble.ts	/^    const rulesText = customPreamble?.rules ?? rules$/;"	C	function:getPreamble
rules	lib/shared/src/chat/preamble.ts	/^    rules: string$/;"	p	interface:Preamble
rules	lib/shared/src/chat/preamble.ts	/^const rules = `In your responses, obey the following rules:$/;"	C
rules	lib/ui/.eslintrc.json	/^  "rules": {$/;"	o
rules	slack/.eslintrc.json	/^  "rules": {$/;"	o
rules	slack/src/slack/preamble.ts	/^    const preamble = [actions, rules]$/;"	C	function:getSlackPreamble
rules	slack/src/slack/preamble.ts	/^const rules = `In your responses, obey the following rules:$/;"	C
rules	vscode/.eslintrc.json	/^  "rules": {$/;"	o
rules	vscode/src/my-cody/types.ts	/^    rules: string$/;"	p	interface:CodyPromptPremade
rules	web/.eslintrc.json	/^  "rules": {$/;"	o
rulesText	lib/shared/src/chat/preamble.ts	/^    const preamble = [actionsText, rulesText]$/;"	C	function:getMultiRepoPreamble
rulesText	lib/shared/src/chat/preamble.ts	/^    const preamble = [actionsText, rulesText]$/;"	C	function:getPreamble
rulesText	lib/shared/src/chat/preamble.ts	/^    const rulesText = customPreamble?.rules ?? multiRepoRules$/;"	C	function:getMultiRepoPreamble
rulesText	lib/shared/src/chat/preamble.ts	/^    const rulesText = customPreamble?.rules ?? rules$/;"	C	function:getPreamble
run	cli/src/commands/commit/command.ts	/^export async function run($/;"	f
run	cli/src/commands/repl/index.ts	/^async function run({ prompt }: ReplCommandOptions, program: Command): Promise<void> {$/;"	f
run	vscode/test/fixtures/mock-server.ts	/^export async function run<T>(around: () => Promise<T>): Promise<T> {$/;"	f
run	vscode/test/integration/index.ts	/^export function run(): Promise<void> {$/;"	f
runCommand	vscode/src/my-cody/MyToolsProvider.ts	/^    public runCommand(command: string, args: string[] = [], runFromWSRoot = true): string {$/;"	m	class:MyToolsProvider
runFileSystemCommand	vscode/src/my-cody/MyToolsProvider.ts	/^    public async runFileSystemCommand(command: string): Promise<void> {$/;"	m	class:MyToolsProvider
runIdleRecipe	vscode/src/non-stop/roles.ts	/^    runIdleRecipe(recipeId: RecipeID, humanChatInput?: string): Promise<void>$/;"	m	interface:IdleRecipeRunner
runOn	.vscode/tasks.json	/^      "runOptions": { "runOn": "folderOpen", "instanceLimit": 1 },$/;"	s	object:tasks.0.runOptions
runOptions	.vscode/tasks.json	/^      "runOptions": { "runOn": "folderOpen", "instanceLimit": 1 },$/;"	o	object:tasks.0
runPluginFunctions	lib/shared/src/plugins/api/index.ts	/^export const runPluginFunctions = async ($/;"	C
runtimeExecutable	.vscode/launch.json	/^      "runtimeExecutable": "${execPath}",$/;"	s	object:configurations.0
sameLinePrefix	vscode/src/completions/index.ts	/^        const sameLinePrefix = docContext.prevLine$/;"	C
sameLineSuffix	vscode/src/completions/index.ts	/^        const sameLineSuffix = suffix.slice(0, suffix.indexOf('\\n'))$/;"	C
sampleFileName	vscode/src/my-cody/helper.ts	/^    const sampleFileName = isUserType ? 'user-cody.json' : 'workspace-cody.json'$/;"	C	function:createJSONFile
sampleIndex	vscode/test/completions/run-code-completions-on-dataset.ts	/^const sampleIndex = process.env.SAMPLE_INDEX ? parseInt(process.env.SAMPLE_INDEX, 10) : null$/;"	C
sanitizeCodebase	vscode/src/configuration.ts	/^function sanitizeCodebase(codebase: string | undefined): string {$/;"	f
sanitizeContent	lib/shared/src/chat/recipes/context-search.ts	/^    private sanitizeContent(content: string): string {$/;"	m	class:ContextSearch
sanitizeServerEndpoint	vscode/src/configuration.ts	/^function sanitizeServerEndpoint(serverEndpoint: string): string {$/;"	f
save	vscode/src/my-cody/MyPromptController.ts	/^    public async save(id: string, prompt: CodyPrompt, deletePrompt = false): Promise<void> {$/;"	m	class:MyPromptController
saveEndpoint	vscode/src/services/LocalStorageProvider.ts	/^    public async saveEndpoint(endpoint: string): Promise<void> {$/;"	m	class:LocalStorage
saveJSONFile	vscode/src/my-cody/helper.ts	/^export async function saveJSONFile(context: string, rootDirPath: string, isSaveMode = false): Pr/;"	f
scenario	vscode/src/non-stop/tracked-range.test.ts	/^    const scenario = parse(spec)$/;"	C	function:show
scheduleCallback	vscode/src/non-stop/FixupScheduler.ts	/^    private scheduleCallback(): void {$/;"	m	class:FixupScheduler
scheduleIdle	vscode/src/non-stop/FixupScheduler.ts	/^    public scheduleIdle<T>(worker: () => T): Promise<T> {$/;"	m	class:FixupScheduler
scheduleIdle	vscode/src/non-stop/roles.ts	/^    scheduleIdle<T>(callback: () => T): Promise<T>$/;"	m	interface:FixupIdleTaskRunner
scheduleVectorUpdate	slack/src/services/local-vector-store.ts	/^function scheduleVectorUpdate(vectorStore: HNSWLib, timeout: number) {$/;"	f
scheduled_	vscode/src/non-stop/FixupScheduler.ts	/^    private scheduled_ = false$/;"	p	class:FixupScheduler
scope	lib/shared/src/chat/transcript/index.ts	/^    scope?: TranscriptJSONScope$/;"	p	interface:TranscriptJSON
scope	lib/shared/src/chat/useClient.ts	/^    readonly scope: CodyClientScope$/;"	p	interface:CodyClient
scope	lib/shared/src/chat/useClient.ts	/^    scope?: CodyClientScope$/;"	p	interface:CodyClientProps
scope	vscode/src/configuration.ts	/^    const scope =$/;"	C	function:migrateDeprecatedConfigOption
score	vscode/src/completions/bestJaccardMatch.ts	/^            const score = jaccardDistance(targetCount, windowCount, bothCount)$/;"	C	function:bestJaccardMatch
score	vscode/src/completions/bestJaccardMatch.ts	/^    score: number$/;"	p	interface:JaccardMatch
score	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    let score = 0$/;"	v
scoreComponents	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    const scoreComponents: { [term: string]: number } = {}$/;"	C
script	.vscode/tasks.json	/^      "script": "build:dev",$/;"	s	object:tasks.1
scripts	agent/package.json	/^  "scripts": {$/;"	o
scripts	cli/package.json	/^  "scripts": {$/;"	o
scripts	completions-review-tool/package.json	/^  "scripts": {$/;"	o
scripts	lib/icons/package.json	/^  "scripts": {$/;"	o
scripts	lib/shared/package.json	/^  "scripts": {$/;"	o
scripts	lib/shared/src/chat/recipes/my-prompt.ts	/^            const scripts = packageJson.scripts$/;"	C	method:MyPrompt.getPackageJsonContext
scripts	lib/ui/package.json	/^  "scripts": {$/;"	o
scripts	node_modules/autopreview/package.json	/^  "scripts": {$/;"	o
scripts	package.json	/^  "scripts": {$/;"	o
scripts	slack/package.json	/^  "scripts": {$/;"	o
scripts	vscode/package.json	/^  "scripts": {$/;"	o
scripts	web/package.json	/^  "scripts": {$/;"	o
search	lib/shared/src/embeddings/client.ts	/^    public async search($/;"	m	class:SourcegraphEmbeddingsSearchClient
search	lib/shared/src/embeddings/index.ts	/^    search(query: string, codeResultsCount: number, textResultsCount: number): Promise<Embedding/;"	m	interface:EmbeddingsSearch
search.exclude	.vscode/settings.json	/^  "search.exclude": {$/;"	o
searchAttribution	lib/shared/src/guardrails/client.ts	/^    public async searchAttribution(snippet: string): Promise<Attribution | Error> {$/;"	m	class:SourcegraphGuardrailsClient
searchAttribution	lib/shared/src/guardrails/index.ts	/^    searchAttribution(snippet: string): Promise<Attribution | Error>$/;"	m	interface:Guardrails
searchDuration	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const searchDuration = performance.now() - startTime$/;"	C	method:LocalKeywordContextFetcher.getContext
searchErrors	vscode/src/chat/ChatViewProvider.ts	/^        const searchErrors = this.codebaseContext.getEmbeddingSearchErrors()$/;"	C
searchGitHub	lib/shared/src/plugins/built-in/github-issues.ts	/^const searchGitHub = async ($/;"	C
searchOptions	lib/shared/src/plugins/built-in/confluence.ts	/^    const searchOptions = {$/;"	C
searchPattern	vscode/src/chat/fastFileFinder.ts	/^    const searchPattern = constructSearchPattern(filePaths)$/;"	C	function:fastFilesExist
searchPattern	vscode/src/local-context/filename-context-fetcher.ts	/^        const searchPattern = '{' + filenameFragments.map(fragment => `**${fragment}**`).join(',/;"	C	method:FilenameContextFetcher.getFilenames
searchPatternParts	vscode/src/chat/fastFileFinder.ts	/^    const searchPatternParts = filePaths.map(filePath => {$/;"	C	function:constructSearchPattern
searchResponse	lib/shared/src/plugins/built-in/confluence.ts	/^        const searchResponse = await fetch(searchUrl, searchOptions)$/;"	C
searchUrl	lib/shared/src/plugins/built-in/confluence.ts	/^    const searchUrl = `${opts.baseUrl}\/wiki\/rest\/api\/search?cql=${encodeURIComponent(`text ~/;"	C
searchWiki	lib/shared/src/plugins/built-in/confluence.ts	/^const searchWiki = async (query: string, opts: { email: string; token: string; baseUrl: string }/;"	C
secondInteraction	lib/shared/src/chat/transcript/transcript.test.ts	/^        const secondInteraction = await chatQuestionRecipe.getInteraction($/;"	C
secretStorage	vscode/src/main.ts	/^    const secretStorage =$/;"	C	function:start
secretStorage	vscode/src/services/SecretStorageProvider.ts	/^    constructor(private secretStorage: vscode.SecretStorage) {}$/;"	p	class:VSCodeSecretStorage
secretStorage	vscode/test/completions/run-code-completions-on-dataset.ts	/^    const secretStorage = new InMemorySecretStorage()$/;"	C	function:initCompletionsProvider
seen	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    const seen = new Set<string>()$/;"	C
selected	lib/shared/src/chat/recipes/generate-release-notes.ts	/^        const selected = Object.fromEntries(quickPickItems.map(({ label, args }) => [label, { ar/;"	C	method:ReleaseNotes.getInteraction
selected	lib/shared/src/chat/recipes/git-log.ts	/^        const selected = Object.fromEntries($/;"	C	method:GitHistory.getInteraction
selected	vscode/src/my-cody/MyPromptController.ts	/^        const selected = await showCustomRecipeMenu()$/;"	C	method:MyPromptController.menu
selectedContext	lib/shared/src/chat/recipes/inline-touch.ts	/^        const selectedContext = ChatQuestion.getEditorSelectionContext(selection)$/;"	C
selectedEndpoint	vscode/src/services/AuthProvider.ts	/^                const selectedEndpoint = item.uri$/;"	C
selectedFile	vscode/src/my-cody/MyToolsProvider.ts	/^                const selectedFile = await vscode.window.showOpenDialog({$/;"	C	method:MyToolsProvider.runFileSystemCommand
selectedItem	vscode/src/services/FeedbackOptions.ts	/^    const selectedItem = await vscode.window.showQuickPick(FeedbackOptionItems, FeedbackQuickPic/;"	C
selectedLabel	lib/shared/src/chat/recipes/generate-release-notes.ts	/^        const selectedLabel = await context.editor.showQuickPick(quickPickItems.map(e => e.label/;"	C	method:ReleaseNotes.getInteraction
selectedLabel	lib/shared/src/chat/recipes/git-log.ts	/^        const selectedLabel = await context.editor.showQuickPick(items.map(e => e.label))$/;"	C	method:GitHistory.getInteraction
selectedOption	vscode/src/my-cody/InputMenu.ts	/^    const selectedOption = await vscode.window.showQuickPick(options, inputOptions)$/;"	C	function:showCustomRecipeMenu
selectedPrompt	vscode/src/my-cody/MyPromptController.ts	/^        const selectedPrompt = await vscode.window.showQuickPick(promptItems, options)$/;"	C	method:MyPromptController.quickRecipe
selectedRecipe	vscode/src/my-cody/InputMenu.ts	/^    const selectedRecipe = (await vscode.window.showQuickPick(promptList)) || ''$/;"	C	function:recipePicker
selectedText	lib/shared/src/chat/recipes/non-stop.ts	/^        const { instruction, fileName, precedingText, selectedText, followingText } = taskParame/;"	C	method:NonStop.getInteraction
selectedText	lib/shared/src/editor/index.ts	/^    selectedText: string$/;"	p	interface:ActiveTextEditorSelection
selectedText	vscode/src/non-stop/FixupController.ts	/^        const selectedText = document.getText(task.selectionRange)$/;"	C
selectedTextContext	lib/shared/src/chat/recipes/helpers.ts	/^    const selectedTextContext = await codebaseContext.getContextMessages(selectedText, {$/;"	C	function:getContextMessagesFromSelection
selectedTextContext	lib/shared/src/chat/recipes/helpers.ts	/^    return selectedTextContext.concat($/;"	C	function:getContextMessagesFromSelection
selection	agent/src/protocol.ts	/^    selection?: Range$/;"	p	interface:TextDocument
selection	lib/shared/src/chat/context.ts	/^    selection?: ActiveTextEditorSelectionRange$/;"	p	interface:ChatContextStatus
selection	lib/shared/src/chat/recipes/explain-code-detailed.ts	/^        const selection = context.editor.getActiveTextEditorSelectionOrEntireFile()$/;"	C	method:ExplainCodeDetailed.getInteraction
selection	lib/shared/src/chat/recipes/explain-code-high-level.ts	/^        const selection = context.editor.getActiveTextEditorSelectionOrEntireFile()$/;"	C	method:ExplainCodeHighLevel.getInteraction
selection	lib/shared/src/chat/recipes/find-code-smells.ts	/^        const selection = context.editor.getActiveTextEditorSelectionOrEntireFile()$/;"	C	method:FindCodeSmells.getInteraction
selection	lib/shared/src/chat/recipes/fixup.ts	/^        const selection = context.editor.getActiveTextEditorSelection() || context.editor.contro/;"	C	method:Fixup.getInteraction
selection	lib/shared/src/chat/recipes/generate-docstring.ts	/^        const selection = context.editor.getActiveTextEditorSelectionOrEntireFile()$/;"	C	method:GenerateDocstring.getInteraction
selection	lib/shared/src/chat/recipes/generate-test.ts	/^        const selection = context.editor.getActiveTextEditorSelectionOrEntireFile()$/;"	C	method:GenerateTest.getInteraction
selection	lib/shared/src/chat/recipes/git-log.ts	/^        const selection = context.editor.getActiveTextEditorSelectionOrEntireFile()$/;"	C	method:GitHistory.getInteraction
selection	lib/shared/src/chat/recipes/improve-variable-names.ts	/^        const selection = context.editor.getActiveTextEditorSelectionOrEntireFile()$/;"	C	method:ImproveVariableNames.getInteraction
selection	lib/shared/src/chat/recipes/inline-chat.ts	/^        const selection = context.editor.controllers?.inline.selection$/;"	C	method:InlineChat.getInteraction
selection	lib/shared/src/chat/recipes/inline-touch.ts	/^        const selection = context.editor.getActiveTextEditorSelection() || context.editor.contro/;"	C
selection	lib/shared/src/chat/recipes/my-prompt.ts	/^        const selection = context.editor.getActiveTextEditorSelection()$/;"	C	method:MyPrompt.getInteraction
selection	lib/shared/src/chat/recipes/translate.ts	/^        const selection = context.editor.getActiveTextEditorSelectionOrEntireFile()$/;"	C	method:TranslateToLanguage.getInteraction
selection	lib/shared/src/editor/index.ts	/^    selection: ActiveTextEditorSelection | null$/;"	p	interface:VsCodeInlineController
selection	lib/shared/src/editor/index.ts	/^    selection?: ActiveTextEditorSelectionRange$/;"	p	interface:ActiveTextEditor
selection	vscode/src/editor/vscode-editor.ts	/^        const selection = activeEditor.selection$/;"	C	method:VSCodeEditor.getActiveTextEditorSelection
selection	vscode/src/editor/vscode-editor.ts	/^        const selection = activeEditor.selection$/;"	C	method:VSCodeEditor.getActiveTextEditorVisibleContent
selection	vscode/src/services/InlineController.ts	/^            const selection = e.selections[0]$/;"	C
selection	vscode/src/services/InlineController.ts	/^        const selection = {$/;"	C
selectionRange	vscode/src/chat/ChatViewProvider.ts	/^        const selectionRange = vscode.window.activeTextEditor?.selection$/;"	C
selectionRange	vscode/src/non-stop/FixupTask.ts	/^        public selectionRange: vscode.Range$/;"	p	class:FixupTask
selectionRange	vscode/src/services/InlineController.ts	/^        const selectionRange = new vscode.Range(startPost, isFixMode ? endPostFix : endPostAsk)$/;"	C
selectionText	vscode/test/integration/task-controller.test.ts	/^        const selectionText = textEditor.document.getText().trim()$/;"	C
selector-pseudo-class-no-unknown	.stylelintrc.json	/^    "selector-pseudo-class-no-unknown": [$/;"	a	object:rules
semver	vscode/package.json	/^    "semver": "^7.5.4",$/;"	s	object:devDependencies
send	agent/src/jsonrpc.ts	/^    public send(data: any): void {$/;"	m	class:MessageEncoder
send	vscode/src/chat/ChatViewProvider.ts	/^        const send = async (): Promise<void> => {$/;"	C
sendEvents	lib/shared/src/sourcegraph-api/completions/client.ts	/^    protected sendEvents(events: Event[], cb: CompletionCallbacks): void {$/;"	m	class:SourcegraphCompletionsClient
sendMessage	node_modules/autopreview/Autopreview.js	/^  sendMessage(action, data) {$/;"	m	class:AutoPreview
sendTranscript	lib/shared/src/chat/client.ts	/^    const sendTranscript = (): void => {$/;"	C	function:createClient
sep	cli/src/log.ts	/^        const sep = '###############################################'$/;"	C	function:debugLog
seperator	vscode/src/my-cody/MyPromptController.ts	/^        const seperator: vscode.QuickPickItem = { kind: -1, label: 'action', detail: '' }$/;"	C	method:MyPromptController.quickRecipe
seperator	vscode/src/services/AuthMenus.ts	/^    const seperator = [{ label: type === 'signin' ? 'previously used' : 'current', kind: -1 }]$/;"	C
server	vscode/test/fixtures/mock-server.ts	/^    const server = app.listen(SERVER_PORT, () => {$/;"	C	function:run
serverBuildPath	completions-review-tool/remix.config.js	/^  serverBuildPath: 'build\/index.js',$/;"	p	property:module.exports
serverDependenciesToBundle	completions-review-tool/remix.config.js	/^  serverDependenciesToBundle: 'all',$/;"	p	property:module.exports
serverEndpoint	agent/src/protocol.ts	/^    serverEndpoint: string$/;"	p	interface:ConnectionConfiguration
serverEndpoint	lib/shared/src/configuration.ts	/^    serverEndpoint: string$/;"	p	interface:Configuration
serverEndpoint	lib/shared/src/telemetry/EventLogger.ts	/^            serverEndpoint: this.serverEndpoint,$/;"	C	method:EventLogger.log
serverEndpoint	lib/shared/src/telemetry/EventLogger.ts	/^        private serverEndpoint: string,$/;"	p	class:EventLogger
serverEndpoint	vscode/src/chat/ChatViewProvider.ts	/^                serverEndpoint: this.config.serverEndpoint,$/;"	C
serverEndpoint	vscode/src/completions/providers/unstable-codegen.ts	/^    private serverEndpoint: string$/;"	p	class:UnstableCodeGenProvider
serverEndpoint	vscode/src/completions/providers/unstable-codegen.ts	/^    serverEndpoint: string$/;"	p	interface:UnstableCodeGenOptions
serverEndpoint	vscode/src/completions/providers/unstable-huggingface.ts	/^    private serverEndpoint: string$/;"	p	class:UnstableHuggingFaceProvider
serverEndpoint	vscode/src/completions/providers/unstable-huggingface.ts	/^    serverEndpoint: string$/;"	p	interface:UnstableHuggingFaceOptions
serverEndpoint	vscode/src/services/EventLogger.ts	/^    const serverEndpoint = localStorage?.getEndpoint() || config.serverEndpoint$/;"	C	function:createOrUpdateEventLogger
serverModuleFormat	completions-review-tool/remix.config.js	/^  serverModuleFormat: 'cjs',$/;"	p	property:module.exports
set	vscode/src/services/LocalStorageProvider.ts	/^    public async set(key: string, value: string): Promise<void> {$/;"	m	class:LocalStorage
set	vscode/src/test-support.ts	/^    public set(value: T): void {$/;"	m	class:Rendezvous
setAnonymousUserID	vscode/src/services/LocalStorageProvider.ts	/^    public async setAnonymousUserID(): Promise<string | null> {$/;"	m	class:LocalStorage
setAssistantMessage	lib/shared/src/chat/transcript/interaction.ts	/^    public setAssistantMessage(assistantMessage: InteractionMessage): void {$/;"	m	class:Interaction
setChatHistory	vscode/src/services/LocalStorageProvider.ts	/^    public async setChatHistory(history: UserLocalHistory): Promise<void> {$/;"	m	class:LocalStorage
setCodebase	vscode/src/my-cody/MyPromptController.ts	/^    public setCodebase(codebase?: string): void {$/;"	m	class:MyPromptController
setConfig	lib/shared/src/chat/useClient.ts	/^    setConfig: (config: CodyClientConfig) => void$/;"	p	interface:CodyClient
setEditorScope	lib/shared/src/chat/useClient.ts	/^    setEditorScope: (editor: Editor) => void$/;"	p	interface:CodyClient
setEnabledPlugins	vscode/src/services/LocalStorageProvider.ts	/^    public async setEnabledPlugins(plugins: string[]): Promise<void> {$/;"	m	class:LocalStorage
setMessageInProgress	lib/shared/src/chat/client.ts	/^    setMessageInProgress: (messageInProgress: ChatMessage | null) => void$/;"	p	interface:ClientInit
setMessager	vscode/src/my-cody/MyPromptController.ts	/^    public setMessager(messenger: () => Promise<void>): void {$/;"	m	class:MyPromptController
setScope	lib/shared/src/chat/useClient.ts	/^    setScope: (scope: CodyClientScope) => void$/;"	p	interface:CodyClient
setState	vscode/src/services/DecorationProvider.ts	/^    public setState(status: CodyTaskState, newRange: vscode.Range): void {$/;"	m	class:DecorationProvider
setState	vscode/webviews/utils/VSCodeApi.ts	/^    setState: (newState: unknown) => unknown$/;"	p	interface:VSCodeApi
setStoredValue	web/src/settings/useConfig.ts	/^    const [storedValue, setStoredValue] = useState<T>(() => {$/;"	C	function:useLocalStorage
setTranscript	lib/shared/src/chat/client.ts	/^    setTranscript: (transcript: Transcript) => void$/;"	p	interface:ClientInit
setTranscript	lib/shared/src/chat/useClient.ts	/^    setTranscript: (transcript: Transcript) => Promise<void>$/;"	p	interface:CodyClient
setUsedContext	lib/shared/src/chat/transcript/interaction.ts	/^    public setUsedContext(usedContextFiles: ContextFile[], pluginExecutionInfos: PluginFunctionE/;"	m	class:Interaction
setUsedContextFilesForLastInteraction	lib/shared/src/chat/transcript/index.ts	/^    public setUsedContextFilesForLastInteraction($/;"	m	class:Transcript
setValue	web/src/settings/useConfig.ts	/^    const setValue = (value: T | ((prevValue: T) => T)): void => {$/;"	C	function:useLocalStorage
sharedPostProcess	vscode/src/completions/shared-post-process.ts	/^export function sharedPostProcess({$/;"	f
sharedProviderOptions	vscode/src/completions/index.ts	/^        const sharedProviderOptions = {$/;"	C
shouldIncludeClosingLine	vscode/src/completions/multiline.ts	/^function shouldIncludeClosingLine(prefixIndentationWithFirstCompletionLine: string, suffix: stri/;"	f
shouldIncludeClosingLineBasedOnBrackets	vscode/src/completions/multiline.ts	/^function shouldIncludeClosingLineBasedOnBrackets($/;"	f
show	vscode/src/non-stop/FixupTypingUI.ts	/^    public async show(): Promise<void> {$/;"	m	class:FixupTypingUI
show	vscode/src/non-stop/tracked-range.test.ts	/^function show(text: string, range: Range): string {$/;"	f
showActionNotification	vscode/src/notifications/index.ts	/^export const showActionNotification = async ({ message, options = {}, actions }: ActionNotificat/;"	C
showComponent	node_modules/autopreview/Autopreview.js	/^  async showComponent() {$/;"	m	class:AutoPreview
showCustomRecipeMenu	vscode/src/my-cody/InputMenu.ts	/^export async function showCustomRecipeMenu(): Promise<answerType | void> {$/;"	f
showFeedbackSupportQuickPick	vscode/src/services/FeedbackOptions.ts	/^export const showFeedbackSupportQuickPick = async (): Promise<void> => {$/;"	C
showInputBox	lib/shared/src/editor/index.ts	/^    public showInputBox(_prompt?: string): Promise<string | undefined> {$/;"	m	class:NoopEditor
showInputBox	lib/shared/src/editor/index.ts	/^    showInputBox(prompt?: string): Promise<string | undefined>$/;"	m	interface:Editor
showInvalidAccessTokenError	vscode/src/chat/protocol.ts	/^    showInvalidAccessTokenError: boolean$/;"	p	interface:AuthStatus
showInvalidAccessTokenError	vscode/src/chat/protocol.ts	/^    showInvalidAccessTokenError: false,$/;"	C
showInvalidAccessTokenError	vscode/src/chat/protocol.ts	/^    showInvalidAccessTokenError: true,$/;"	C
showInvalidAccessTokenError	vscode/src/chat/utils.test.ts	/^            showInvalidAccessTokenError: false,$/;"	C
showPromptCommandInput	vscode/src/my-cody/InputMenu.ts	/^export async function showPromptCommandInput(): Promise<string | void> {$/;"	C
showPromptNameInput	vscode/src/my-cody/InputMenu.ts	/^export async function showPromptNameInput(myPromptStore: Map<string, CodyPrompt>): Promise<strin/;"	f
showQuickPick	lib/shared/src/editor/index.ts	/^    public showQuickPick(_labels: string[]): Promise<string | undefined> {$/;"	m	class:NoopEditor
showQuickPick	lib/shared/src/editor/index.ts	/^    showQuickPick(labels: string[]): Promise<string | undefined>$/;"	m	interface:Editor
showSetupNotification	vscode/src/notifications/setup-notification.ts	/^export const showSetupNotification = async ($/;"	C
showWarningMessage	lib/shared/src/editor/index.ts	/^    public showWarningMessage(_message: string): Promise<void> {$/;"	m	class:NoopEditor
showWarningMessage	lib/shared/src/editor/index.ts	/^    showWarningMessage(message: string): Promise<void>$/;"	m	interface:Editor
shutdownAndExit	agent/src/index.test.ts	/^    public async shutdownAndExit() {$/;"	m	class:TestClient
sidbarExplorerRole	vscode/test/e2e/common.ts	/^const sidbarExplorerRole = { name: \/Explorer.*\/ }$/;"	C
sideEffects	agent/package.json	/^  "sideEffects": false,$/;"	b
sideEffects	completions-review-tool/package.json	/^  "sideEffects": false,$/;"	b
sideEffects	lib/shared/package.json	/^  "sideEffects": false,$/;"	b
sideEffects	lib/ui/package.json	/^  "sideEffects": false,$/;"	b
sideEffects	web/package.json	/^  "sideEffects": false,$/;"	b
sidebar	vscode/test/e2e/helpers.ts	/^            const sidebar = await getCodySidebar(page)$/;"	C
sidebarExplorer	vscode/test/e2e/common.ts	/^export const sidebarExplorer = (page: Page): Locator => page.getByRole('tab', sidbarExplorerRole/;"	C
sidebarSignin	vscode/test/e2e/common.ts	/^export const sidebarSignin = async (page: Page, sidebar: Frame): Promise<void> => {$/;"	C
site	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    site: { isCodyEnabled: boolean } | null$/;"	p	interface:SiteHasCodyEnabledResponse
site	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    site: { productVersion: string } | null$/;"	p	interface:SiteVersionResponse
siteHasCodyEnabled	vscode/src/chat/protocol.ts	/^    siteHasCodyEnabled: boolean$/;"	p	interface:AuthStatus
siteHasCodyEnabled	vscode/src/chat/protocol.ts	/^    siteHasCodyEnabled: false,$/;"	C
siteHasCodyEnabled	vscode/src/chat/utils.test.ts	/^            siteHasCodyEnabled: false,$/;"	C
siteHasCodyEnabled	vscode/src/chat/utils.test.ts	/^            siteHasCodyEnabled: true,$/;"	C
siteVersion	lib/shared/src/sourcegraph-api/graphql/client.ts	/^        const siteVersion = await this.getSiteVersion()$/;"	C	method:SourcegraphGraphQLAPIClient.isCodyEnabled
siteVersion	vscode/src/chat/protocol.ts	/^    siteVersion: '',$/;"	C
siteVersion	vscode/src/chat/protocol.ts	/^    siteVersion: string$/;"	p	interface:AuthStatus
siteVersion	vscode/src/chat/utils.test.ts	/^    const siteVersion = ''$/;"	C
skipDefaultLibCheck	tsconfig.base.json	/^    "skipDefaultLibCheck": true,$/;"	b	object:compilerOptions
skipLibCheck	tsconfig.base.json	/^    "skipLibCheck": true,$/;"	b	object:compilerOptions
slackChannelFilter	slack/src/mention-handler.ts	/^    const slackChannelFilter = parseSlackChannelFilter(event.text)$/;"	C	function:handleHumanMessage
slackInteraction	slack/src/mention-handler.ts	/^        const slackInteraction = getSlackInteraction(message.human.text, message.assistant?.text/;"	C	function:restoreTranscriptFromSlackThread
slackify-markdown	slack/package.json	/^    "slackify-markdown": "^4.3.1"$/;"	s	object:dependencies
sliceUntilFirstNLinesOfSuffixMatch	vscode/src/completions/utils.ts	/^export function sliceUntilFirstNLinesOfSuffixMatch(suggestion: string, suffix: string, n: number/;"	f
snippet	vscode/src/completions/providers/unstable-codegen.ts	/^    for (const snippet of snippets) {$/;"	C	function:prepareContext
snippet	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                    const snippet = textDocument.getText()$/;"	C	method:LocalKeywordContextFetcher.getSearchContext
snippet	vscode/src/services/GuardrailsProvider.ts	/^        const snippet = this.editor.getActiveTextEditorSelection()?.selectedText$/;"	C	method:GuardrailsProvider.debugEditorSelection
snippetAttribution	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    snippetAttribution: {$/;"	p	interface:SearchAttributionResponse
solutionLimit	vscode/src/chat/ChatViewProvider.ts	/^        const solutionLimit = (localSolutionLimit || ANSWER_TOKENS) + SAFETY_PROMPT_TOKENS$/;"	C
sortedChats	vscode/src/chat/ChatViewProvider.ts	/^            const sortedChats = Object.entries(chats).sort($/;"	C
sortedMatchingFiles	vscode/src/local-context/filename-context-fetcher.ts	/^        const sortedMatchingFiles = allBoostedFiles.concat(remainingFiles).slice(0, numResults)$/;"	C	method:FilenameContextFetcher.getContext
sortedResults	lib/shared/src/codebase-context/index.ts	/^    const sortedResults = results.sort((a, b) => a.startLine - b.startLine)$/;"	C	function:mergeConsecutiveResults
source	lib/shared/src/codebase-context/messages.ts	/^    source?: ContextFileSource$/;"	p	interface:ContextFile
source.fixAll.eslint	.vscode/settings.json	/^    "source.fixAll.eslint": true$/;"	b	object:editor.codeActionsOnSave
sourceMap	tsconfig.base.json	/^    "sourceMap": true,$/;"	b	object:compilerOptions
sourceMap	vscode/test/integration/tsconfig.json	/^    "sourceMap": true,$/;"	b	object:compilerOptions
sourceMap	vscode/tsconfig.json	/^    "sourceMap": true,$/;"	b	object:compilerOptions
sourceMaps	.vscode/launch.json	/^      "sourceMaps": true,$/;"	b	object:configurations.0
sourceRoot	completions-review-tool/tsconfig.json	/^    "sourceRoot": "src",$/;"	s	object:compilerOptions
sourcegraphClient	cli/src/client/index.ts	/^    const sourcegraphClient = new SourcegraphGraphQLAPIClient({$/;"	C	function:getClient
sourcegraphClient	slack/src/services/sourcegraph-client.ts	/^export const sourcegraphClient = new SourcegraphGraphQLAPIClient({$/;"	C
sourcegraphSearchURL	vscode/src/chat/ChatViewProvider.ts	/^                    const sourcegraphSearchURL = new URL($/;"	C
sourcemap	vscode/scripts/bundle.ts	/^    sourcemap: true,$/;"	C
spawn	cli/src/commands/commit/command.ts	/^const spawn = promisify(_spawn)$/;"	C
speaker	cli/src/client/completions.ts	/^                      speaker: 'assistant',$/;"	C	function:getCompletionWithContext
speaker	lib/shared/src/chat/transcript/transcript.test.ts	/^            { speaker: 'human', text: 'Use the following text from file `docs\/README.md`:\\n# M/;"	C
speaker	lib/shared/src/sourcegraph-api/completions/types.ts	/^    speaker: 'human' | 'assistant'$/;"	p	interface:Message
specialFragment	vscode/src/local-context/filename-context-fetcher.ts	/^        for (const specialFragment of specialFragments) {$/;"	C	method:FilenameContextFetcher.getContext
specialFragments	vscode/src/local-context/filename-context-fetcher.ts	/^        const specialFragments = ['readme']$/;"	C	method:FilenameContextFetcher.getContext
spinCount	vscode/src/non-stop/FixupTask.ts	/^    public spinCount = 0$/;"	p	class:FixupTask
splitAt	lib/shared/src/chat/bot-response-multiplexer.ts	/^function splitAt(str: string, startIndex: number, endIndex?: number): [string, string] {$/;"	f
splitPrefix	vscode/src/completions/completion.test.ts	/^            const position: any = { line: splitPrefix.length, character: splitPrefix[splitPrefix/;"	C
splitPrefix	vscode/src/completions/completion.test.ts	/^            const splitPrefix = prefix.split('\\n')$/;"	C
splitter	slack/src/services/local-vector-store.ts	/^    const splitter = new MarkdownTextSplitter()$/;"	C	function:getDocuments
start	agent/src/protocol.ts	/^    start: Position$/;"	p	interface:Range
start	cli/package.json	/^    "start": "pnpm run --silent build && dist\/cody",$/;"	s	object:scripts
start	completions-review-tool/package.json	/^    "start": "cross-env NODE_ENV=production node .\/server.js",$/;"	s	object:scripts
start	lib/shared/src/editor/index.ts	/^    start: {$/;"	p	interface:ActiveTextEditorSelectionRange
start	lib/shared/src/guardrails/index.ts	/^    const start = performance.now()$/;"	C	function:annotateAttribution
start	lib/shared/src/plugins/built-in/confluence.ts	/^    const start = Math.max(0, blurbIndex - 300)$/;"	C	function:getSurroundingText
start	slack/package.json	/^    "start": "ts-node-transpile-only .\/src\/app.ts",$/;"	s	object:scripts
start	vscode/src/completions/context-local.ts	/^        const start = Math.max(index - surroundingTabs, 0)$/;"	C	function:getRelevantFiles
start	vscode/src/completions/context.ts	/^    const start = Date.now()$/;"	C	function:getContext
start	vscode/src/completions/logger.ts	/^export function start(inputParams: Omit<CompletionEvent['params'], 'multilineMode'>): string {$/;"	f
start	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const start = performance.now()$/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
start	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const start = performance.now()$/;"	C	method:LocalKeywordContextFetcher.fetchFileStats
start	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const start = performance.now()$/;"	C	method:LocalKeywordContextFetcher.userQueryToExpandedKeywords
start	vscode/src/log.ts	/^        const start = Date.now()$/;"	C
start	vscode/src/logged-rerank.ts	/^        const start = performance.now()$/;"	C	function:getRerankWithLog
start	vscode/src/main.ts	/^export async function start(context: vscode.ExtensionContext): Promise<vscode.Disposable> {$/;"	f
start	vscode/test/completions/run-code-completions-on-dataset.ts	/^            const start = Date.now()$/;"	C	function:generateCompletionsForDataset
startBot	slack/src/app.ts	/^async function startBot() {$/;"	f
startCompletion	lib/shared/src/sourcegraph-api/completions/client.ts	/^    startCompletion(params: CompletionParameters | {}):$/;"	m	interface:CompletionLogger
startCompletionStreaming	slack/src/mention-handler.ts	/^function startCompletionStreaming($/;"	f
startIndent	vscode/src/completions/multiline.ts	/^    const startIndent = indentation(prefixIndentationWithFirstCompletionLine)$/;"	C	function:shouldIncludeClosingLine
startIndex	vscode/src/completions/text-processing.ts	/^    const startIndex = value.search(NON_WHITESPACE_REGEX)$/;"	C	function:getFirstNCharsPreservingLeadingSpaces
startLine	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    startLine: number$/;"	p	interface:CodyFileChunkContext
startLine	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    startLine: number$/;"	p	interface:EmbeddingsSearchResult
startLine	lib/shared/src/unified-context/index.ts	/^    startLine: number$/;"	p	interface:FileChunkContext
startLine	vscode/src/completions/document.ts	/^        let startLine = prefixLines.length$/;"	v
startLine	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                    const startLine = Math.max(0, textDocument.positionAt(keywordIndex).line - 2/;"	C	method:LocalKeywordContextFetcher.getSearchContext
startLoading	vscode/src/services/StatusBar.ts	/^    startLoading(label: string): () => void$/;"	m	interface:CodyStatusBar
startPost	vscode/src/services/InlineController.ts	/^        const startPost = new vscode.Position(this.thread.range.start.line, 0)$/;"	C
startRequest	vscode/src/completions/request-manager.ts	/^    private startRequest($/;"	m	class:RequestManager
startTime	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const startTime = performance.now()$/;"	C	method:LocalKeywordContextFetcher.getContext
startedAt	vscode/src/completions/logger.ts	/^        const latency = suggestedAt - startedAt$/;"	C	function:logSuggestionEvent
startedAt	vscode/src/completions/logger.ts	/^        const { suggestedAt, suggestionLoggedAt, startedAt, params, forceRead } = completionEven/;"	C	function:logSuggestionEvent
startedAt	vscode/src/completions/logger.ts	/^    startedAt: number$/;"	p	interface:CompletionEvent
starter	vscode/src/my-cody/MyPromptController.ts	/^        const { prompts, premade, starter } = await this.builder.get()$/;"	C	method:MyPromptController.refresh
starter	vscode/src/my-cody/types.ts	/^    starter: string$/;"	p	interface:MyPrompts
starter	vscode/src/my-cody/types.ts	/^    starter?: string$/;"	p	interface:MyPromptsJSON
state	lib/shared/src/plugins/built-in/github-issues.ts	/^    state: string$/;"	p	interface:Item
state	vscode/src/non-stop/FixupTask.ts	/^    public get state(): CodyTaskState {$/;"	m	class:FixupTask
state	vscode/src/non-stop/FixupTask.ts	/^    public set state(state: CodyTaskState) {$/;"	m	class:FixupTask
state_	vscode/src/non-stop/FixupTask.ts	/^    public state_: CodyTaskState = CodyTaskState.idle$/;"	p	class:FixupTask
stats	vscode/src/local-context/local-keyword-context-fetcher.ts	/^            stats: { bytes_searched: number }$/;"	C
status	vscode/src/services/DecorationProvider.ts	/^    private status = CodyTaskState.idle$/;"	p	class:DecorationProvider
status	vscode/src/services/EventLogger.ts	/^    const status = await localStorage.setAnonymousUserID()$/;"	C	function:createOrUpdateEventLogger
status	vscode/src/services/InlineController.ts	/^        const status = error ? CodyTaskState.error : CodyTaskState.fixed$/;"	C
statusBar	vscode/src/completions/index.ts	/^            statusBar,$/;"	C
statusBar	vscode/src/completions/index.ts	/^    statusBar: CodyStatusBar$/;"	p	interface:CodyCompletionItemProviderConfig
statusBar	vscode/src/main.ts	/^    const statusBar = createStatusBar()$/;"	C
statusBarItem	vscode/src/services/StatusBar.ts	/^    const statusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Right)$/;"	C	function:createStatusBar
stderr	vscode/src/my-cody/MyToolsProvider.ts	/^            const { stdout, stderr } = await _exec(filteredCommand, {$/;"	C	method:MyToolsProvider.exeCommand
stdout	cli/src/gitHelpers/index.ts	/^            const { stdout } = await execFile($/;"	C	function:createGitHelpers
stdout	cli/src/gitHelpers/index.ts	/^            const { stdout } = await execFile('git', ['rev-parse', '--git-dir'], { cwd })$/;"	C	function:createGitHelpers
stdout	cli/src/gitHelpers/index.ts	/^            const { stdout: gitAuthorEmail } = await execFile('git', ['config', 'user.email'], {$/;"	C	function:createGitHelpers
stdout	vscode/src/my-cody/MyToolsProvider.ts	/^            const { stdout, stderr } = await _exec(filteredCommand, {$/;"	C	method:MyToolsProvider.exeCommand
stem	vscode/src/completions/bestJaccardMatch.ts	/^    for (const stem of stems) {$/;"	C	function:getWords
stem	vscode/src/local-context/local-keyword-context-fetcher.ts	/^            const stem = winkUtils.string.stem(kw)$/;"	C	method:LocalKeywordContextFetcher.userQueryToExpandedKeywords
stem	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        for (const [stem, term] of expandedTerms) {$/;"	C	method:LocalKeywordContextFetcher.userQueryToKeywordQuery
stem	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    stem: string$/;"	p	interface:Term
stems	vscode/src/completions/bestJaccardMatch.ts	/^    const stems = winkUtils.tokens.stem(filteredWords)$/;"	C	function:getWords
stems	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const stems = (await this.userQueryToKeywordQuery(query))$/;"	C	method:LocalKeywordContextFetcher.getSearchContext
step	vscode/src/services/AuthMenus.ts	/^    const options = LoginStepOptions[step - 1]$/;"	C	function:LoginStepInputBox
steps	vscode/package.json	/^        "steps": [$/;"	a	object:contributes.walkthroughs.0
stop	lib/shared/src/chat/typewriter.ts	/^    stop: () => void$/;"	p	interface:Typewriter
stopLoading	vscode/src/completions/index.ts	/^        const stopLoading = this.statusBar.startLoading('Completions are being generated')$/;"	C
stopReason	lib/shared/src/sourcegraph-api/completions/types.ts	/^    stopReason: string$/;"	p	interface:CompletionResponse
stopReason	vscode/src/completions/index.ts	/^    stopReason?: string$/;"	p	interface:Completion
stopSequenceMatch	lib/shared/src/chat/viewHelpers.ts	/^    const stopSequenceMatch = reformattedMessage.match(STOP_SEQUENCE_REGEXP)$/;"	C	function:reformatBotMessage
stopSequences	lib/shared/src/sourcegraph-api/completions/types.ts	/^    stopSequences?: string[]$/;"	p	interface:CompletionParameters
storage	vscode/src/services/LocalStorageProvider.ts	/^    constructor(private storage: Memento) {}$/;"	p	class:LocalStorage
storage	vscode/src/services/SecretStorageProvider.ts	/^    private storage: Map<string, string>$/;"	p	class:InMemorySecretStorage
store	vscode/src/services/SecretStorageProvider.ts	/^    public async store(key: string, value: string): Promise<void> {$/;"	m	class:InMemorySecretStorage
store	vscode/src/services/SecretStorageProvider.ts	/^    public async store(key: string, value: string): Promise<void> {$/;"	m	class:VSCodeSecretStorage
store	vscode/src/services/SecretStorageProvider.ts	/^    store(key: string, value: string): Promise<void>$/;"	m	interface:SecretStorage
storeToken	vscode/src/services/SecretStorageProvider.ts	/^    public async storeToken(endpoint: string, value: string): Promise<void> {$/;"	m	class:InMemorySecretStorage
storeToken	vscode/src/services/SecretStorageProvider.ts	/^    public async storeToken(endpoint: string, value: string): Promise<void> {$/;"	m	class:VSCodeSecretStorage
storeToken	vscode/src/services/SecretStorageProvider.ts	/^    storeToken(endpoint: string, value: string): Promise<void>$/;"	m	interface:SecretStorage
storedValue	web/src/settings/useConfig.ts	/^    const [storedValue, setStoredValue] = useState<T>(() => {$/;"	C	function:useLocalStorage
storybook	lib/ui/package.json	/^    "storybook": "storybook dev -p 6006 --no-open --no-version-updates --no-release-notes",$/;"	s	object:scripts
storybook	package.json	/^    "storybook": "^7.0.26",$/;"	s	object:devDependencies
storybook	vscode/package.json	/^    "storybook": "storybook dev -p 6007 --no-open --no-version-updates --no-release-notes",$/;"	s	object:scripts
str	lib/shared/src/sourcegraph-api/utils.test.ts	/^        const { str, buf } = toPartialUtf8String(Buffer.from('hello, world', 'utf-8'))$/;"	C
str	lib/shared/src/sourcegraph-api/utils.test.ts	/^        const { str, buf } = toPartialUtf8String(Buffer.from('今日は、世界', 'utf-8'))$/;"	C
str	lib/shared/src/sourcegraph-api/utils.test.ts	/^        const { str, buf } = toPartialUtf8String(Buffer.from([0x48, 0x69, 0x20, 0xef]))$/;"	C
str	lib/shared/src/sourcegraph-api/utils.test.ts	/^        const { str, buf } = toPartialUtf8String(Buffer.from([0x59, 0x6f, 0x21, 0xf0, 0x8a, 0x8b/;"	C
str	vscode/test/completions/vscode-text-document.ts	/^            const str = lines[i]$/;"	C
stream	lib/shared/src/sourcegraph-api/completions/browserClient.ts	/^    public stream(params: CompletionParameters, cb: CompletionCallbacks): () => void {$/;"	m	class:SourcegraphBrowserCompletionsClient
stream	lib/shared/src/sourcegraph-api/completions/client.ts	/^    public abstract stream(params: CompletionParameters, cb: CompletionCallbacks): () => void$/;"	m	class:SourcegraphCompletionsClient
stream	lib/shared/src/sourcegraph-api/completions/nodeClient.ts	/^    public stream(params: CompletionParameters, cb: CompletionCallbacks): () => void {$/;"	m	class:SourcegraphNodeCompletionsClient
stream	lib/shared/src/test/mocks.ts	/^    public stream(): () => void {$/;"	m	class:MockCompletionsClient
stream	slack/src/services/openai-completions-client.ts	/^                const stream = response.data as unknown as IncomingMessage$/;"	C	method:OpenAICompletionsClient.stream
stream	slack/src/services/openai-completions-client.ts	/^    public stream(params: CompletionParameters, cb: CompletionCallbacks) {$/;"	m	class:OpenAICompletionsClient
stream-json	vscode/package.json	/^    "stream-json": "^1.8.0",$/;"	s	object:dependencies
streamCompletions	cli/src/client/completions.ts	/^export function streamCompletions(client: SourcegraphCompletionsClient, messages: Message[], cb:/;"	C
streamCompletions	slack/src/services/stream-completions.ts	/^export function streamCompletions(messages: Message[], cb: CompletionCallbacks) {$/;"	f
streamingChatMessages	agent/src/index.test.ts	/^    const streamingChatMessages = new Promise<void>(resolve => {$/;"	C
strict	tsconfig.base.json	/^    "strict": true,$/;"	b	object:compilerOptions
string-quotes	.stylelintrc.json	/^    "string-quotes": "single",$/;"	s	object:rules
stylelint	package.json	/^    "stylelint": "^15.10.1",$/;"	s	object:devDependencies
stylelint-config-prettier	package.json	/^    "stylelint-config-prettier": "^9.0.5",$/;"	s	object:devDependencies
stylelint-config-standard	package.json	/^    "stylelint-config-standard": "^34.0.0",$/;"	s	object:devDependencies
sub	lib/shared/src/chat/bot-response-multiplexer.ts	/^        const sub = this.subs_.get(topic)$/;"	C	method:BotResponseMultiplexer.publishInTopic
sub	lib/shared/src/chat/bot-response-multiplexer.ts	/^    public sub(topic: string, subscriber: BotResponseSubscriber): void {$/;"	m	class:BotResponseMultiplexer
submenu	vscode/package.json	/^          "submenu": "cody.submenu",$/;"	s	object:contributes.menus.editor/context.0
submenus	vscode/package.json	/^    "submenus": [$/;"	a	object:contributes
submitMessage	lib/shared/src/chat/client.ts	/^    submitMessage: (text: string) => Promise<void>$/;"	p	interface:Client
submitMessage	lib/shared/src/chat/useClient.ts	/^    const submitMessage = useCallback($/;"	C
submitMessage	lib/shared/src/chat/useClient.ts	/^    submitMessage: (humanChatInput: string, scope?: CodyClientScope) => Promise<Transcript | nul/;"	p	interface:CodyClient
subs_	lib/shared/src/chat/bot-response-multiplexer.ts	/^    private subs_ = new Map<string, BotResponseSubscriber>()$/;"	p	class:BotResponseMultiplexer
subtract	vscode/src/completions/bestJaccardMatch.ts	/^    const subtract = (minuend: Map<string, number>, subtrahend: Map<string, number>): number => /;"	C	function:bestJaccardMatch
successMessage	vscode/src/services/AuthProvider.ts	/^            const successMessage = isApp ? 'Connected to Cody App' : `Signed in to ${endpoint}`$/;"	C
suffix	slack/src/mention-handler.ts	/^    const suffix = contextFiles.length > 0 ? '\\n\\n**Files used**:\\n' + contextFilesList : ''$/;"	C	function:startCompletionStreaming
suffix	vscode/src/completions/completion.test.ts	/^            const suffix = code.slice(cursorIndex + CURSOR_MARKER.length)$/;"	C
suffix	vscode/src/completions/context-embeddings.ts	/^    const { document, codebaseContext, prefix, suffix } = options$/;"	C
suffix	vscode/src/completions/context-embeddings.ts	/^    suffix: string$/;"	p	interface:Options
suffix	vscode/src/completions/context.ts	/^    suffix: string$/;"	p	interface:GetContextOptions
suffix	vscode/src/completions/docprovider.ts	/^    suffix: string$/;"	p	interface:Meta
suffix	vscode/src/completions/document.ts	/^    const suffix = suffixLines.slice(0, endLine).join('\\n')$/;"	C
suffix	vscode/src/completions/index.ts	/^            suffix,$/;"	C
suffix	vscode/src/completions/index.ts	/^        const { prefix, suffix, prevNonEmptyLine } = docContext$/;"	C
suffix	vscode/src/completions/providers/provider.ts	/^    suffix: string$/;"	p	interface:ProviderOptions
suffix	vscode/src/completions/providers/unstable-codegen.ts	/^            suffix: this.options.suffix,$/;"	C	method:UnstableCodeGenProvider.generateCompletions
suffix	vscode/src/completions/utils.test.ts	/^        const suffix = 'baz\\nqux\\nquux'$/;"	C
suffix	vscode/src/completions/utils.test.ts	/^        const suffix = 'line-1\\nline-2\\nline-3\\nline-4\\nline-5'$/;"	C
suffixLines	vscode/src/completions/document.ts	/^    const suffixLines = document$/;"	C
suffixLines	vscode/src/completions/utils.ts	/^    const suffixLines = suffix.split('\\n')$/;"	C	function:sliceUntilFirstNLinesOfSuffixMatch
suffixPercentage	vscode/src/completions/index.ts	/^    suffixPercentage?: number$/;"	p	interface:CodyCompletionItemProviderConfig
suffixPercentage	vscode/src/completions/providers/provider.ts	/^    suffixPercentage: number$/;"	p	interface:ProviderOptions
suggest	vscode/src/completions/logger.ts	/^export function suggest(id: string): void {$/;"	f
suggestedAt	vscode/src/completions/logger.ts	/^        const displayDuration = now - suggestedAt$/;"	C	function:logSuggestionEvent
suggestedAt	vscode/src/completions/logger.ts	/^        const { suggestedAt, suggestionLoggedAt, startedAt, params, forceRead } = completionEven/;"	C	function:logSuggestionEvent
suggestedAt	vscode/src/completions/logger.ts	/^    suggestedAt: number | null$/;"	p	interface:CompletionEvent
suggestion	vscode/src/completions/utils.test.ts	/^        const suggestion = 'foo\\nbar\\nbaz\\nline-1\\nline-2\\noh no\\nline-1\\nline-2\\nline-3/;"	C
suggestion	vscode/src/completions/utils.test.ts	/^        const suggestion = 'foo\\nbar\\nbaz\\nqux\\nquux'$/;"	C
suggestionLines	vscode/src/completions/utils.ts	/^    const suggestionLines = suggestion.split('\\n')$/;"	C	function:sliceUntilFirstNLinesOfSuffixMatch
suggestionLoggedAt	vscode/src/completions/logger.ts	/^        const { suggestedAt, suggestionLoggedAt, startedAt, params, forceRead } = completionEven/;"	C	function:logSuggestionEvent
suggestionLoggedAt	vscode/src/completions/logger.ts	/^    suggestionLoggedAt: number | null$/;"	p	interface:CompletionEvent
suggestions	vscode/src/chat/ChatViewProvider.ts	/^                const suggestions = text$/;"	C
sum	vscode/test/completions/vscode-text-document.ts	/^        let sum = 0$/;"	v
summariseAttribution	lib/shared/src/guardrails/index.ts	/^export function summariseAttribution(attribution: Attribution | Error): string {$/;"	f
summary	lib/shared/src/guardrails/index.ts	/^    const summary = repos.slice(0, count < 5 ? count : 5).map(repo => repo.name)$/;"	C	function:summariseAttribution
supportsKeyword	lib/shared/src/chat/context.ts	/^    supportsKeyword?: boolean$/;"	p	interface:ChatContextStatus
surroundingTabs	vscode/src/completions/context-local.ts	/^    const surroundingTabs = visibleUris.length <= 1 ? 3 : 2$/;"	C	function:getRelevantFiles
svgtofont	lib/icons/package.json	/^    "svgtofont": "^3.23.1"$/;"	s	object:dependencies
tabSize	vscode/src/completions/text-processing.ts	/^    const tabSize = getEditorTabSize()$/;"	C	function:indentation
tag	lib/shared/src/chat/recipes/generate-release-notes.ts	/^            for (const tag of tags.slice(0, 3)) {$/;"	C	method:ReleaseNotes.getInteraction
tagIsComplete	lib/shared/src/chat/bot-response-multiplexer.ts	/^            const tagIsComplete = match[0].at(-1) === '>'$/;"	C	method:BotResponseMultiplexer.publishStep
tagIsOpenTag	lib/shared/src/chat/bot-response-multiplexer.ts	/^            const tagIsOpenTag = match[0].length >= 2 && match[0].at(1) !== '\/'$/;"	C	method:BotResponseMultiplexer.publishStep
tags	lib/shared/src/chat/recipes/generate-release-notes.ts	/^            const tags = gitTagOutput.split(\/\\r?\\n\/)$/;"	C	method:ReleaseNotes.getInteraction
tagsIndex	lib/shared/src/chat/recipes/helpers.ts	/^    const tagsIndex = text.indexOf('tags:')$/;"	C	function:getContextMessagesFromSelection
tail	vscode/src/completions/text-processing.ts	/^    tail: TrimmedString$/;"	p	interface:PrefixComponents
tailThreshold	vscode/src/completions/text-processing.ts	/^    const tailThreshold = 2$/;"	C	function:getHeadAndTail
target	tsconfig.base.json	/^    "target": "ESNext",$/;"	s	object:compilerOptions
target	vscode/src/rg.ts	/^        const target = await getTarget()$/;"	C	function:getRgPath
targetCount	vscode/src/completions/bestJaccardMatch.ts	/^    const targetCount = wordCount(targetWords)$/;"	C	function:bestJaccardMatch
targetSnippet	vscode/src/completions/bestJaccardMatch.test.ts	/^const targetSnippet = `$/;"	C
targetText	vscode/src/completions/context-local.ts	/^    const targetText = lastNLines(prefix, jaccardDistanceWindowSize)$/;"	C	function:getContextFromCurrentEditor
targetWords	vscode/src/completions/bestJaccardMatch.ts	/^    const targetWords = getWords(targetText)$/;"	C	function:bestJaccardMatch
task	vscode/src/non-stop/FixupCodeLenses.ts	/^        for (const task of this.files.tasksForFile(file)) {$/;"	C
task	vscode/src/non-stop/FixupController.ts	/^                for (const task of this.tasksForFile(file)) {$/;"	C
task	vscode/src/non-stop/FixupController.ts	/^            for (const task of this.tasks.values()) {$/;"	C
task	vscode/src/non-stop/FixupController.ts	/^        const task = new FixupTask(fixupFile, instruction, selectionRange)$/;"	C
task	vscode/src/non-stop/FixupController.ts	/^        const task = this.tasks.get(id)$/;"	C
task	vscode/src/non-stop/FixupController.ts	/^        const task = this.tasks.get(taskID)$/;"	C
task	vscode/src/non-stop/FixupDocumentEditObserver.ts	/^        for (const task of tasks) {$/;"	C	method:FixupDocumentEditObserver.textDocumentChanged
task	vscode/src/non-stop/TaskViewProvider.ts	/^        const task = this.treeItems.get(taskID)$/;"	C
task	vscode/src/non-stop/TaskViewProvider.ts	/^        for (const task of tasks.tasks) {$/;"	C
task.allowAutomaticTasks	.vscode/settings.json	/^  "task.allowAutomaticTasks": "on",$/;"	s
taskFactory	vscode/src/non-stop/FixupTypingUI.ts	/^    constructor(private readonly taskFactory: FixupTaskFactory) {}$/;"	p	class:FixupTypingUI
taskID	vscode/src/non-stop/FixupTask.ts	/^export type taskID = string$/;"	a
taskID	vscode/src/non-stop/TaskViewProvider.ts	/^type taskID = string$/;"	a
taskParameters	lib/shared/src/chat/recipes/non-stop.ts	/^        const taskParameters = await controllers.fixups.getTaskRecipeData(taskId)$/;"	C	method:NonStop.getInteraction
tasks	.vscode/tasks.json	/^  "tasks": [$/;"	a
tasks	vscode/src/non-stop/FixupContentStore.ts	/^        for (const [filePath, tasks] of this.tasksByFilePath) {$/;"	C
tasks	vscode/src/non-stop/FixupDocumentEditObserver.ts	/^        const tasks = this.provider_.tasksForFile(file)$/;"	C	method:FixupDocumentEditObserver.textDocumentChanged
tasks	vscode/src/non-stop/TaskViewProvider.ts	/^        const tasks = this.treeNodes.get(fileName)$/;"	C
tasks	vscode/test/integration/task-controller.test.ts	/^        const tasks = await getFixupTasks()$/;"	C
tasksByFsPath	vscode/src/non-stop/TaskViewProvider.ts	/^            const tasksByFsPath = [...this.treeItems.values()].filter(item => item.fsPath === el/;"	C
tasksForFile	vscode/src/non-stop/roles.ts	/^    tasksForFile(file: FixupFile): FixupTask[]$/;"	m	interface:FixupFileCollection
tasksSize	vscode/src/non-stop/TaskViewProvider.ts	/^        const tasksSize = this.tasks.size$/;"	C
tempDocUri	vscode/src/non-stop/FixupController.ts	/^        const tempDocUri = vscode.Uri.parse(`cody-fixup:${task.fixupFile.uri.fsPath}#${task.id}`/;"	C
temperature	lib/shared/src/sourcegraph-api/completions/types.ts	/^    temperature?: number$/;"	p	interface:CompletionParameters
templateFormatArgs	lib/shared/src/chat/recipes/generate-pr-description.ts	/^        const templateFormatArgs = [$/;"	C	method:PrDescription.getInteraction
templatePath	lib/shared/src/chat/recipes/generate-pr-description.ts	/^            const templatePath = path.join(dirPath.trim(), prTemplateOutput)$/;"	C	method:PrDescription.getInteraction
term	vscode/src/local-context/local-keyword-context-fetcher.ts	/^            const term = queryTerms[i]$/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
term	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const ct = termCounts[term] || 0$/;"	C
term	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        for (const [stem, term] of expandedTerms) {$/;"	C	method:LocalKeywordContextFetcher.userQueryToKeywordQuery
term	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    for (const term of terms) {$/;"	C
termFileCountsArr	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const termFileCountsArr: { fileCounts: { [filename: string]: number }; filesSearched: nu/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
termTotalFiles	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const termTotalFiles: { [term: string]: number } = {}$/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
termTotalFiles	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const { fileTermCounts, termTotalFiles, totalFiles } = fileMatches$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
terms	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                        const terms = line.split(':')$/;"	C	method:LocalKeywordContextFetcher.fetchFileMatches
terms	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const terms = new Map<string, Term>()$/;"	C	method:LocalKeywordContextFetcher.userQueryToKeywordQuery
test	agent/package.json	/^    "test": "pnpm run build && vitest"$/;"	s	object:scripts
test	cli/package.json	/^    "test": "vitest",$/;"	s	object:scripts
test	lib/shared/package.json	/^    "test": "vitest",$/;"	s	object:scripts
test	lib/ui/package.json	/^    "test": "vitest",$/;"	s	object:scripts
test	node_modules/autopreview/package.json	/^    "test": "echo \\"Error: no test specified\\" && exit 1"$/;"	s	object:scripts
test	package.json	/^    "test": "vitest",$/;"	s	object:scripts
test	vscode/test/e2e/helpers.ts	/^export const test = base$/;"	C
test	web/package.json	/^    "test": "vitest"$/;"	s	object:scripts
test:e2e	package.json	/^    "test:e2e": "pnpm -C vscode test:e2e"$/;"	s	object:scripts
test:e2e	vscode/package.json	/^    "test:e2e": "pnpm exec playwright install && pnpm run --silent build:dev && playwright test"/;"	s	object:scripts
test:integration	package.json	/^    "test:integration": "pnpm -C vscode test:integration",$/;"	s	object:scripts
test:integration	vscode/package.json	/^    "test:integration": "tsc --build .\/test\/integration && pnpm run --silent build:dev && node/;"	s	object:scripts
test:unit	package.json	/^    "test:unit": "vitest run",$/;"	s	object:scripts
test:unit	vscode/package.json	/^    "test:unit": "vitest",$/;"	s	object:scripts
testFile	lib/shared/src/chat/recipes/my-prompt.ts	/^                const testFile = await vscode.workspace.findFiles($/;"	C	method:MyPrompt.getEditorDirContext
testSupport	vscode/test/integration/helpers.ts	/^    const testSupport = api.exports.testing$/;"	C	function:getFixupTasks
testWorkspacePath	vscode/test/integration/main.ts	/^    const testWorkspacePath = path.resolve(vscodeCodyRoot, 'test', 'fixtures', 'workspace')$/;"	C	function:main
testing	vscode/src/extension-api.ts	/^    public testing: TestSupport | undefined = undefined$/;"	p	class:ExtensionApi
testsRoot	vscode/test/integration/index.ts	/^    const testsRoot = __dirname$/;"	C	function:run
text	cli/src/client/interactions.ts	/^    const text = truncateText(message.text, MAX_HUMAN_INPUT_TOKENS)$/;"	C	function:interactionFromMessage
text	lib/shared/src/chat/client.ts	/^                const text = reformatBotMessage(rawText, responsePrefix)$/;"	C	function:createClient
text	lib/shared/src/guardrails/index.ts	/^    text: string$/;"	p	interface:AnnotatedText
text	lib/shared/src/hallucinations-detector/index.test.ts	/^        const { text } = await highlightTokens(markdownText, filePaths => {$/;"	C
text	lib/shared/src/hallucinations-detector/index.ts	/^    text: string$/;"	p	interface:HighlightTokensResult
text	lib/shared/src/plugins/built-in/confluence.ts	/^    const searchUrl = `${opts.baseUrl}\/wiki\/rest\/api\/search?cql=${encodeURIComponent(`text ~/;"	C
text	lib/shared/src/plugins/built-in/url-reader.ts	/^    const text = await response.text()$/;"	C	function:fetchURL
text	lib/shared/src/sourcegraph-api/completions/types.ts	/^    text?: string$/;"	p	interface:Message
text	slack/src/mention-handler.ts	/^        const text = cleanupMessageForPrompt(message.text || '', Boolean(message.bot_id))$/;"	C	function:mergeSequentialUserMessages
text	slack/src/slack/message-interaction.ts	/^    const text = cleanupMessageForPrompt(humanText)$/;"	C	function:getSlackInteraction
text	vscode/src/chat/ChatViewProvider.ts	/^                    let { text: highlightedDisplayText } = await highlightTokens($/;"	v
text	vscode/src/chat/ChatViewProvider.ts	/^        let text = ''$/;"	v
text	vscode/src/completions/context-embeddings.ts	/^    const { currentFilePath, text, codebaseContext } = options$/;"	C	function:fetchAndSaveEmbeddings
text	vscode/src/completions/context-embeddings.ts	/^    text: string$/;"	p	interface:FetchEmbeddingsOptions
text	vscode/src/non-stop/TaskViewProvider.ts	/^        let text = `${tasksSize} ${tasksSize > 1 ? 'fixups' : 'fixup'}`$/;"	v
text	vscode/src/non-stop/tracked-range.ts	/^    text: string$/;"	p	interface:TextChange
text	vscode/test/completions/vscode-text-document.ts	/^        const text = this.lines[line]$/;"	C
textConsumed	vscode/src/chat/ChatViewProvider.ts	/^        let textConsumed = 0$/;"	v
textDidChange	vscode/src/non-stop/roles.ts	/^    textDidChange(task: FixupTask): void$/;"	m	interface:FixupTextChanged
textDocument	lib/shared/src/chat/recipes/inline-touch.ts	/^        const textDocument = await vscode.workspace.openTextDocument(filePath)$/;"	C
textDocument	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                    const textDocument = await vscode.workspace.openTextDocument(uri)$/;"	C	method:LocalKeywordContextFetcher.getSearchContext
textDocument	vscode/test/completions/run-code-completions-on-dataset.ts	/^        const { textDocument, position } = prepareTextDocument(code)$/;"	C	function:generateCompletionsForDataset
textDocument	vscode/test/completions/run-code-completions-on-dataset.ts	/^    const textDocument = new TextDocument(URI.parse('file:\/\/\/example.ts'), completionReadyCod/;"	C
textDocumentChanged	vscode/src/non-stop/FixupDocumentEditObserver.ts	/^    public textDocumentChanged(event: vscode.TextDocumentChangeEvent): void {$/;"	m	class:FixupDocumentEditObserver
textEditor	vscode/test/integration/recipes.test.ts	/^        const textEditor = await vscode.window.showTextDocument(mainJavaUri)$/;"	C
textEditor	vscode/test/integration/task-controller.test.ts	/^    let textEditor = vscode.window.activeTextEditor$/;"	v
textResults	lib/shared/src/sourcegraph-api/graphql/client.ts	/^    textResults: EmbeddingsSearchResult[]$/;"	p	interface:EmbeddingsSearchResults
textWithoutFilters	slack/src/slack/message-interaction.ts	/^    const textWithoutFilters = textWithoutMentions.replace(\/channel:([\\w-]+)\/gm, '').trim()$/;"	C	function:cleanupMessageForPrompt
textWithoutMentions	slack/src/slack/message-interaction.ts	/^    const textWithoutMentions = text.replace(\/<@[\\dA-Z]+>\/gm, '').trim()$/;"	C	function:cleanupMessageForPrompt
tf	vscode/src/local-context/local-keyword-context-fetcher.ts	/^function tf(terms: string[], termCounts: { [stem: string]: number }, fileSize: number): number[]/;"	f
tfVec	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                const tfVec = tf(queryStems, fileTermCounts, fileStats[filename].bytesSearched)$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
tfidf	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    const tfidf = tf.slice(0)$/;"	C	function:tfidf
tfidf	vscode/src/local-context/local-keyword-context-fetcher.ts	/^function tfidf(terms: string[], tf: number[], idf: { [term: string]: number }): number[] {$/;"	f
tfidfVec	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                const tfidfVec = tfidf(queryStems, tfVec, idfDict)$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
thirdInteraction	lib/shared/src/chat/transcript/transcript.test.ts	/^        const thirdInteraction = await chatQuestionRecipe.getInteraction($/;"	C
thread	vscode/src/services/InlineController.ts	/^            for (const thread of threadsInDoc) {$/;"	C
thread	vscode/src/services/InlineController.ts	/^            thread: this.thread,$/;"	C
thread	vscode/src/services/InlineController.ts	/^        const thread = reply.thread$/;"	C
thread	vscode/src/services/InlineController.ts	/^    public thread: vscode.CommentThread | null = null \/\/ a thread is a comment$/;"	p	class:InlineController
threadLabel	vscode/src/services/InlineController.ts	/^    private readonly threadLabel =$/;"	p	class:InlineController
thread_ts	slack/src/mention-handler.ts	/^    const thread_ts = slackHelpers.getEventTs(event)$/;"	C	function:handleHumanMessage
threads	vscode/src/services/InlineController.ts	/^        const threads = {$/;"	C
threads	vscode/src/services/InlineController.ts	/^        return threads$/;"	C
threads	vscode/src/services/InlineController.ts	/^    private threads = new Map<string, vscode.CommentThread>()$/;"	p	class:InlineController
threadsInDoc	vscode/src/services/InlineController.ts	/^            const threadsInDoc = [...this.threads.values()].filter(thread => thread.uri.fsPath =/;"	C
time0	vscode/src/local-context/filename-context-fetcher.ts	/^        const time0 = performance.now()$/;"	C	method:FilenameContextFetcher.getContext
time1	vscode/src/local-context/filename-context-fetcher.ts	/^        const time1 = performance.now()$/;"	C	method:FilenameContextFetcher.getContext
time2	vscode/src/local-context/filename-context-fetcher.ts	/^        const time2 = performance.now()$/;"	C	method:FilenameContextFetcher.getContext
time3	vscode/src/local-context/filename-context-fetcher.ts	/^        const time3 = performance.now()$/;"	C	method:FilenameContextFetcher.getContext
time4	vscode/src/local-context/filename-context-fetcher.ts	/^        const time4 = performance.now()$/;"	C	method:FilenameContextFetcher.getContext
timeout	vscode/src/completions/index.ts	/^        let timeout: number$/;"	v
timeout_	vscode/src/non-stop/FixupScheduler.ts	/^    private timeout_: NodeJS.Timeout$/;"	p	class:FixupScheduler
timestamp	completions-review-tool/data/completions-1686127320776.json	/^    "timestamp": "1686127320776",$/;"	s	object:0
timestamp	completions-review-tool/data/completions-1686127320776.json	/^    "timestamp": "1686127320776",$/;"	s	object:1
timestamp	completions-review-tool/data/completions-1686127320776.json	/^    "timestamp": "1686127320776",$/;"	s	object:2
timestamp	completions-review-tool/data/completions-1686127445971.json	/^    "timestamp": "1686127445971",$/;"	s	object:0
timestamp	completions-review-tool/data/completions-1686127445971.json	/^    "timestamp": "1686127445971",$/;"	s	object:1
timestamp	completions-review-tool/data/completions-1686127445971.json	/^    "timestamp": "1686127445971",$/;"	s	object:2
timestamp	completions-review-tool/data/completions-1686127449821.json	/^    "timestamp": "1686127449821",$/;"	s	object:0
timestamp	completions-review-tool/data/completions-1686127449821.json	/^    "timestamp": "1686127449821",$/;"	s	object:1
timestamp	completions-review-tool/data/completions-1686127449821.json	/^    "timestamp": "1686127449821",$/;"	s	object:2
timestamp	completions-review-tool/data/completions-1686127552793.json	/^    "timestamp": "1686127552793",$/;"	s	object:0
timestamp	completions-review-tool/data/completions-1686127552793.json	/^    "timestamp": "1686127552793",$/;"	s	object:1
timestamp	completions-review-tool/data/completions-1686127552793.json	/^    "timestamp": "1686127552793",$/;"	s	object:2
timestamp	lib/shared/src/chat/transcript/index.ts	/^            const { timestamp } = this.interactions[index]$/;"	C	method:Transcript.lastInteractionTimestamp
timestamp	lib/shared/src/chat/transcript/interaction.ts	/^        public readonly timestamp: string = new Date().toISOString(),$/;"	p	class:Interaction
timestamp	lib/shared/src/chat/transcript/interaction.ts	/^    timestamp: string$/;"	p	interface:InteractionJSON
timestamp	lib/shared/src/chat/useClient.ts	/^            const timestamp = messageId || transcript.getLastInteraction()?.timestamp || new Dat/;"	C
timestamp	vscode/src/services/InlineController.ts	/^        const timestamp = new Date(Date.now())$/;"	C
timestamp	vscode/test/completions/run-code-completions-on-dataset.ts	/^    const timestamp = Date.now().toString()$/;"	C	function:generateCompletionsForDataset
timestamp	vscode/test/completions/run-code-completions-on-dataset.ts	/^    timestamp: string$/;"	p	interface:CompletionResult
timezonePlugin	lib/shared/src/plugins/built-in/index.ts	/^    timezonePlugin,$/;"	C
timezonePlugin	lib/shared/src/plugins/built-in/timezone.ts	/^export const timezonePlugin: Plugin = {$/;"	C
title	agent/src/protocol.ts	/^    title: string$/;"	p	interface:RecipeInfo
title	lib/shared/src/hallucinations-detector/index.ts	/^    const title = token.isHallucinated$/;"	C	function:getHighlightedTokenHTML
title	lib/shared/src/plugins/built-in/github-issues.ts	/^    title: string$/;"	p	interface:Item
title	vscode/package.json	/^            "title": "Ask Cody a Question",$/;"	s	object:contributes.walkthroughs.0.steps.0
title	vscode/package.json	/^            "title": "Code Autocomplete (Beta)",$/;"	s	object:contributes.walkthroughs.0.steps.4
title	vscode/package.json	/^            "title": "Explain Code",$/;"	s	object:contributes.walkthroughs.0.steps.1
title	vscode/package.json	/^            "title": "Fixup Code",$/;"	s	object:contributes.walkthroughs.0.steps.2
title	vscode/package.json	/^            "title": "Inline Chat (Beta)",$/;"	s	object:contributes.walkthroughs.0.steps.3
title	vscode/package.json	/^            "title": "Learn More & Feedback",$/;"	s	object:contributes.walkthroughs.0.steps.5
title	vscode/package.json	/^          "title": "Cody Inline Chat",$/;"	s	object:contributes.configuration.properties.cody.inlineChat.enabled
title	vscode/package.json	/^          "title": "Cody: Sign In",$/;"	s	object:contributes.menus.commandPalette.10
title	vscode/package.json	/^          "title": "Reload",$/;"	s	object:contributes.menus.view/title.9
title	vscode/package.json	/^          "title": "Sourcegraph Cody",$/;"	s	object:contributes.viewsContainers.activitybar.0
title	vscode/package.json	/^        "title": "Apply all fixups",$/;"	s	object:contributes.commands.29
title	vscode/package.json	/^        "title": "Apply fixup",$/;"	s	object:contributes.commands.28
title	vscode/package.json	/^        "title": "Apply fixups to selected directory",$/;"	s	object:contributes.commands.30
title	vscode/package.json	/^        "title": "Ask Cody",$/;"	s	object:contributes.commands.19
title	vscode/package.json	/^        "title": "Chat History",$/;"	s	object:contributes.commands.18
title	vscode/package.json	/^        "title": "Codebase Context Search"$/;"	s	object:contributes.commands.10
title	vscode/package.json	/^        "title": "Collapse All Inline Chats",$/;"	s	object:contributes.commands.22
title	vscode/package.json	/^        "title": "Custom Recipes (Internal Experimental)",$/;"	s	object:contributes.commands.32
title	vscode/package.json	/^        "title": "Explain Code at a High Level"$/;"	s	object:contributes.commands.3
title	vscode/package.json	/^        "title": "Explain Code in Detail"$/;"	s	object:contributes.commands.2
title	vscode/package.json	/^        "title": "Extension Settings",$/;"	s	object:contributes.commands.15
title	vscode/package.json	/^        "title": "Feedback",$/;"	s	object:contributes.commands.1
title	vscode/package.json	/^        "title": "Find Code Smells"$/;"	s	object:contributes.commands.11
title	vscode/package.json	/^        "title": "Fixup (Experimental)",$/;"	s	object:contributes.commands.26
title	vscode/package.json	/^        "title": "Generate Docstring"$/;"	s	object:contributes.commands.5
title	vscode/package.json	/^        "title": "Generate Unit Test"$/;"	s	object:contributes.commands.4
title	vscode/package.json	/^        "title": "Getting Started with Cody",$/;"	s	object:contributes.walkthroughs.0
title	vscode/package.json	/^        "title": "Go to Fixup",$/;"	s	object:contributes.commands.27
title	vscode/package.json	/^        "title": "Guardrails Debug Attribution",$/;"	s	object:contributes.commands.24
title	vscode/package.json	/^        "title": "Help & Getting Started",$/;"	s	object:contributes.commands.0
title	vscode/package.json	/^        "title": "Improve Variable Names"$/;"	s	object:contributes.commands.8
title	vscode/package.json	/^        "title": "Inline Fixup"$/;"	s	object:contributes.commands.9
title	vscode/package.json	/^        "title": "Loading",$/;"	s	object:contributes.commands.21
title	vscode/package.json	/^        "title": "Remove Inline Chat",$/;"	s	object:contributes.commands.20
title	vscode/package.json	/^        "title": "Show diff for fixup",$/;"	s	object:contributes.commands.31
title	vscode/package.json	/^        "title": "Sign In"$/;"	s	object:contributes.commands.16
title	vscode/package.json	/^        "title": "Sign Out…",$/;"	s	object:contributes.commands.13
title	vscode/package.json	/^        "title": "Start New Thread",$/;"	s	object:contributes.commands.23
title	vscode/package.json	/^        "title": "Start a New Chat Session",$/;"	s	object:contributes.commands.17
title	vscode/package.json	/^        "title": "Summarize Recent Code Changes"$/;"	s	object:contributes.commands.7
title	vscode/package.json	/^        "title": "Switch Account…"$/;"	s	object:contributes.commands.14
title	vscode/package.json	/^        "title": "Touch"$/;"	s	object:contributes.commands.25
title	vscode/package.json	/^        "title": "Translate to Language"$/;"	s	object:contributes.commands.6
title	vscode/package.json	/^        "title": "User Settings",$/;"	s	object:contributes.commands.12
title	vscode/package.json	/^      "title": "Cody",$/;"	s	object:contributes.configuration
title	vscode/resources/samples/user-cody.json	/^  "title": "Cody Custom Recipes - User",$/;"	s
title	vscode/resources/samples/workspace-cody.json	/^  "title": "Cody Custom Recipes - Workspace",$/;"	s
title	vscode/src/my-cody/InputMenu.ts	/^    const title = 'Cody: Custom Recipes - Recipe Type'$/;"	C
title	vscode/src/non-stop/codelenses.ts	/^            const title = getApplyingLens(codeLensRange)$/;"	C	function:getLensesForTask
title	vscode/src/non-stop/codelenses.ts	/^            const title = getAskingLens(codeLensRange)$/;"	C	function:getLensesForTask
title	vscode/src/non-stop/codelenses.ts	/^            const title = getErrorLens(codeLensRange)$/;"	C	function:getLensesForTask
title	vscode/src/non-stop/codelenses.ts	/^            const title = getReadyLens(codeLensRange, task.id)$/;"	C	function:getLensesForTask
title	vscode/src/non-stop/codelenses.ts	/^            const title = getWaitingLens(codeLensRange)$/;"	C	function:getLensesForTask
title	vscode/src/services/CodeLensProvider.ts	/^    const title = new vscode.CodeLens(codeLensRange)$/;"	C	function:getErrorLenses
title	vscode/src/services/CodeLensProvider.ts	/^    const title = new vscode.CodeLens(codeLensRange)$/;"	C	function:getLenses
title	vscode/test/e2e/helpers.ts	/^                const title = await frame.title()$/;"	C	function:getCodySidebar
to	agent/src/editor.ts	/^        const to = offsets.offset(document.selection.end)$/;"	C
toChat	lib/shared/src/chat/transcript/index.ts	/^    public toChat(): ChatMessage[] {$/;"	m	class:Transcript
toChat	lib/shared/src/chat/transcript/interaction.ts	/^    public toChat(): ChatMessage[] {$/;"	m	class:Interaction
toChatPromise	lib/shared/src/chat/transcript/index.ts	/^    public async toChatPromise(): Promise<ChatMessage[]> {$/;"	m	class:Transcript
toChatPromise	lib/shared/src/chat/transcript/interaction.ts	/^    public async toChatPromise(): Promise<ChatMessage[]> {$/;"	m	class:Interaction
toDiffPosition	vscode/src/non-stop/FixupDocumentEditObserver.ts	/^function toDiffPosition(position: vscode.Position): Position {$/;"	f
toDiffRange	vscode/src/non-stop/FixupDocumentEditObserver.ts	/^function toDiffRange(range: vscode.Range): Range {$/;"	f
toInlineCompletionItems	vscode/src/completions/index.ts	/^function toInlineCompletionItems($/;"	f
toJSON	lib/shared/src/chat/recipes/my-prompt.ts	/^function toJSON(context: string): string {$/;"	f
toJSON	lib/shared/src/chat/transcript/index.ts	/^    public async toJSON(scope?: TranscriptJSONScope): Promise<TranscriptJSON> {$/;"	m	class:Transcript
toJSON	lib/shared/src/chat/transcript/interaction.ts	/^    public async toJSON(): Promise<InteractionJSON> {$/;"	m	class:Interaction
toJSONEmpty	lib/shared/src/chat/transcript/index.ts	/^    public toJSONEmpty(scope?: TranscriptJSONScope): TranscriptJSON {$/;"	m	class:Transcript
toLanguage	lib/shared/src/chat/recipes/translate.ts	/^        const markdownID = languageMarkdownID[toLanguage] || ''$/;"	C	method:TranslateToLanguage.getInteraction
toLanguage	lib/shared/src/chat/recipes/translate.ts	/^        const toLanguage = await context.editor.showQuickPick(languageNames)$/;"	C	method:TranslateToLanguage.getInteraction
toPartialUtf8String	lib/shared/src/sourcegraph-api/utils.ts	/^export function toPartialUtf8String(buf: Buffer): { str: string; buf: Buffer } {$/;"	f
toString	vscode/src/non-stop/FixupFile.ts	/^    public toString(): string {$/;"	m	class:FixupFile
toVsCodePosition	vscode/src/non-stop/FixupDocumentEditObserver.ts	/^function toVsCodePosition(position: Position): vscode.Position {$/;"	f
toVsCodeRange	vscode/src/non-stop/FixupDocumentEditObserver.ts	/^function toVsCodeRange(range: Range): vscode.Range {$/;"	f
toggleIncludeInferredFile	lib/shared/src/chat/useClient.ts	/^    const toggleIncludeInferredFile = useCallback($/;"	C
toggleIncludeInferredFile	lib/shared/src/chat/useClient.ts	/^    toggleIncludeInferredFile: () => void$/;"	p	interface:CodyClient
toggleIncludeInferredRepository	lib/shared/src/chat/useClient.ts	/^    const toggleIncludeInferredRepository = useCallback($/;"	C
toggleIncludeInferredRepository	lib/shared/src/chat/useClient.ts	/^    toggleIncludeInferredRepository: () => void$/;"	p	interface:CodyClient
token	lib/shared/src/hallucinations-detector/index.ts	/^    for (const token of tokens) {$/;"	C	function:detectTokens
token	lib/shared/src/hallucinations-detector/index.ts	/^    for (const token of tokens) {$/;"	C	function:highlightLine
token	vscode/src/completions/completion.test.ts	/^            const token: any = {$/;"	C
token	vscode/src/services/AuthMenus.ts	/^    const token = await vscode.window.showInputBox(LoginStepOptions[1])$/;"	C	function:TokenInputBox
token	vscode/src/services/AuthMenus.ts	/^    token: string | null | undefined$/;"	p	interface:LoginInput
token	vscode/src/services/AuthProvider.ts	/^                const token = await this.secretStorage.get(tokenKey)$/;"	C
token	vscode/src/services/AuthProvider.ts	/^        const token = (await this.secretStorage.get(lastEndpoint || '')) || this.config.accessTo/;"	C
token	vscode/src/services/AuthProvider.ts	/^        const token = await this.secretStorage.get('SOURCEGRAPH_CODY_APP')$/;"	C
token	vscode/src/services/AuthProvider.ts	/^        const token = config.accessToken$/;"	C
token	vscode/src/services/AuthProvider.ts	/^        const token = params.get('code')$/;"	C
token	vscode/src/services/LocalAppDetector.ts	/^        const token = appJson.token$/;"	C
token	vscode/src/services/LocalAppFsPaths.ts	/^    token: string$/;"	C
token	vscode/src/testutils/mocks.ts	/^    public token: unknown$/;"	p	class:CancellationTokenSource
tokenKey	vscode/src/services/AuthProvider.ts	/^                const tokenKey = isLocalApp(selectedEndpoint) ? 'SOURCEGRAPH_CODY_APP' : selecte/;"	C
tokenLimit	vscode/src/chat/ChatViewProvider.ts	/^        const tokenLimit = codyConfig.get<number>('provider.limit.prompt')$/;"	C
tokenize0	vscode/src/wink-nlp-utils.d.ts	/^            function tokenize0(s: string): string[]$/;"	f	namespace:winkUtils
tokens	lib/shared/src/guardrails/index.ts	/^    const tokens = parseMarkdown(text)$/;"	C	function:annotateAttribution
tokens	lib/shared/src/hallucinations-detector/index.ts	/^    const tokens = await detectTokens(markdownTokens, filesExist)$/;"	C	function:highlightTokens
tokens	lib/shared/src/hallucinations-detector/index.ts	/^    tokens: HighlightedToken[]$/;"	p	interface:HighlightTokensResult
tokens	vscode/scripts/release.ts	/^const tokens = {$/;"	C
tokensPerInteraction	lib/shared/src/chat/transcript/transcript.test.ts	/^        const { transcript, tokensPerInteraction } = await generateLongTranscript()$/;"	C
tokensToChars	vscode/src/completions/providers/anthropic.ts	/^function tokensToChars(tokens: number): number {$/;"	f
tools	vscode/src/my-cody/MyPromptController.ts	/^    private tools: MyToolsProvider$/;"	p	class:MyPromptController
tools	vscode/src/my-cody/MyToolsProvider.ts	/^    private tools = new Map<string, string>()$/;"	p	class:MyToolsProvider
top10	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const top10 = filesnamesWithScores.slice(0, numResults)$/;"	C	method:LocalKeywordContextFetcher.getContext
topK	cli/src/client/completions.ts	/^    topK: -1,$/;"	C
topK	lib/shared/src/chat/chat.ts	/^    topK: -1,$/;"	C
topK	lib/shared/src/sourcegraph-api/completions/types.ts	/^    topK?: number$/;"	p	interface:CompletionParameters
topK	slack/src/services/stream-completions.ts	/^    topK: -1,$/;"	C
topP	lib/shared/src/sourcegraph-api/completions/types.ts	/^    topP?: number$/;"	p	interface:CompletionParameters
top_p	vscode/src/completions/providers/unstable-codegen.ts	/^            top_p: 0.95,$/;"	C	method:UnstableCodeGenProvider.generateCompletions
topic	lib/shared/src/chat/bot-response-multiplexer.ts	/^            const topic = topicName(match[0])$/;"	C	method:BotResponseMultiplexer.publishStep
topicName	lib/shared/src/chat/bot-response-multiplexer.ts	/^function topicName(tag: string): string {$/;"	f
topics_	lib/shared/src/chat/bot-response-multiplexer.ts	/^    private topics_: string[] = []$/;"	p	class:BotResponseMultiplexer
total	vscode/src/completions/document.ts	/^        let total = 0$/;"	v
totalFiles	vscode/src/local-context/local-keyword-context-fetcher.ts	/^        const { fileTermCounts, termTotalFiles, totalFiles } = fileMatches$/;"	C	method:LocalKeywordContextFetcher.fetchKeywordFiles
totalSteps	vscode/src/services/AuthMenus.ts	/^        totalSteps: 2,$/;"	C
totalSteps	vscode/src/services/AuthMenus.ts	/^    totalSteps: number$/;"	p	interface:LoginMenuItem
totalSuffix	vscode/src/completions/document.ts	/^    let totalSuffix = 0$/;"	v
trace	lib/shared/src/sourcegraph-api/completions/browserClient.ts	/^        const trace = parameters.get('trace')$/;"	C	method:SourcegraphBrowserCompletionsClient.stream
trailingSlashRegexp	vscode/src/configuration.ts	/^    const trailingSlashRegexp = \/\\\/$\/$/;"	C	function:sanitizeCodebase
trailingSlashRegexp	vscode/src/configuration.ts	/^    const trailingSlashRegexp = \/\\\/$\/$/;"	C	function:sanitizeServerEndpoint
transcript	cli/src/client/completions.ts	/^    const transcript = new Transcript()$/;"	C	function:getCompletionWithContext
transcript	lib/shared/src/chat/client.ts	/^    const transcript = initialTranscript || new Transcript()$/;"	C	function:createClient
transcript	lib/shared/src/chat/client.ts	/^    readonly transcript: Transcript$/;"	p	interface:Client
transcript	lib/shared/src/chat/transcript/transcript.test.ts	/^        const transcript = new Transcript()$/;"	C
transcript	lib/shared/src/chat/transcript/transcript.test.ts	/^        const { transcript, tokensPerInteraction } = await generateLongTranscript()$/;"	C
transcript	lib/shared/src/chat/transcript/transcript.test.ts	/^    const transcript = new Transcript()$/;"	C	function:generateLongTranscript
transcript	lib/shared/src/chat/useClient.ts	/^    readonly transcript: Transcript | null$/;"	p	interface:CodyClient
transcript	slack/src/mention-handler.ts	/^    const transcript = await restoreTranscriptFromSlackThread(slackChannelFilter || channelName!/;"	C	function:handleHumanMessage
transcript	slack/src/mention-handler.ts	/^    const transcript = new Transcript()$/;"	C	function:restoreTranscriptFromSlackThread
transcript	vscode/src/chat/ChatViewProvider.ts	/^        const transcript = Transcript.fromJSON(await this.transcript.toJSON())$/;"	C
treeItem	vscode/src/non-stop/TaskViewProvider.ts	/^        const treeItem = new FixupTaskTreeItem(task.instruction, task)$/;"	C
treeNode	vscode/src/non-stop/TaskViewProvider.ts	/^        const treeNode = this.treeNodes.get(task.fixupFile.fileName) || new FixupTaskTreeItem(ta/;"	C
treeNode	vscode/src/non-stop/TaskViewProvider.ts	/^        const treeNode = this.treeNodes.get(task.fsPath)$/;"	C
triggerMoreEagerly	vscode/src/completions/index.ts	/^            triggerMoreEagerly,$/;"	C
triggerMoreEagerly	vscode/src/completions/index.ts	/^    triggerMoreEagerly: boolean$/;"	p	interface:CodyCompletionItemProviderConfig
triggeredForSuggestWidgetSelection	vscode/src/completions/index.ts	/^        let triggeredForSuggestWidgetSelection: string | undefined$/;"	v
triggeredMoreEagerly	vscode/src/completions/index.ts	/^        const triggeredMoreEagerly = this.triggerMoreEagerly && cursorAtWord$/;"	C
trimEndOnLastLineIfWhitespaceOnly	vscode/src/completions/cache.ts	/^        const trimmedPrefix = trim ? trimEndOnLastLineIfWhitespaceOnly(prefix) : prefix$/;"	C	method:CompletionsCache.get
trimEndOnLastLineIfWhitespaceOnly	vscode/src/completions/text-processing.ts	/^export function trimEndOnLastLineIfWhitespaceOnly(text: string): string {$/;"	f
trimLeadingWhitespaceUntilNewline	vscode/src/completions/text-processing.ts	/^export function trimLeadingWhitespaceUntilNewline(str: string): string {$/;"	f
trimRegex	vscode/src/chat/fastFileFinder.ts	/^const trimRegex = makeTrimRegex(path.sep)$/;"	C
trimSpace	vscode/src/completions/text-processing.ts	/^function trimSpace(s: string): TrimmedString {$/;"	f
trimUntilSuffix	vscode/src/completions/text-processing.ts	/^export function trimUntilSuffix(insertion: string, prefix: string, suffix: string): string {$/;"	f
trimmed	vscode/src/completions/text-processing.ts	/^    const trimmed = s.trim()$/;"	C	function:trimSpace
trimmed	vscode/src/completions/text-processing.ts	/^    trimmed: string$/;"	p	interface:TrimmedString
trimmedPrefix	vscode/src/completions/cache.ts	/^        const trimmedPrefix = trim ? trimEndOnLastLineIfWhitespaceOnly(prefix) : prefix$/;"	C	method:CompletionsCache.get
trimmedPrefixContainNewline	vscode/src/completions/providers/anthropic.ts	/^        const trimmedPrefixContainNewline = this.options.prefix$/;"	C	method:AnthropicProvider.postProcess
truncateMultilineString	vscode/src/completions/completion.test.ts	/^function truncateMultilineString(string: string): string {$/;"	f
truncatePrompt	lib/shared/src/chat/transcript/index.ts	/^function truncatePrompt(messages: Message[], maxTokens: number): Message[] {$/;"	f
truncateText	lib/shared/src/prompt/truncation.ts	/^export function truncateText(text: string, maxTokens: number): string {$/;"	f
truncateTextStart	lib/shared/src/prompt/truncation.ts	/^export function truncateTextStart(text: string, maxTokens: number): string {$/;"	f
truncatedContent	lib/shared/src/chat/recipes/chat-question.ts	/^        const truncatedContent = truncateText(selection.selectedText, MAX_CURRENT_FILE_TOKENS)$/;"	C	method:ChatQuestion.getEditorSelectionContext
truncatedContent	lib/shared/src/chat/recipes/chat-question.ts	/^        const truncatedContent = truncateText(visibleContent.content, MAX_CURRENT_FILE_TOKENS)$/;"	C	method:ChatQuestion.getEditorContext
truncatedContent	lib/shared/src/chat/recipes/my-prompt.ts	/^            const truncatedContent = truncateText($/;"	C	method:MyPrompt.getPackageJsonContext
truncatedContent	lib/shared/src/chat/recipes/my-prompt.ts	/^            const truncatedContent = truncateText(content.toString(), MAX_CURRENT_FILE_TOKENS)$/;"	C	method:MyPrompt.getFilePathContext
truncatedContent	lib/shared/src/chat/recipes/my-prompt.ts	/^            const truncatedContent = truncateText(fileContent.getText(), MAX_CURRENT_FILE_TOKENS/;"	C	function:populateVscodeDirContextMessage
truncatedContent	lib/shared/src/chat/recipes/my-prompt.ts	/^            const truncatedContent = truncateText(fileContent.getText(), MAX_CURRENT_FILE_TOKENS/;"	C	method:MyPrompt.getEditorOpenTabsContext
truncatedContent	lib/shared/src/chat/recipes/my-prompt.ts	/^        const truncatedContent = truncateText(output, MAX_CURRENT_FILE_TOKENS)$/;"	C	method:MyPrompt.getTerminalOutputContext
truncatedContent	lib/shared/src/chat/recipes/next-questions.ts	/^        const truncatedContent = truncateText(visibleContent.content, MAX_CURRENT_FILE_TOKENS)$/;"	C	method:NextQuestions.getEditorContext
truncatedFollowingText	lib/shared/src/chat/recipes/explain-code-detailed.ts	/^        const truncatedFollowingText = truncateText(selection.followingText, MAX_RECIPE_SURROUND/;"	C	method:ExplainCodeDetailed.getInteraction
truncatedFollowingText	lib/shared/src/chat/recipes/explain-code-high-level.ts	/^        const truncatedFollowingText = truncateText(selection.followingText, MAX_RECIPE_SURROUND/;"	C	method:ExplainCodeHighLevel.getInteraction
truncatedFollowingText	lib/shared/src/chat/recipes/generate-docstring.ts	/^        const truncatedFollowingText = truncateText(selection.followingText, MAX_RECIPE_SURROUND/;"	C	method:GenerateDocstring.getInteraction
truncatedFollowingText	lib/shared/src/chat/recipes/generate-test.ts	/^        const truncatedFollowingText = truncateText(selection.followingText, MAX_RECIPE_SURROUND/;"	C	method:GenerateTest.getInteraction
truncatedFollowingText	lib/shared/src/chat/recipes/improve-variable-names.ts	/^        const truncatedFollowingText = truncateText(selection.followingText, MAX_RECIPE_SURROUND/;"	C	method:ImproveVariableNames.getInteraction
truncatedGitCommitOutput	lib/shared/src/chat/recipes/generate-pr-description.ts	/^        const truncatedGitCommitOutput = truncateText(gitCommitOutput, MAX_RECIPE_INPUT_TOKENS)$/;"	C	method:PrDescription.getInteraction
truncatedGitLogOutput	lib/shared/src/chat/recipes/generate-release-notes.ts	/^        const truncatedGitLogOutput = truncateText(gitLogOutput, MAX_RECIPE_INPUT_TOKENS)$/;"	C	method:ReleaseNotes.getInteraction
truncatedGitLogOutput	lib/shared/src/chat/recipes/git-log.ts	/^        const truncatedGitLogOutput = truncateText(gitLogOutput, MAX_RECIPE_INPUT_TOKENS)$/;"	C	method:GitHistory.getInteraction
truncatedPrecedingText	lib/shared/src/chat/recipes/explain-code-detailed.ts	/^        const truncatedPrecedingText = truncateTextStart(selection.precedingText, MAX_RECIPE_SUR/;"	C	method:ExplainCodeDetailed.getInteraction
truncatedPrecedingText	lib/shared/src/chat/recipes/explain-code-high-level.ts	/^        const truncatedPrecedingText = truncateTextStart(selection.precedingText, MAX_RECIPE_SUR/;"	C	method:ExplainCodeHighLevel.getInteraction
truncatedPrecedingText	lib/shared/src/chat/recipes/generate-docstring.ts	/^        const truncatedPrecedingText = truncateTextStart(selection.precedingText, MAX_RECIPE_SUR/;"	C	method:GenerateDocstring.getInteraction
truncatedPrecedingText	lib/shared/src/chat/recipes/generate-test.ts	/^        const truncatedPrecedingText = truncateTextStart(selection.precedingText, MAX_RECIPE_SUR/;"	C	method:GenerateTest.getInteraction
truncatedPrecedingText	lib/shared/src/chat/recipes/improve-variable-names.ts	/^        const truncatedPrecedingText = truncateTextStart(selection.precedingText, MAX_RECIPE_SUR/;"	C	method:ImproveVariableNames.getInteraction
truncatedSelectedText	lib/shared/src/chat/recipes/explain-code-detailed.ts	/^        const truncatedSelectedText = truncateText(selection.selectedText, MAX_RECIPE_INPUT_TOKE/;"	C	method:ExplainCodeDetailed.getInteraction
truncatedSelectedText	lib/shared/src/chat/recipes/explain-code-high-level.ts	/^        const truncatedSelectedText = truncateText(selection.selectedText, MAX_RECIPE_INPUT_TOKE/;"	C	method:ExplainCodeHighLevel.getInteraction
truncatedSelectedText	lib/shared/src/chat/recipes/find-code-smells.ts	/^        const truncatedSelectedText = truncateText($/;"	C	method:FindCodeSmells.getInteraction
truncatedSelectedText	lib/shared/src/chat/recipes/generate-docstring.ts	/^        const truncatedSelectedText = truncateText(selection.selectedText, MAX_RECIPE_INPUT_TOKE/;"	C	method:GenerateDocstring.getInteraction
truncatedSelectedText	lib/shared/src/chat/recipes/generate-test.ts	/^        const truncatedSelectedText = truncateText(selection.selectedText, MAX_RECIPE_INPUT_TOKE/;"	C	method:GenerateTest.getInteraction
truncatedSelectedText	lib/shared/src/chat/recipes/improve-variable-names.ts	/^        const truncatedSelectedText = truncateText(selection.selectedText, MAX_RECIPE_INPUT_TOKE/;"	C	method:ImproveVariableNames.getInteraction
truncatedSelectedText	lib/shared/src/chat/recipes/inline-chat.ts	/^        const truncatedSelectedText = truncateText(selection.selectedText, MAX_RECIPE_CONTENT_TO/;"	C	method:InlineChat.getInteraction
truncatedSelectedText	lib/shared/src/chat/recipes/inline-touch.ts	/^        const truncatedSelectedText = truncateText(selection.selectedText, MAX_RECIPE_CONTENT_TO/;"	C
truncatedSelectedText	lib/shared/src/chat/recipes/translate.ts	/^        const truncatedSelectedText = truncateText(selection.selectedText, MAX_RECIPE_INPUT_TOKE/;"	C	method:TranslateToLanguage.getInteraction
truncatedText	lib/shared/src/chat/recipes/chat-question.ts	/^        const truncatedText = truncateText(humanChatInput, MAX_HUMAN_INPUT_TOKENS)$/;"	C	method:ChatQuestion.getInteraction
truncatedText	lib/shared/src/chat/recipes/context-search.ts	/^        const truncatedText = truncateText(query.replace('\/search ', '').replace('\/s ', ''), M/;"	C	method:ContextSearch.getInteraction
truncatedText	lib/shared/src/chat/recipes/inline-chat.ts	/^        const truncatedText = truncateText(humanChatInput, MAX_HUMAN_INPUT_TOKENS)$/;"	C	method:InlineChat.getInteraction
truncatedText	lib/shared/src/chat/recipes/inline-touch.ts	/^        const truncatedText = truncateText(humanInput, MAX_HUMAN_INPUT_TOKENS)$/;"	C
truncatedText	lib/shared/src/chat/recipes/my-prompt.ts	/^        const truncatedText = truncateText(promptText + note, MAX_HUMAN_INPUT_TOKENS)$/;"	C	method:MyPrompt.getInteraction
truncatedText	lib/shared/src/chat/recipes/next-questions.ts	/^        const truncatedText = truncateText(humanChatInput, maxTokenCount)$/;"	C	method:NextQuestions.getInteraction
try	lib/shared/src/plugins/built-in/confluence.ts	/^    try {$/;"	C
try	lib/shared/src/plugins/built-in/github-issues.ts	/^    try {$/;"	C
try	vscode/src/services/EventLogger.ts	/^    try {$/;"	C	function:logEvent
ts-node	package.json	/^    "ts-node": "^10.9.1",$/;"	s	object:devDependencies
tsconfig	.vscode/tasks.json	/^      "tsconfig": "tsconfig.json",$/;"	s	object:tasks.0
tslib	package.json	/^          "tslib": "^2.1.0"$/;"	s	object:pnpm.packageExtensions.@vscode/webview-ui-toolkit.dependencies
tslib	package.json	/^    "tslib": "2.1.0"$/;"	s	object:resolutions
turnDone	lib/shared/src/chat/bot-response-multiplexer.test.ts	/^        const turnDone = multiplexer.notifyTurnComplete()$/;"	C
type	.vscode/launch.json	/^      "type": "extensionHost",$/;"	s	object:configurations.0
type	.vscode/tasks.json	/^      "type": "npm",$/;"	s	object:tasks.1
type	.vscode/tasks.json	/^      "type": "typescript",$/;"	s	object:tasks.0
type	agent/package.json	/^    "type": "git",$/;"	s	object:repository
type	cli/package.json	/^    "type": "git",$/;"	s	object:repository
type	lib/shared/package.json	/^    "type": "git",$/;"	s	object:repository
type	lib/shared/src/hallucinations-detector/index.ts	/^    type: 'file' | 'symbol'$/;"	p	interface:HighlightedToken
type	lib/shared/src/sourcegraph-api/completions/types.ts	/^    type: 'completion'$/;"	p	interface:CompletionEvent
type	lib/shared/src/sourcegraph-api/completions/types.ts	/^    type: 'done'$/;"	p	interface:DoneEvent
type	lib/shared/src/sourcegraph-api/completions/types.ts	/^    type: 'error'$/;"	p	interface:ErrorEvent
type	lib/shared/src/unified-context/index.ts	/^    type: 'FileChunkContext'$/;"	p	interface:FileChunkContext
type	lib/ui/package.json	/^    "type": "git",$/;"	s	object:repository
type	package.json	/^    "type": "git",$/;"	s	object:repository
type	vscode/package.json	/^                  "type": "string",$/;"	s	object:contributes.configuration.properties.cody.plugins.config.properties.apiNinjas.properties.apiKey
type	vscode/package.json	/^                  "type": "string",$/;"	s	object:contributes.configuration.properties.cody.plugins.config.properties.confluence.properties.apiToken
type	vscode/package.json	/^                  "type": "string",$/;"	s	object:contributes.configuration.properties.cody.plugins.config.properties.confluence.properties.baseUrl
type	vscode/package.json	/^                  "type": "string",$/;"	s	object:contributes.configuration.properties.cody.plugins.config.properties.confluence.properties.email
type	vscode/package.json	/^                  "type": "string",$/;"	s	object:contributes.configuration.properties.cody.plugins.config.properties.github.properties.apiToken
type	vscode/package.json	/^                  "type": "string",$/;"	s	object:contributes.configuration.properties.cody.plugins.config.properties.github.properties.baseUrl
type	vscode/package.json	/^                  "type": "string",$/;"	s	object:contributes.configuration.properties.cody.plugins.config.properties.github.properties.org
type	vscode/package.json	/^                  "type": "string",$/;"	s	object:contributes.configuration.properties.cody.plugins.config.properties.github.properties.repo
type	vscode/package.json	/^              "type": "object",$/;"	s	object:contributes.configuration.properties.cody.plugins.config.properties.apiNinjas
type	vscode/package.json	/^              "type": "object",$/;"	s	object:contributes.configuration.properties.cody.plugins.config.properties.confluence
type	vscode/package.json	/^              "type": "object",$/;"	s	object:contributes.configuration.properties.cody.plugins.config.properties.github
type	vscode/package.json	/^          "type": "boolean",$/;"	s	object:contributes.configuration.properties.cody.autocomplete.advanced.cache
type	vscode/package.json	/^          "type": "boolean",$/;"	s	object:contributes.configuration.properties.cody.autocomplete.advanced.embeddings
type	vscode/package.json	/^          "type": "boolean",$/;"	s	object:contributes.configuration.properties.cody.autocomplete.enabled
type	vscode/package.json	/^          "type": "boolean",$/;"	s	object:contributes.configuration.properties.cody.autocomplete.experimental.completeSuggestWidgetSelection
type	vscode/package.json	/^          "type": "boolean",$/;"	s	object:contributes.configuration.properties.cody.autocomplete.experimental.triggerMoreEagerly
type	vscode/package.json	/^          "type": "boolean",$/;"	s	object:contributes.configuration.properties.cody.completions.advanced.cache
type	vscode/package.json	/^          "type": "boolean",$/;"	s	object:contributes.configuration.properties.cody.completions.advanced.embeddings
type	vscode/package.json	/^          "type": "boolean",$/;"	s	object:contributes.configuration.properties.cody.debug.enable
type	vscode/package.json	/^          "type": "boolean",$/;"	s	object:contributes.configuration.properties.cody.debug.verbose
type	vscode/package.json	/^          "type": "boolean",$/;"	s	object:contributes.configuration.properties.cody.experimental.chatPredictions
type	vscode/package.json	/^          "type": "boolean",$/;"	s	object:contributes.configuration.properties.cody.experimental.customRecipes
type	vscode/package.json	/^          "type": "boolean",$/;"	s	object:contributes.configuration.properties.cody.experimental.guardrails
type	vscode/package.json	/^          "type": "boolean",$/;"	s	object:contributes.configuration.properties.cody.experimental.suggestions
type	vscode/package.json	/^          "type": "boolean",$/;"	s	object:contributes.configuration.properties.cody.inlineChat.enabled
type	vscode/package.json	/^          "type": "boolean",$/;"	s	object:contributes.configuration.properties.cody.plugins.debug.enabled
type	vscode/package.json	/^          "type": "boolean",$/;"	s	object:contributes.configuration.properties.cody.plugins.enabled
type	vscode/package.json	/^          "type": "object",$/;"	s	object:contributes.configuration.properties.cody.customHeaders
type	vscode/package.json	/^          "type": "object",$/;"	s	object:contributes.configuration.properties.cody.plugins.config
type	vscode/package.json	/^          "type": "string",$/;"	s	object:contributes.configuration.properties.cody.autocomplete.advanced.accessToken
type	vscode/package.json	/^          "type": "string",$/;"	s	object:contributes.configuration.properties.cody.autocomplete.advanced.provider
type	vscode/package.json	/^          "type": "string",$/;"	s	object:contributes.configuration.properties.cody.autocomplete.advanced.serverEndpoint
type	vscode/package.json	/^          "type": "string",$/;"	s	object:contributes.configuration.properties.cody.codebase
type	vscode/package.json	/^          "type": "string",$/;"	s	object:contributes.configuration.properties.cody.completions.advanced.accessToken
type	vscode/package.json	/^          "type": "string",$/;"	s	object:contributes.configuration.properties.cody.completions.advanced.provider
type	vscode/package.json	/^          "type": "string",$/;"	s	object:contributes.configuration.properties.cody.completions.advanced.serverEndpoint
type	vscode/package.json	/^          "type": "string",$/;"	s	object:contributes.configuration.properties.cody.debug.filter
type	vscode/package.json	/^          "type": "string",$/;"	s	object:contributes.configuration.properties.cody.serverEndpoint
type	vscode/package.json	/^          "type": "string",$/;"	s	object:contributes.configuration.properties.cody.useContext
type	vscode/package.json	/^          "type": "webview",$/;"	s	object:contributes.views.cody.0
type	vscode/package.json	/^      "type": "object",$/;"	s	object:contributes.configuration
type	vscode/package.json	/^    "type": "git",$/;"	s	object:repository
type	vscode/src/log.ts	/^        const type = 'prompt' in params ? 'code-completion' : 'messages' in params ? 'completion/;"	C
type	vscode/src/my-cody/types.ts	/^    type?: CodyPromptType$/;"	p	interface:CodyPrompt
type	web/package.json	/^    "type": "git",$/;"	s	object:repository
type	web/src/settings/useConfig.ts	/^export type WebConfiguration = ClientInit['config']$/;"	C
typecheck	completions-review-tool/package.json	/^    "typecheck": "tsc"$/;"	s	object:scripts
typedData	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                            const typedData = data as RipgrepStreamData$/;"	C	method:LocalKeywordContextFetcher.fetchFileStats
types	lib/shared/package.json	/^  "types": "dist\/index.d.ts",$/;"	s
types	lib/ui/package.json	/^  "types": "dist\/index.d.ts",$/;"	s
types	vscode/test/integration/tsconfig.json	/^    "types": ["mocha", "node"],$/;"	a	object:compilerOptions
typescript	package.json	/^    "typescript": "^5.1.6",$/;"	s	object:devDependencies
typescript.format.semicolons	.vscode/settings.json	/^  "typescript.format.semicolons": "remove",$/;"	s
typescript.preferences.importModuleSpecifier	.vscode/settings.json	/^  "typescript.preferences.importModuleSpecifier": "relative",$/;"	s
typescript.preferences.quoteStyle	.vscode/settings.json	/^  "typescript.preferences.quoteStyle": "single",$/;"	s
typescript.tsc.autoDetect	.vscode/settings.json	/^  "typescript.tsc.autoDetect": "off",$/;"	s
typescript.tsdk	.vscode/settings.json	/^  "typescript.tsdk": "node_modules\/typescript\/lib",$/;"	s
u	vscode/src/completions/text-processing.ts	/^const BAD_COMPLETION_START = \/^(\\p{Emoji_Presentation}|\\u{200B}|\\+ |- |\\. )+(\\s)+\/u$/;"	C
u	vscode/src/non-stop/diff.test.ts	/^            for (let u = 0; u < a.length; u++) {$/;"	v
u	vscode/src/non-stop/diff.test.ts	/^            for (let u = 0; u < palindrome.length; u++) {$/;"	v
unauthenticatedStatus	vscode/src/chat/protocol.ts	/^export const unauthenticatedStatus = {$/;"	C
undo	vscode/src/services/CodeLensProvider.ts	/^    const undo = getInlineUndoLens(id, codeLensRange)$/;"	C	function:getLenses
unicorn/filename-case	cli/.eslintrc.json	/^    "unicorn\/filename-case": "off",$/;"	s	object:rules
unicorn/filename-case	lib/shared/.eslintrc.json	/^    "unicorn\/filename-case": "off"$/;"	s	object:rules
unicorn/filename-case	lib/ui/.eslintrc.json	/^    "unicorn\/filename-case": "off",$/;"	s	object:rules
unicorn/filename-case	slack/.eslintrc.json	/^    "unicorn\/filename-case": "off",$/;"	s	object:rules
unicorn/filename-case	vscode/.eslintrc.json	/^    "unicorn\/filename-case": "off"$/;"	s	object:rules
unicorn/filename-case	web/.eslintrc.json	/^    "unicorn\/filename-case": "off",$/;"	s	object:rules
unifiedContextFetcher	lib/shared/src/codebase-context/index.ts	/^        private unifiedContextFetcher?: UnifiedContextFetcher | null,$/;"	p	class:CodebaseContext
unifiedContextFetcherClient	lib/shared/src/chat/useClient.ts	/^            const unifiedContextFetcherClient = new UnifiedContextFetcherClient(graphqlClient, r/;"	C
union	vscode/src/completions/bestJaccardMatch.ts	/^    const union = left + right - intersection$/;"	C	function:jaccardDistance
uniqueResults	vscode/src/completions/index.ts	/^    const uniqueResults = [...new Map(visibleResults.map(c => [c.content, c])).values()]$/;"	C	function:processCompletions
uniques	lib/shared/src/codebase-context/index.ts	/^        const uniques = new Map<string, ContextResult>()$/;"	C	method:CodebaseContext.mergeContextResults
uniques	vscode/src/local-context/local-keyword-context-fetcher.ts	/^function uniques(results: { filename: string; score: number }[]): { filename: string; score: num/;"	f
unsortedMatchingFiles	vscode/src/local-context/filename-context-fetcher.ts	/^        const unsortedMatchingFiles = await this.getFilenames(rootPath, filenameFragments, 3)$/;"	C	method:FilenameContextFetcher.getContext
unvalidatedPaths	vscode/src/chat/fastFileFinder.ts	/^    const unvalidatedPaths = new Set<string>(filePaths)$/;"	C
updateConfiguration	vscode/src/configuration.ts	/^export async function updateConfiguration(configKey: string, configValue: string): Promise<void>/;"	f
updateContextMessages	slack/src/slack/message-interaction.ts	/^    public async updateContextMessages($/;"	m	class:SlackInteraction
updateContextMessagesFromVectorStore	slack/src/slack/message-interaction.ts	/^    public async updateContextMessagesFromVectorStore(vectorStore: HNSWLib, numResults: number) /;"	m	class:SlackInteraction
updateDiffRange	vscode/src/non-stop/FixupDocumentEditObserver.ts	/^function updateDiffRange(range: Range, changes: TextChange[]): Range {$/;"	f
updateEdits	vscode/src/non-stop/FixupDocumentEditObserver.ts	/^function updateEdits(edits: Edit[], changes: TextChange[]): void {$/;"	f
updateMessage	slack/src/slack/helpers.ts	/^export async function updateMessage(channel: string, messageTs: string, newText: string): Promis/;"	f
updateMessageWithFileList	slack/src/slack/helpers.ts	/^export async function updateMessageWithFileList($/;"	f
updateRange	vscode/src/non-stop/tracked-range.ts	/^export function updateRange(range: vscode.Range, change: TextChange): vscode.Range {$/;"	f
updateRangeMultipleChanges	vscode/src/non-stop/tracked-range.ts	/^export function updateRangeMultipleChanges(range: vscode.Range, changes: TextChange[]): vscode.R/;"	f
updateRangeOnDocChange	vscode/src/services/InlineAssist.ts	/^export function updateRangeOnDocChange(current: vscode.Range, change: vscode.Range, changeText: /;"	f
updateRanges	vscode/src/non-stop/FixupDocumentEditObserver.ts	/^function updateRanges(ranges: Range[], changes: TextChange[]): void {$/;"	f
updatedMessage	slack/src/mention-handler.ts	/^        const updatedMessage = { text }$/;"	C	function:mergeSequentialUserMessages
updatedRange	vscode/src/non-stop/FixupDocumentEditObserver.ts	/^            const updatedRange = updateRangeMultipleChanges(task.selectionRange, changes)$/;"	C	method:FixupDocumentEditObserver.textDocumentChanged
updatedRange	vscode/src/non-stop/tracked-range.test.ts	/^    const updatedRange = updateRange(scenario.tracked, { range: scenario.edited, text: replaceme/;"	C	function:show
updatedTranscript	lib/shared/src/chat/useClient.ts	/^            const updatedTranscript = await new Promise<Transcript | null>(resolve => {$/;"	C
updated_at	lib/shared/src/plugins/built-in/github-issues.ts	/^    updated_at: string$/;"	p	interface:Item
uri	lib/shared/src/hallucinations-detector/index.ts	/^        const uri = new URL(fileUri).href$/;"	C	function:getHighlightedTokenHTML
uri	vscode/src/chat/ChatViewProvider.ts	/^                    const uri = vscode.Uri.file(path.join(rootPath, message.filePath))$/;"	C
uri	vscode/src/chat/utils.ts	/^        const uri = new URL(cloneURL.replace('git@', ''))$/;"	C	function:convertGitCloneURLToCodebaseName
uri	vscode/src/completions/context-local.ts	/^        const index = allUris.findIndex(uri => uri.toString() === visibleUri.toString())$/;"	C	function:getRelevantFiles
uri	vscode/src/completions/context-local.ts	/^    for (const { uri, contents } of files) {$/;"	C	function:getContextFromCurrentEditor
uri	vscode/src/completions/context-local.ts	/^    uri: vscode.Uri$/;"	p	interface:FileContents
uri	vscode/src/completions/docprovider.ts	/^        const completionGroups = this.completionsByUri[uri.toString()]$/;"	C
uri	vscode/src/editor/vscode-editor.ts	/^        const uri = vscode.window.activeTextEditor?.document?.uri$/;"	C	method:VSCodeEditor.getWorkspaceRootPath
uri	vscode/src/local-context/local-keyword-context-fetcher.ts	/^                    const uri = vscode.Uri.file(path.join(rootPath, filename))$/;"	C	method:LocalKeywordContextFetcher.getSearchContext
uri	vscode/src/my-cody/MyPromptController.ts	/^        const uri = isUserType ? this.builder.jsonFileUris.user : this.builder.jsonFileUris.work/;"	C	method:MyPromptController.clear
uri	vscode/src/non-stop/FixupFile.ts	/^    public get uri(): vscode.Uri {$/;"	m	class:FixupFile
uri	vscode/src/non-stop/FixupFileObserver.ts	/^        for (const uri of event.files) {$/;"	C	method:FixupFileObserver.didDeleteFiles
uri	vscode/src/services/AuthMenus.ts	/^    uri: string$/;"	p	interface:LoginMenuItem
uri	vscode/src/services/InlineAssist.test.ts	/^        const uri = vscode.Uri.file('\/tmp\/test.txt')$/;"	C
uri	vscode/src/services/LocalStorageProvider.ts	/^            const uri = new URL(endpoint).href$/;"	C	method:LocalStorage.saveEndpoint
uriScheme	vscode/src/chat/protocol.ts	/^    uriScheme: string$/;"	p	interface:LocalEnv
uriScheme	vscode/src/services/LocalAppDetector.ts	/^    uriScheme: vscode.env.uriScheme,$/;"	C
uriToFile_	vscode/src/non-stop/FixupFileObserver.ts	/^    private uriToFile_: Map<vscode.Uri, FixupFile> = new Map()$/;"	p	class:FixupFileObserver
uri_	vscode/src/non-stop/FixupFile.ts	/^        public uri_: vscode.Uri$/;"	p	class:FixupFile
uris	vscode/src/completions/context-local.ts	/^    const uris: Map<string, vscode.Uri> = new Map()$/;"	C	function:getRelevantFiles
url	agent/package.json	/^    "url": "https:\/\/github.com\/sourcegraph\/cody",$/;"	s	object:repository
url	cli/package.json	/^    "url": "https:\/\/github.com\/sourcegraph\/cody",$/;"	s	object:repository
url	lib/shared/package.json	/^    "url": "https:\/\/github.com\/sourcegraph\/cody",$/;"	s	object:repository
url	lib/shared/src/plugins/api/types.ts	/^    url: string$/;"	p	interface:PluginFunctionOutput
url	lib/shared/src/plugins/built-in/air-quality.ts	/^                const url = 'https:\/\/api.api-ninjas.com\/v1\/airquality?city=' + parameters.ci/;"	C
url	lib/shared/src/plugins/built-in/confluence.ts	/^    url: string$/;"	p	interface:SearchResult
url	lib/shared/src/plugins/built-in/github-issues.ts	/^    const url = new URL(path, baseUrl)$/;"	C
url	lib/shared/src/plugins/built-in/github-issues.ts	/^    url: Item['html_url']$/;"	p	interface:OutputItem
url	lib/shared/src/plugins/built-in/github-issues.ts	/^    url?: string$/;"	p	interface:User
url	lib/shared/src/plugins/built-in/timezone.ts	/^                const url = 'https:\/\/api.api-ninjas.com\/v1\/worldtime?city=' + parameters.cit/;"	C
url	lib/shared/src/plugins/built-in/weather.ts	/^                const url = 'https:\/\/api.api-ninjas.com\/v1\/weather?city=' + parameters.city$/;"	C
url	lib/shared/src/sourcegraph-api/graphql/client.ts	/^        const url = buildGraphQLUrl({ request: query, baseUrl: this.config.serverEndpoint })$/;"	C
url	lib/shared/src/sourcegraph-api/graphql/client.ts	/^        const url = buildGraphQLUrl({ request: query, baseUrl: this.dotcomUrl })$/;"	C
url	lib/ui/package.json	/^    "url": "https:\/\/github.com\/sourcegraph\/cody",$/;"	s	object:repository
url	package.json	/^    "url": "https:\/\/github.com\/sourcegraph\/cody"$/;"	s	object:repository
url	slack/src/services/local-vector-store.ts	/^    const { content, url } = codyNotice$/;"	C	function:getDocuments
url	vscode/package.json	/^      "url": "https:\/\/img.shields.io\/discord\/969688426372825169?color=5765F2",$/;"	s	object:badges.0
url	vscode/package.json	/^    "url": "https:\/\/github.com\/sourcegraph\/cody",$/;"	s	object:repository
url	vscode/package.json	/^    "url": "https:\/\/github.com\/sourcegraph\/cody\/issues"$/;"	s	object:bugs
url	web/package.json	/^    "url": "https:\/\/github.com\/sourcegraph\/cody",$/;"	s	object:repository
urlReaderPlugin	lib/shared/src/plugins/built-in/index.ts	/^    urlReaderPlugin,$/;"	C
urlReaderPlugin	lib/shared/src/plugins/built-in/url-reader.ts	/^export const urlReaderPlugin: Plugin = {$/;"	C
use	vscode/src/non-stop/diff.ts	/^    const use = new Uint8Array((lenA + 1) * (lenB + 1))$/;"	C	function:longestCommonSubsequence
useA	vscode/src/non-stop/diff.ts	/^    const useA = longestCommonSubsequence(original, a)$/;"	C	function:computeChunks
useB	vscode/src/non-stop/diff.ts	/^    const useB = longestCommonSubsequence(original, b)$/;"	C	function:computeChunks
useClient	lib/shared/src/chat/useClient.ts	/^export const useClient = ({$/;"	C
useConfig	web/src/settings/useConfig.ts	/^export function useConfig(): [WebConfiguration, Dispatch<SetStateAction<WebConfiguration>>] {$/;"	f
useContext	lib/shared/src/configuration.ts	/^    useContext: ConfigurationUseContext$/;"	p	interface:Configuration
useContext	web/src/settings/useConfig.ts	/^    useContext: 'embeddings',$/;"	C
useLocalStorage	web/src/settings/useConfig.ts	/^function useLocalStorage<T>(key: string, initialValue: T): [T, Dispatch<SetStateAction<T>>] {$/;"	f
usedContextFiles	lib/shared/src/chat/transcript/interaction.ts	/^        private usedContextFiles: ContextFile[],$/;"	p	class:Interaction
usedContextFiles	lib/shared/src/chat/transcript/interaction.ts	/^    usedContextFiles: ContextFile[]$/;"	p	interface:InteractionJSON
usedFilenames	vscode/src/completions/context.ts	/^    const usedFilenames = new Set<string>()$/;"	C	function:getContext
user	lib/shared/src/plugins/built-in/github-issues.ts	/^    user: User | null$/;"	p	interface:Item
user	vscode/src/my-cody/MyPromptController.ts	/^        const user = this.tools.getUserInfo()$/;"	C	method:MyPromptController.constructor
user	vscode/src/my-cody/MyPromptController.ts	/^        const user = this.tools.getUserInfo()$/;"	C	method:MyPromptController.watcherInit
user	vscode/src/my-cody/MyToolsProvider.ts	/^    private user: { homeDir: string; workspaceRoot?: string; currentFilePath?: string }$/;"	p	class:MyToolsProvider
userDataDirectory	vscode/test/e2e/helpers.ts	/^            const userDataDirectory = mkdtempSync(path.join(tmpdir(), 'cody-vsce'))$/;"	C
userEmail	lib/shared/src/chat/recipes/generate-pr-description.ts	/^        const userEmail = spawnSync('git', ['config', 'user.email'], { cwd: dirPath })$/;"	C	method:PrDescription.getInteraction
userFileWatcher	vscode/src/my-cody/MyPromptController.ts	/^    public userFileWatcher: vscode.FileSystemWatcher | null = null$/;"	p	class:MyPromptController
userHistory	vscode/src/chat/ChatViewProvider.ts	/^        const userHistory = {$/;"	C
userHistory	vscode/src/services/LocalStorageProvider.ts	/^        const userHistory = this.getChatHistory()$/;"	C	method:LocalStorage.deleteChatHistory
userIcon	vscode/src/services/InlineController.ts	/^    private readonly userIcon: vscode.Uri$/;"	p	class:InlineController
userInfo	vscode/src/services/AuthProvider.ts	/^        const userInfo = await this.client.getCurrentUserIdAndVerifiedEmail()$/;"	C
userPref	vscode/src/main.ts	/^            const userPref = localStorage.get('rateLimitError')$/;"	C
userPrompts	vscode/src/my-cody/CustomRecipesBuilder.ts	/^            const userPrompts = await this.getPromptsFromFileSystem('user')$/;"	C	method:CustomRecipesBuilder.get
userPromptsJSON	vscode/src/my-cody/CustomRecipesBuilder.ts	/^    public userPromptsJSON: MyPromptsJSON | null = null$/;"	p	class:CustomRecipesBuilder
userQueryToExpandedKeywords	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    private async userQueryToExpandedKeywords(query: string): Promise<Map<string, Term>> {$/;"	m	class:LocalKeywordContextFetcher
userQueryToKeywordQuery	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    private async userQueryToKeywordQuery(query: string): Promise<Term[]> {$/;"	m	class:LocalKeywordContextFetcher
username	vscode/src/chat/protocol.ts	/^    username?: string$/;"	p	interface:AuthStatus
uuid	vscode/package.json	/^    "uuid": "^9.0.0",$/;"	s	object:dependencies
v	vscode/src/non-stop/diff.test.ts	/^        for (let v = 0; v < b.length; v++) {$/;"	v
v	vscode/src/non-stop/diff.test.ts	/^        for (let v = 0; v < palindrome.length; v++) {$/;"	v
v2_errorBoundary	completions-review-tool/remix.config.js	/^    v2_errorBoundary: true,$/;"	p	property:module.exports.future
v2_headers	completions-review-tool/remix.config.js	/^    v2_headers: true,$/;"	p	property:module.exports.future
v2_meta	completions-review-tool/remix.config.js	/^    v2_meta: true,$/;"	p	property:module.exports.future
v2_normalizeFormMethod	completions-review-tool/remix.config.js	/^    v2_normalizeFormMethod: true,$/;"	p	property:module.exports.future
v2_routeConvention	completions-review-tool/remix.config.js	/^    v2_routeConvention: true,$/;"	p	property:module.exports.future
validFilePaths	lib/shared/src/hallucinations-detector/index.test.ts	/^const validFilePaths = new Set(['file\/path.js', 'this\/is\/a\/directory', 'so\/is\/this', 'lib\//;"	C
validUser	vscode/src/chat/utils.test.ts	/^    const validUser = true$/;"	C
validateReleaseType	vscode/scripts/release.ts	/^function validateReleaseType(releaseType: string | undefined): asserts releaseType is ReleaseTyp/;"	f
value	vscode/src/configuration.ts	/^    const value = config.get(oldKey)$/;"	C	function:migrateDeprecatedConfigOption
value	vscode/src/local-context/local-keyword-context-fetcher.ts	/^    value: {$/;"	C
value	vscode/src/my-cody/MyPromptController.ts	/^        for (const [key, value] of this.myPromptStore) {$/;"	C	method:MyPromptController.save
value-keyword-case	.stylelintrc.json	/^    "value-keyword-case": null,$/;"	z	object:rules
vectorStore	slack/src/constants.ts	/^    vectorStore: HNSWLib$/;"	p	interface:AppContext
vectorStore	slack/src/mention-handler.ts	/^    const { codebaseContexts, vectorStore } = appContext$/;"	C	function:restoreTranscriptFromSlackThread
vectorStore	slack/src/services/local-vector-store.ts	/^    const vectorStore = await HNSWLib.fromDocuments(documents, embeddings)$/;"	C	function:getVectorStore
verifiedEmail	vscode/src/chat/utils.test.ts	/^    const verifiedEmail = true$/;"	C
verifyResponseCode	lib/shared/src/sourcegraph-api/graphql/client.ts	/^function verifyResponseCode(response: Response): Response {$/;"	f
version	.vscode/launch.json	/^  "version": "0.1.0",$/;"	s
version	.vscode/tasks.json	/^  "version": "2.0.0",$/;"	s
version	agent/package.json	/^  "version": "0.0.1",$/;"	s
version	agent/src/protocol.ts	/^    version: string$/;"	p	interface:ClientInfo
version	cli/package.json	/^  "version": "0.0.1",$/;"	s
version	lib/icons/package.json	/^  "version": "0.0.0",$/;"	s
version	lib/shared/package.json	/^  "version": "0.0.4",$/;"	s
version	lib/ui/package.json	/^  "version": "0.0.6",$/;"	s
version	node_modules/autopreview/package.json	/^  "version": "1.0.0",$/;"	s
version	slack/package.json	/^  "version": "0.0.1",$/;"	s
version	vscode/package.json	/^  "version": "0.6.1",$/;"	s
version	vscode/scripts/release.ts	/^const version = releaseType === ReleaseType.Insiders ? insidersVersion : packageJSONVersion$/;"	C
version	vscode/src/services/AuthProvider.ts	/^                const version = await res.text()$/;"	C
version	vscode/src/services/AuthProvider.ts	/^        const [{ enabled, version }, codyLLMConfiguration] = await Promise.all([$/;"	C
version	vscode/src/services/EventLogger.ts	/^        version: packageVersion,$/;"	C	function:logEvent
version	web/package.json	/^  "version": "0.0.1",$/;"	s
versionBeforeCody	lib/shared/src/sourcegraph-api/graphql/client.ts	/^        const versionBeforeCody = siteVersion < '5.0.0'$/;"	C	method:SourcegraphGraphQLAPIClient.isCodyEnabled
videoDirectory	vscode/test/e2e/helpers.ts	/^            const videoDirectory = path.join(codyRoot, '..', '..', 'playwright', escapeToPath(te/;"	C
view	vscode/package.json	/^        "view": "cody.fixup.tree.view",$/;"	s	object:contributes.viewsWelcome.0
view/item/context	vscode/package.json	/^      "view\/item\/context": [$/;"	a	object:contributes.menus
view/title	vscode/package.json	/^      "view\/title": [$/;"	a	object:contributes.menus
views	vscode/package.json	/^    "views": {$/;"	o	object:contributes
viewsContainers	vscode/package.json	/^    "viewsContainers": {$/;"	o	object:contributes
viewsWelcome	vscode/package.json	/^    "viewsWelcome": [$/;"	a	object:contributes
visibility	vscode/package.json	/^          "visibility": "visible"$/;"	s	object:contributes.menus.editor/title.0
visibility	vscode/package.json	/^          "visibility": "visible"$/;"	s	object:contributes.views.cody.0
visibleContent	lib/shared/src/chat/recipes/chat-question.ts	/^        const visibleContent = editor.getActiveTextEditorVisibleContent()$/;"	C	method:ChatQuestion.getEditorContext
visibleContent	lib/shared/src/chat/recipes/next-questions.ts	/^        const visibleContent = editor.getActiveTextEditorVisibleContent()$/;"	C	method:NextQuestions.getEditorContext
visibleRange	vscode/src/editor/vscode-editor.ts	/^        const visibleRange = visibleRanges[0]$/;"	C	method:VSCodeEditor.getActiveTextEditorVisibleContent
visibleRanges	vscode/src/editor/vscode-editor.ts	/^        const visibleRanges = activeEditor.visibleRanges$/;"	C	method:VSCodeEditor.getActiveTextEditorVisibleContent
visibleResults	vscode/src/completions/index.ts	/^    const visibleResults = filterCompletions(processedCompletions)$/;"	C	function:processCompletions
visibleUris	vscode/src/completions/context-local.ts	/^    const visibleUris = vscode.window.visibleTextEditors.flatMap(e =>$/;"	C	function:getRelevantFiles
visualize	vscode/test/fixtures/workspace/lib/codeintel/tools/lsif-visualize/visualize.go	/^package visualize$/;"	p
vite	package.json	/^    "vite": "^4.4.3",$/;"	s	object:devDependencies
vite-plugin-static-copy	vscode/package.json	/^    "vite-plugin-static-copy": "^0.16.0"$/;"	s	object:devDependencies
viteFinal	lib/ui/.storybook/main.ts	/^    async viteFinal(config) {$/;"	C
vitest	package.json	/^    "vitest": "^0.33.0"$/;"	s	object:devDependencies
void	agent/src/jsonrpc.ts	/^    private responseHandlers: Map<Id, (params: any) => void> = new Map()$/;"	p	class:MessageHandler
vsCodeApi	vscode/webviews/utils/VSCodeApi.ts	/^        const vsCodeApi = acquireVsCodeApi()$/;"	C	function:getVSCodeAPI
vsCodeMocks	vscode/src/testutils/mocks.ts	/^export const vsCodeMocks = {$/;"	C
vsCodeMocks	vscode/test/completions/mock-vscode.ts	/^const { vsCodeMocks } = require('..\/..\/src\/testutils\/mocks') as typeof import('..\/..\/src\//;"	C
vscode	vscode/package.json	/^    "vscode": "^1.79.0"$/;"	s	object:engines
vscode-uri	vscode/package.json	/^    "vscode-uri": "^3.0.7",$/;"	s	object:dependencies
vscode:prepublish	vscode/package.json	/^    "vscode:prepublish": "scripts\/download-rg.sh && pnpm --silent run build",$/;"	s	object:scripts
vscodeCodyRoot	vscode/test/integration/main.ts	/^    const vscodeCodyRoot = path.resolve(__dirname, '..', '..', '..', '..')$/;"	C	function:main
vscodeExecutablePath	vscode/test/e2e/helpers.ts	/^            const vscodeExecutablePath = await downloadAndUnzipVSCode('1.79.2')$/;"	C
vscodeMock	vscode/test/completions/mock-vscode.ts	/^const vscodeMock = {$/;"	C
waitUntil	vscode/test/e2e/helpers.ts	/^async function waitUntil(predicate: () => boolean | Promise<boolean>): Promise<void> {$/;"	f
waitUntil	vscode/test/integration/helpers.ts	/^async function waitUntil(predicate: () => Promise<boolean>): Promise<void> {$/;"	f
walkthroughs	vscode/package.json	/^    "walkthroughs": [$/;"	a	object:contributes
watch	package.json	/^    "watch": "tsc --build --watch",$/;"	s	object:scripts
watch	vscode/package.json	/^    "watch": "concurrently \\"pnpm run watch:esbuild\\" \\"pnpm run watch:webview\\"",$/;"	s	object:scripts
watch:esbuild	vscode/package.json	/^    "watch:esbuild": "pnpm run esbuild --sourcemap --watch",$/;"	s	object:scripts
watch:webview	vscode/package.json	/^    "watch:webview": "vite build --mode development --watch"$/;"	s	object:scripts
watchDirectory	tsconfig.base.json	/^    "watchDirectory": "useFsEvents",$/;"	s	object:watchOptions
watchFile	tsconfig.base.json	/^    "watchFile": "useFsEvents",$/;"	s	object:watchOptions
watchOptions	tsconfig.base.json	/^  "watchOptions": {$/;"	o
watchPattern	vscode/src/my-cody/helper.ts	/^    const watchPattern = new vscode.RelativePattern(fsPath, fileName)$/;"	C	function:createFileWatch
watchPattern	vscode/src/services/LocalAppDetector.ts	/^            const watchPattern = new vscode.RelativePattern(dirUri, marker.file)$/;"	C
watcher	vscode/src/my-cody/helper.ts	/^    const watcher = vscode.workspace.createFileSystemWatcher(watchPattern)$/;"	C	function:createFileWatch
watcher	vscode/src/services/LocalAppDetector.ts	/^            const watcher = vscode.workspace.createFileSystemWatcher(watchPattern)$/;"	C
watcher	vscode/src/services/LocalAppDetector.ts	/^        for (const watcher of this._watchers) {$/;"	C
watcherInit	vscode/src/my-cody/MyPromptController.ts	/^    private watcherInit(): void {$/;"	m	class:MyPromptController
weatherPlugin	lib/shared/src/plugins/built-in/weather.ts	/^export const weatherPlugin: Plugin = {$/;"	C
web	lib/shared/src/embeddings/client.ts	/^        private web: boolean = false$/;"	p	class:SourcegraphEmbeddingsSearchClient
webViewMessenger	vscode/src/my-cody/MyPromptController.ts	/^    private webViewMessenger: (() => Promise<void>) | null = null$/;"	p	class:MyPromptController
webviewErrorMessager	vscode/test/completions/utils.ts	/^export const webviewErrorMessager = async (error: string): Promise<void> => {$/;"	C
webviewErrorMessenger	vscode/src/main.ts	/^    const webviewErrorMessenger = async (error: string): Promise<void> => {$/;"	C
webviewPath	vscode/src/chat/ChatViewProvider.ts	/^        const webviewPath = vscode.Uri.joinPath(extensionPath, 'dist', 'webviews')$/;"	C
webviewPath	vscode/src/services/InlineAssist.ts	/^    const webviewPath = vscode.Uri.joinPath(extensionPath, 'dist\/webviews')$/;"	C	function:getIconPath
when	vscode/package.json	/^          "when": "!cody.activated && commentController =~ \/^cody-inline\/ && config.cody.inlin/;"	s	object:contributes.menus.comments/commentThread/context.1
when	vscode/package.json	/^          "when": "!cody.activated"$/;"	s	object:contributes.menus.cody.submenu.9
when	vscode/package.json	/^          "when": "!cody.activated"$/;"	s	object:contributes.menus.commandPalette.10
when	vscode/package.json	/^          "when": "cody.activated && cody.test.inProgress"$/;"	s	object:contributes.menus.commandPalette.11
when	vscode/package.json	/^          "when": "cody.activated && commentController =~ \/^cody-inline\/ && cody.replied && !c/;"	s	object:contributes.menus.comments/commentThread/title.0
when	vscode/package.json	/^          "when": "cody.activated && commentController =~ \/^cody-inline\/ && cody.reply.pending/;"	s	object:contributes.menus.comments/commentThread/title.1
when	vscode/package.json	/^          "when": "cody.activated && commentController =~ \/^cody-inline\/ && config.cody.inline/;"	s	object:contributes.menus.comments/commentThread/context.0
when	vscode/package.json	/^          "when": "cody.activated && commentController =~ \/^cody-inline\/ && config.cody.inline/;"	s	object:contributes.menus.comments/commentThread/title.2
when	vscode/package.json	/^          "when": "cody.activated && config.cody.experimental.customRecipes"$/;"	s	object:contributes.menus.cody.submenu.11
when	vscode/package.json	/^          "when": "cody.activated && config.cody.experimental.customRecipes"$/;"	s	object:contributes.menus.commandPalette.22
when	vscode/package.json	/^          "when": "cody.activated && config.cody.experimental.guardrails && editorHasSelection"$/;"	s	object:contributes.menus.cody.submenu.10
when	vscode/package.json	/^          "when": "cody.activated && config.cody.inlineChat.enabled"$/;"	s	object:contributes.menus.cody.submenu.2
when	vscode/package.json	/^          "when": "cody.activated && editorHasSelection"$/;"	s	object:contributes.menus.commandPalette.0
when	vscode/package.json	/^          "when": "cody.activated && editorHasSelection"$/;"	s	object:contributes.menus.commandPalette.2
when	vscode/package.json	/^          "when": "cody.activated && editorHasSelection"$/;"	s	object:contributes.menus.commandPalette.4
when	vscode/package.json	/^          "when": "cody.activated && editorHasSelection"$/;"	s	object:contributes.menus.commandPalette.5
when	vscode/package.json	/^          "when": "cody.activated && editorHasSelection"$/;"	s	object:contributes.menus.commandPalette.6
when	vscode/package.json	/^          "when": "cody.activated && editorHasSelection"$/;"	s	object:contributes.menus.commandPalette.8
when	vscode/package.json	/^          "when": "cody.activated && editorHasSelection"$/;"	s	object:contributes.menus.commandPalette.9
when	vscode/package.json	/^          "when": "cody.activated"$/;"	s	object:contributes.menus.cody.submenu.0
when	vscode/package.json	/^          "when": "cody.activated"$/;"	s	object:contributes.menus.cody.submenu.1
when	vscode/package.json	/^          "when": "cody.activated"$/;"	s	object:contributes.menus.cody.submenu.3
when	vscode/package.json	/^          "when": "cody.activated"$/;"	s	object:contributes.menus.cody.submenu.4
when	vscode/package.json	/^          "when": "cody.activated"$/;"	s	object:contributes.menus.cody.submenu.5
when	vscode/package.json	/^          "when": "cody.activated"$/;"	s	object:contributes.menus.cody.submenu.6
when	vscode/package.json	/^          "when": "cody.activated"$/;"	s	object:contributes.menus.cody.submenu.7
when	vscode/package.json	/^          "when": "cody.activated"$/;"	s	object:contributes.menus.cody.submenu.8
when	vscode/package.json	/^          "when": "cody.activated"$/;"	s	object:contributes.menus.commandPalette.1
when	vscode/package.json	/^          "when": "cody.activated"$/;"	s	object:contributes.menus.commandPalette.7
when	vscode/package.json	/^          "when": "cody.nonstop.fixups.enabled && cody.activated",$/;"	s	object:contributes.menus.editor/title.0
when	vscode/package.json	/^          "when": "cody.nonstop.fixups.enabled && cody.activated",$/;"	s	object:contributes.views.cody.1
when	vscode/package.json	/^          "when": "cody.nonstop.fixups.enabled && view == cody.fixup.tree.view && cody.activated/;"	s	object:contributes.menus.view/item/context.0
when	vscode/package.json	/^          "when": "cody.nonstop.fixups.enabled && view == cody.fixup.tree.view && cody.activated/;"	s	object:contributes.menus.view/item/context.1
when	vscode/package.json	/^          "when": "cody.nonstop.fixups.enabled && view == cody.fixup.tree.view && cody.activated/;"	s	object:contributes.menus.view/item/context.2
when	vscode/package.json	/^          "when": "cody.nonstop.fixups.enabled && view == cody.fixup.tree.view && cody.activated/;"	s	object:contributes.menus.view/title.8
when	vscode/package.json	/^          "when": "config.cody.experimental.guardrails && editorHasSelection"$/;"	s	object:contributes.menus.commandPalette.21
when	vscode/package.json	/^          "when": "false"$/;"	s	object:contributes.menus.commandPalette.12
when	vscode/package.json	/^          "when": "false"$/;"	s	object:contributes.menus.commandPalette.13
when	vscode/package.json	/^          "when": "false"$/;"	s	object:contributes.menus.commandPalette.14
when	vscode/package.json	/^          "when": "false"$/;"	s	object:contributes.menus.commandPalette.15
when	vscode/package.json	/^          "when": "false"$/;"	s	object:contributes.menus.commandPalette.16
when	vscode/package.json	/^          "when": "false"$/;"	s	object:contributes.menus.commandPalette.17
when	vscode/package.json	/^          "when": "false"$/;"	s	object:contributes.menus.commandPalette.18
when	vscode/package.json	/^          "when": "false"$/;"	s	object:contributes.menus.commandPalette.19
when	vscode/package.json	/^          "when": "false"$/;"	s	object:contributes.menus.commandPalette.20
when	vscode/package.json	/^          "when": "false"$/;"	s	object:contributes.menus.commandPalette.3
when	vscode/package.json	/^          "when": "view == cody.chat && cody.activated && cody.test.inProgress",$/;"	s	object:contributes.menus.view/title.6
when	vscode/package.json	/^          "when": "view == cody.chat && cody.activated",$/;"	s	object:contributes.menus.view/title.0
when	vscode/package.json	/^          "when": "view == cody.chat && cody.activated",$/;"	s	object:contributes.menus.view/title.1
when	vscode/package.json	/^          "when": "view == cody.chat && cody.activated",$/;"	s	object:contributes.menus.view/title.4
when	vscode/package.json	/^          "when": "view == cody.chat && cody.activated",$/;"	s	object:contributes.menus.view/title.5
when	vscode/package.json	/^          "when": "view == cody.chat",$/;"	s	object:contributes.menus.view/title.2
when	vscode/package.json	/^          "when": "view == cody.chat",$/;"	s	object:contributes.menus.view/title.3
when	vscode/package.json	/^          "when": "view == cody.chat",$/;"	s	object:contributes.menus.view/title.7
when	vscode/package.json	/^        "when": "cody.activated && config.cody.inlineChat.enabled",$/;"	s	object:contributes.commands.19
when	vscode/package.json	/^        "when": "cody.activated && config.cody.inlineChat.enabled",$/;"	s	object:contributes.commands.20
when	vscode/package.json	/^        "when": "cody.activated && config.cody.inlineChat.enabled",$/;"	s	object:contributes.commands.21
when	vscode/package.json	/^        "when": "cody.activated && config.cody.inlineChat.enabled",$/;"	s	object:contributes.commands.22
when	vscode/package.json	/^        "when": "cody.activated && config.cody.inlineChat.enabled",$/;"	s	object:contributes.commands.23
when	vscode/package.json	/^        "when": "cody.activated && editorFocus && config.cody.inlineChat.enabled"$/;"	s	object:contributes.keybindings.4
when	vscode/package.json	/^        "when": "cody.activated && editorFocus"$/;"	s	object:contributes.keybindings.5
when	vscode/package.json	/^        "when": "cody.activated && editorHasSelection && !editorReadonly"$/;"	s	object:contributes.keybindings.2
when	vscode/package.json	/^        "when": "cody.activated && editorTextFocus && !editorReadonly"$/;"	s	object:contributes.keybindings.1
when	vscode/package.json	/^        "when": "cody.activated && editorTextFocus && editorHasSelection && config.cody.inlineCh/;"	s	object:contributes.keybindings.3
when	vscode/package.json	/^        "when": "cody.activated",$/;"	s	object:contributes.commands.32
when	vscode/package.json	/^        "when": "cody.nonstop.fixups.enabled && cody.activated"$/;"	s	object:contributes.viewsWelcome.0
when	vscode/package.json	/^        "when": "cody.nonstop.fixups.enabled",$/;"	s	object:contributes.commands.26
when	vscode/package.json	/^        "when": "cody.nonstop.fixups.enabled",$/;"	s	object:contributes.commands.27
when	vscode/package.json	/^        "when": "cody.nonstop.fixups.enabled",$/;"	s	object:contributes.commands.28
when	vscode/package.json	/^        "when": "cody.nonstop.fixups.enabled",$/;"	s	object:contributes.commands.29
when	vscode/package.json	/^        "when": "cody.nonstop.fixups.enabled",$/;"	s	object:contributes.commands.30
when	vscode/package.json	/^        "when": "cody.nonstop.fixups.enabled",$/;"	s	object:contributes.commands.31
whitespace	vscode/src/completions/text-processing.ts	/^        const whitespace = regex[0]$/;"	C	function:indentation
window	vscode/src/testutils/mocks.ts	/^    window: {$/;"	C
windowIncrease	vscode/src/completions/bestJaccardMatch.ts	/^        const { windowIncrease, intersectionIncrease } = add($/;"	C	function:bestJaccardMatch
windowWords	vscode/src/completions/bestJaccardMatch.ts	/^    const windowWords = new Map<string, number>()$/;"	C	function:bestJaccardMatch
windows	vscode/src/completions/providers/unstable-codegen.ts	/^    const windows: Context['windows'] = []$/;"	C	function:prepareContext
windows	vscode/src/completions/providers/unstable-codegen.ts	/^    windows: {$/;"	p	interface:Context
wink-eng-lite-web-model	vscode/package.json	/^    "wink-eng-lite-web-model": "^1.5.0",$/;"	s	object:dependencies
wink-nlp	vscode/package.json	/^    "wink-nlp": "^1.13.1",$/;"	s	object:dependencies
wink-nlp-utils	vscode/package.json	/^    "wink-nlp-utils": "^2.1.0"$/;"	s	object:dependencies
winkUtils	vscode/src/wink-nlp-utils.d.ts	/^    declare namespace winkUtils {$/;"	n
withPreselectedOptions	lib/shared/src/editor/withPreselectedOptions.ts	/^export function withPreselectedOptions(editor: Editor, preselectedOptions: PrefilledOptions): Ed/;"	f
withTemporaryGitRepository	cli/src/gitHelpers/testHelpers.ts	/^export async function withTemporaryGitRepository<T>({$/;"	C
word	vscode/src/completions/bestJaccardMatch.ts	/^    for (const [word, wordCount] of targetWords.entries()) {$/;"	C	function:bestJaccardMatch
wordCount	vscode/src/completions/bestJaccardMatch.ts	/^    const wordCount = (words: Map<string, number>): number => {$/;"	C	function:bestJaccardMatch
wordCount	vscode/src/completions/bestJaccardMatch.ts	/^    for (const [word, wordCount] of targetWords.entries()) {$/;"	C	function:bestJaccardMatch
wordInThisLine	vscode/src/completions/bestJaccardMatch.ts	/^        for (const [wordInThisLine, wordInThisLineCount] of wordsForEachLine[i].entries()) {$/;"	C	function:bestJaccardMatch
wordInThisLineCount	vscode/src/completions/bestJaccardMatch.ts	/^        for (const [wordInThisLine, wordInThisLineCount] of wordsForEachLine[i].entries()) {$/;"	C	function:bestJaccardMatch
words	vscode/src/completions/bestJaccardMatch.ts	/^    const words = winkUtils.string.tokenize0(s)$/;"	C	function:getWords
wordsForEachLine	vscode/src/completions/bestJaccardMatch.ts	/^    const wordsForEachLine = lines.map(line => getWords(line))$/;"	C	function:bestJaccardMatch
work_	vscode/src/non-stop/FixupScheduler.ts	/^    private work_: (() => void)[] = []$/;"	p	class:FixupScheduler
workspaceConfig	vscode/src/log.ts	/^    const workspaceConfig = vscode.workspace.getConfiguration()$/;"	C	function:debug
workspaceConfig	vscode/src/main.ts	/^    const workspaceConfig = vscode.workspace.getConfiguration()$/;"	C
workspaceDirectory	vscode/test/e2e/helpers.ts	/^            const workspaceDirectory = path.join(codyRoot, 'test', 'fixtures', 'workspace')$/;"	C
workspaceEditor	lib/shared/src/chat/recipes/inline-touch.ts	/^                const workspaceEditor = new vscode.WorkspaceEdit()$/;"	C
workspaceEditor	vscode/src/my-cody/helper.ts	/^    const workspaceEditor = new vscode.WorkspaceEdit()$/;"	C	function:saveJSONFile
workspaceFolders	vscode/test/integration/local-search.test.ts	/^        const workspaceFolders = vscode.workspace.workspaceFolders$/;"	C
workspacePath	lib/shared/src/chat/recipes/inline-touch.ts	/^    private workspacePath = vscode.workspace.workspaceFolders?.[0].uri$/;"	p	class:InlineTouch
workspacePath	vscode/src/services/InlineController.ts	/^    private workspacePath = vscode.workspace.workspaceFolders?.[0].uri$/;"	p	class:InlineController
workspaceRoot	vscode/src/chat/ChatViewProvider.ts	/^        const workspaceRoot = this.editor.getWorkspaceRootPath()$/;"	C
workspaceRoot	vscode/src/chat/ChatViewProvider.ts	/^    const workspaceRoot = editor.getWorkspaceRootPath()$/;"	C	function:getCodebaseContext
workspaceRoot	vscode/src/my-cody/CustomRecipesBuilder.ts	/^        private workspaceRoot?: string,$/;"	p	class:CustomRecipesBuilder
workspaceRootPath	agent/src/protocol.ts	/^    workspaceRootPath: string$/;"	p	interface:ClientInfo
write	lib/shared/src/chat/typewriter.ts	/^    write: (incomingText: string) => void$/;"	p	interface:Typewriter
writeAndGitAddFile	cli/src/gitHelpers/testHelpers.ts	/^async function writeAndGitAddFile(gitDir: string, name: string, contents: string): Promise<void>/;"	f
wsFileWatcher	vscode/src/my-cody/MyPromptController.ts	/^    public wsFileWatcher: vscode.FileSystemWatcher | null = null$/;"	p	class:MyPromptController
wsFolder	vscode/src/editor/vscode-editor.ts	/^            const wsFolder = vscode.workspace.getWorkspaceFolder(uri)$/;"	C	method:VSCodeEditor.getWorkspaceRootPath
wsPrompts	vscode/src/my-cody/CustomRecipesBuilder.ts	/^            const wsPrompts = await this.getPromptsFromFileSystem('workspace')$/;"	C	method:CustomRecipesBuilder.get
wsRootPath	lib/shared/src/chat/recipes/context-search.ts	/^        const wsRootPath = context.editor.getWorkspaceRootPath()$/;"	C	method:ContextSearch.getInteraction
xff	lib/shared/src/sourcegraph-api/utils.ts	/^        const mask = 0xff ^ ((1 << (7 - numBytes)) - 1)$/;"	C
xlink	lib/icons/svg-originals/A.svg	/^	 viewBox="0 0 16 16" style="enable-background:new 0 0 16 16;" xml:space="preserve">$/;"	n	uri:http://www.w3.org/1999/xlink
xlink	lib/icons/svg-originals/B.svg	/^	 viewBox="0 0 16 16" style="enable-background:new 0 0 16 16;" xml:space="preserve">$/;"	n	uri:http://www.w3.org/1999/xlink
xml2js	lib/shared/package.json	/^    "xml2js": "^0.6.0"$/;"	s	object:dependencies
